
;; Function rfftf (rfftf_)

rfftf (integer(kind=4) & restrict n, real(kind=4)[1] * restrict r, real(kind=4)[1] * restrict wsave)
{
  real(kind=4) * D.1861;
  integer(kind=8) D.1860;
  integer(kind=8) D.1859;
  integer(kind=4) D.1858;
  integer(kind=4) D.1857;
  real(kind=4) * D.1856;
  integer(kind=8) D.1855;
  integer(kind=8) D.1854;
  integer(kind=4) D.1853;
  integer(kind=4) D.1852;
  integer(kind=4) D.1851;
  integer(kind=4) D.1848;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.1848_2 = *n_1(D);
  if (D.1848_2 == 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1851_3 = *n_1(D);
  D.1852_4 = D.1851_3 * 2;
  D.1853_5 = D.1852_4 + 1;
  D.1854_6 = (integer(kind=8)) D.1853_5;
  D.1855_7 = D.1854_6 + -1;
  D.1856_9 = &*wsave_8(D)[D.1855_7];
  D.1857_10 = *n_1(D);
  D.1858_11 = D.1857_10 + 1;
  D.1859_12 = (integer(kind=8)) D.1858_11;
  D.1860_13 = D.1859_12 + -1;
  D.1861_14 = &*wsave_8(D)[D.1860_13];
  rfftf1 (n_1(D), r_15(D), wsave_8(D), D.1861_14, D.1856_9);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (n_1(D) - 1 )
Partition 2 (D.1848_2 - 2 )
Partition 3 (D.1851_3 - 3 )
Partition 4 (D.1852_4 - 4 )
Partition 5 (D.1853_5 - 5 )
Partition 6 (D.1854_6 - 6 )
Partition 7 (D.1855_7 - 7 )
Partition 8 (wsave_8(D) - 8 )
Partition 9 (D.1856_9 - 9 )
Partition 10 (D.1857_10 - 10 )
Partition 11 (D.1858_11 - 11 )
Partition 12 (D.1859_12 - 12 )
Partition 13 (D.1860_13 - 13 )
Partition 14 (D.1861_14 - 14 )
Partition 15 (r_15(D) - 15 )


Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (wsave_8(D) - 8 )
Partition 2 (r_15(D) - 15 )


Live on entry to BB2 : n_1(D)  wsave_8(D)  r_15(D)  

Live on entry to BB3 : 

Live on entry to BB4 : n_1(D)  wsave_8(D)  r_15(D)  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (wsave_8(D) - 8 )
Partition 2 (r_15(D) - 15 )

After Coalescing:

Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (D.1848_2 - 2 )
Partition 2 (D.1851_3 - 3 )
Partition 3 (D.1852_4 - 4 )
Partition 4 (D.1853_5 - 5 )
Partition 5 (D.1854_6 - 6 )
Partition 6 (D.1855_7 - 7 )
Partition 7 (wsave_8(D) - 8 )
Partition 8 (D.1856_9 - 9 )
Partition 9 (D.1857_10 - 10 )
Partition 10 (D.1858_11 - 11 )
Partition 11 (D.1859_12 - 12 )
Partition 12 (D.1860_13 - 13 )
Partition 13 (D.1861_14 - 14 )
Partition 14 (r_15(D) - 15 )

rfftf (integer(kind=4) & restrict n, real(kind=4)[1] * restrict r, real(kind=4)[1] * restrict wsave)
{
  real(kind=4) * D.1861;
  integer(kind=8) D.1860;
  integer(kind=8) D.1859;
  integer(kind=4) D.1858;
  integer(kind=4) D.1857;
  real(kind=4) * D.1856;
  integer(kind=8) D.1855;
  integer(kind=8) D.1854;
  integer(kind=4) D.1853;
  integer(kind=4) D.1852;
  integer(kind=4) D.1851;
  integer(kind=4) D.1848;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.1848_2 = *n_1(D);
  if (D.1848_2 == 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1851_3 = *n_1(D);
  D.1852_4 = D.1851_3 * 2;
  D.1853_5 = D.1852_4 + 1;
  D.1854_6 = (integer(kind=8)) D.1853_5;
  D.1855_7 = D.1854_6 + -1;
  D.1856_9 = &*wsave_8(D)[D.1855_7];
  D.1857_10 = *n_1(D);
  D.1858_11 = D.1857_10 + 1;
  D.1859_12 = (integer(kind=8)) D.1858_11;
  D.1860_13 = D.1859_12 + -1;
  D.1861_14 = &*wsave_8(D)[D.1860_13];
  rfftf1 (n_1(D), r_15(D), wsave_8(D), D.1861_14, D.1856_9);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; D.1848_2 = *n_1(D);

(insn 8 7 9 (set (reg/f:DI 71)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:92 -1
     (nil))

(insn 9 8 0 (set (reg:SI 59 [ D.1848 ])
        (mem:SI (reg/f:DI 71) [0 *n_1(D)+0 S4 A32])) Test6.f08:92 -1
     (nil))

;; if (D.1848_2 == 1)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.1848 ])
            (const_int 1 [0x1]))) Test6.f08:92 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:92 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 2 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; D.1851_3 = *n_1(D);

(insn 17 16 18 (set (reg/f:DI 72)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 18 17 0 (set (reg:SI 60 [ D.1851 ])
        (mem:SI (reg/f:DI 72) [0 *n_1(D)+0 S4 A32])) Test6.f08:93 -1
     (nil))

;; D.1852_4 = D.1851_3 * 2;

(insn 19 18 0 (parallel [
            (set (reg:SI 61 [ D.1852 ])
                (ashift:SI (reg:SI 60 [ D.1851 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1853_5 = D.1852_4 + 1;

(insn 20 19 0 (parallel [
            (set (reg:SI 62 [ D.1853 ])
                (plus:SI (reg:SI 61 [ D.1852 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1854_6 = (integer(kind=8)) D.1853_5;

(insn 21 20 0 (set (reg:DI 63 [ D.1854 ])
        (sign_extend:DI (reg:SI 62 [ D.1853 ]))) Test6.f08:93 -1
     (nil))

;; D.1855_7 = D.1854_6 + -1;

(insn 22 21 0 (parallel [
            (set (reg:DI 64 [ D.1855 ])
                (plus:DI (reg:DI 63 [ D.1854 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1856_9 = &*wsave_8(D)[D.1855_7];

(insn 23 22 24 (parallel [
            (set (reg:DI 73)
                (ashift:DI (reg:DI 64 [ D.1855 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 24 23 0 (parallel [
            (set (reg/f:DI 65 [ D.1856 ])
                (plus:DI (reg:DI 73)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1857_10 = *n_1(D);

(insn 25 24 26 (set (reg/f:DI 74)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 26 25 0 (set (reg:SI 66 [ D.1857 ])
        (mem:SI (reg/f:DI 74) [0 *n_1(D)+0 S4 A32])) Test6.f08:93 -1
     (nil))

;; D.1858_11 = D.1857_10 + 1;

(insn 27 26 0 (parallel [
            (set (reg:SI 67 [ D.1858 ])
                (plus:SI (reg:SI 66 [ D.1857 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1859_12 = (integer(kind=8)) D.1858_11;

(insn 28 27 0 (set (reg:DI 68 [ D.1859 ])
        (sign_extend:DI (reg:SI 67 [ D.1858 ]))) Test6.f08:93 -1
     (nil))

;; D.1860_13 = D.1859_12 + -1;

(insn 29 28 0 (parallel [
            (set (reg:DI 69 [ D.1860 ])
                (plus:DI (reg:DI 68 [ D.1859 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; D.1861_14 = &*wsave_8(D)[D.1860_13];

(insn 30 29 31 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 69 [ D.1860 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 31 30 0 (parallel [
            (set (reg/f:DI 70 [ D.1861 ])
                (plus:DI (reg:DI 75)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

;; rfftf1 (n_1(D), r_15(D), wsave_8(D), D.1861_14, D.1856_9);

(insn 32 31 33 (set (reg:DI 76)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 33 32 34 (set (reg:DI 77)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 r+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 34 33 35 (set (reg:DI 78)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 35 34 36 (set (reg:DI 37 r8)
        (reg/f:DI 65 [ D.1856 ])) Test6.f08:93 -1
     (nil))

(insn 36 35 37 (set (reg:DI 2 cx)
        (reg/f:DI 70 [ D.1861 ])) Test6.f08:93 -1
     (nil))

(insn 37 36 38 (set (reg:DI 1 dx)
        (reg:DI 76)) Test6.f08:93 -1
     (nil))

(insn 38 37 39 (set (reg:DI 4 si)
        (reg:DI 77)) Test6.f08:93 -1
     (nil))

(insn 39 38 40 (set (reg:DI 5 di)
        (reg:DI 78)) Test6.f08:93 -1
     (nil))

(insn 40 39 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:93 -1
     (nil))

(call_insn 41 40 0 (call (mem:QI (symbol_ref:DI ("rfftf1_") [flags 0x41]  <function_decl 0x7fc95ddfdc00 rfftf1>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:93 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 42 41 43 3 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 5 di [ n ])) Test6.f08:90 -1
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 r+0 S8 A64])
        (reg:DI 4 si [ r ])) Test6.f08:90 -1
     (nil))

(insn 4 3 5 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])
        (reg:DI 1 dx [ wsave ])) Test6.f08:90 -1
     (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 (set (reg/f:DI 71)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:92 -1
     (nil))

(insn 9 8 10 3 (set (reg:SI 59 [ D.1848 ])
        (mem:SI (reg/f:DI 71) [0 *n_1(D)+0 S4 A32])) Test6.f08:92 -1
     (nil))

(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.1848 ])
            (const_int 1 [0x1]))) Test6.f08:92 -1
     (nil))

(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) Test6.f08:92 -1
     (nil)
 -> 15)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 13 12 14 4 (set (pc)
        (label_ref 42)) Test6.f08:92 -1
     (nil)
 -> 42)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 14 13 15)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 15 14 16 5 2 "" [1 uses])

(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 (set (reg/f:DI 72)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 18 17 19 5 (set (reg:SI 60 [ D.1851 ])
        (mem:SI (reg/f:DI 72) [0 *n_1(D)+0 S4 A32])) Test6.f08:93 -1
     (nil))

(insn 19 18 20 5 (parallel [
            (set (reg:SI 61 [ D.1852 ])
                (ashift:SI (reg:SI 60 [ D.1851 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 20 19 21 5 (parallel [
            (set (reg:SI 62 [ D.1853 ])
                (plus:SI (reg:SI 61 [ D.1852 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 21 20 22 5 (set (reg:DI 63 [ D.1854 ])
        (sign_extend:DI (reg:SI 62 [ D.1853 ]))) Test6.f08:93 -1
     (nil))

(insn 22 21 23 5 (parallel [
            (set (reg:DI 64 [ D.1855 ])
                (plus:DI (reg:DI 63 [ D.1854 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 23 22 24 5 (parallel [
            (set (reg:DI 73)
                (ashift:DI (reg:DI 64 [ D.1855 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 65 [ D.1856 ])
                (plus:DI (reg:DI 73)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 25 24 26 5 (set (reg/f:DI 74)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 26 25 27 5 (set (reg:SI 66 [ D.1857 ])
        (mem:SI (reg/f:DI 74) [0 *n_1(D)+0 S4 A32])) Test6.f08:93 -1
     (nil))

(insn 27 26 28 5 (parallel [
            (set (reg:SI 67 [ D.1858 ])
                (plus:SI (reg:SI 66 [ D.1857 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 28 27 29 5 (set (reg:DI 68 [ D.1859 ])
        (sign_extend:DI (reg:SI 67 [ D.1858 ]))) Test6.f08:93 -1
     (nil))

(insn 29 28 30 5 (parallel [
            (set (reg:DI 69 [ D.1860 ])
                (plus:DI (reg:DI 68 [ D.1859 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 30 29 31 5 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 69 [ D.1860 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 31 30 32 5 (parallel [
            (set (reg/f:DI 70 [ D.1861 ])
                (plus:DI (reg:DI 75)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:93 -1
     (nil))

(insn 32 31 33 5 (set (reg:DI 76)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 wsave+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 33 32 34 5 (set (reg:DI 77)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 r+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 34 33 35 5 (set (reg:DI 78)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:93 -1
     (nil))

(insn 35 34 36 5 (set (reg:DI 37 r8)
        (reg/f:DI 65 [ D.1856 ])) Test6.f08:93 -1
     (nil))

(insn 36 35 37 5 (set (reg:DI 2 cx)
        (reg/f:DI 70 [ D.1861 ])) Test6.f08:93 -1
     (nil))

(insn 37 36 38 5 (set (reg:DI 1 dx)
        (reg:DI 76)) Test6.f08:93 -1
     (nil))

(insn 38 37 39 5 (set (reg:DI 4 si)
        (reg:DI 77)) Test6.f08:93 -1
     (nil))

(insn 39 38 40 5 (set (reg:DI 5 di)
        (reg:DI 78)) Test6.f08:93 -1
     (nil))

(insn 40 39 41 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:93 -1
     (nil))

(call_insn 41 40 42 5 (call (mem:QI (symbol_ref:DI ("rfftf1_") [flags 0x41]  <function_decl 0x7fc95ddfdc00 rfftf1>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:93 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                            (nil))))))))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 42 41 43 6 3 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(code_label 44 43 45 7 1 "" [0 uses])

(note 45 44 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function rffti (rffti_)

rffti (integer(kind=4) & restrict n, real(kind=4)[1] * restrict wsave)
{
  real(kind=4) * D.1846;
  integer(kind=8) D.1845;
  integer(kind=8) D.1844;
  integer(kind=4) D.1843;
  integer(kind=4) D.1842;
  real(kind=4) * D.1841;
  integer(kind=8) D.1840;
  integer(kind=8) D.1839;
  integer(kind=4) D.1838;
  integer(kind=4) D.1837;
  integer(kind=4) D.1836;
  integer(kind=4) D.1833;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.1833_2 = *n_1(D);
  if (D.1833_2 == 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1836_3 = *n_1(D);
  D.1837_4 = D.1836_3 * 2;
  D.1838_5 = D.1837_4 + 1;
  D.1839_6 = (integer(kind=8)) D.1838_5;
  D.1840_7 = D.1839_6 + -1;
  D.1841_9 = &*wsave_8(D)[D.1840_7];
  D.1842_10 = *n_1(D);
  D.1843_11 = D.1842_10 + 1;
  D.1844_12 = (integer(kind=8)) D.1843_11;
  D.1845_13 = D.1844_12 + -1;
  D.1846_14 = &*wsave_8(D)[D.1845_13];
  rffti1 (n_1(D), D.1846_14, D.1841_9);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (n_1(D) - 1 )
Partition 2 (D.1833_2 - 2 )
Partition 3 (D.1836_3 - 3 )
Partition 4 (D.1837_4 - 4 )
Partition 5 (D.1838_5 - 5 )
Partition 6 (D.1839_6 - 6 )
Partition 7 (D.1840_7 - 7 )
Partition 8 (wsave_8(D) - 8 )
Partition 9 (D.1841_9 - 9 )
Partition 10 (D.1842_10 - 10 )
Partition 11 (D.1843_11 - 11 )
Partition 12 (D.1844_12 - 12 )
Partition 13 (D.1845_13 - 13 )
Partition 14 (D.1846_14 - 14 )


Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (wsave_8(D) - 8 )


Live on entry to BB2 : n_1(D)  wsave_8(D)  

Live on entry to BB3 : 

Live on entry to BB4 : n_1(D)  wsave_8(D)  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (wsave_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (n_1(D) - 1 )
Partition 1 (D.1833_2 - 2 )
Partition 2 (D.1836_3 - 3 )
Partition 3 (D.1837_4 - 4 )
Partition 4 (D.1838_5 - 5 )
Partition 5 (D.1839_6 - 6 )
Partition 6 (D.1840_7 - 7 )
Partition 7 (wsave_8(D) - 8 )
Partition 8 (D.1841_9 - 9 )
Partition 9 (D.1842_10 - 10 )
Partition 10 (D.1843_11 - 11 )
Partition 11 (D.1844_12 - 12 )
Partition 12 (D.1845_13 - 13 )
Partition 13 (D.1846_14 - 14 )

rffti (integer(kind=4) & restrict n, real(kind=4)[1] * restrict wsave)
{
  real(kind=4) * D.1846;
  integer(kind=8) D.1845;
  integer(kind=8) D.1844;
  integer(kind=4) D.1843;
  integer(kind=4) D.1842;
  real(kind=4) * D.1841;
  integer(kind=8) D.1840;
  integer(kind=8) D.1839;
  integer(kind=4) D.1838;
  integer(kind=4) D.1837;
  integer(kind=4) D.1836;
  integer(kind=4) D.1833;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.1833_2 = *n_1(D);
  if (D.1833_2 == 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1836_3 = *n_1(D);
  D.1837_4 = D.1836_3 * 2;
  D.1838_5 = D.1837_4 + 1;
  D.1839_6 = (integer(kind=8)) D.1838_5;
  D.1840_7 = D.1839_6 + -1;
  D.1841_9 = &*wsave_8(D)[D.1840_7];
  D.1842_10 = *n_1(D);
  D.1843_11 = D.1842_10 + 1;
  D.1844_12 = (integer(kind=8)) D.1843_11;
  D.1845_13 = D.1844_12 + -1;
  D.1846_14 = &*wsave_8(D)[D.1845_13];
  rffti1 (n_1(D), D.1846_14, D.1841_9);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; D.1833_2 = *n_1(D);

(insn 7 6 8 (set (reg/f:DI 71)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:84 -1
     (nil))

(insn 8 7 0 (set (reg:SI 59 [ D.1833 ])
        (mem:SI (reg/f:DI 71) [0 *n_1(D)+0 S4 A32])) Test6.f08:84 -1
     (nil))

;; if (D.1833_2 == 1)

(insn 9 8 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.1833 ])
            (const_int 1 [0x1]))) Test6.f08:84 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:84 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 14 13 15 5 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; D.1836_3 = *n_1(D);

(insn 16 15 17 (set (reg/f:DI 72)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 17 16 0 (set (reg:SI 60 [ D.1836 ])
        (mem:SI (reg/f:DI 72) [0 *n_1(D)+0 S4 A32])) Test6.f08:85 -1
     (nil))

;; D.1837_4 = D.1836_3 * 2;

(insn 18 17 0 (parallel [
            (set (reg:SI 61 [ D.1837 ])
                (ashift:SI (reg:SI 60 [ D.1836 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1838_5 = D.1837_4 + 1;

(insn 19 18 0 (parallel [
            (set (reg:SI 62 [ D.1838 ])
                (plus:SI (reg:SI 61 [ D.1837 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1839_6 = (integer(kind=8)) D.1838_5;

(insn 20 19 0 (set (reg:DI 63 [ D.1839 ])
        (sign_extend:DI (reg:SI 62 [ D.1838 ]))) Test6.f08:85 -1
     (nil))

;; D.1840_7 = D.1839_6 + -1;

(insn 21 20 0 (parallel [
            (set (reg:DI 64 [ D.1840 ])
                (plus:DI (reg:DI 63 [ D.1839 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1841_9 = &*wsave_8(D)[D.1840_7];

(insn 22 21 23 (parallel [
            (set (reg:DI 73)
                (ashift:DI (reg:DI 64 [ D.1840 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 23 22 0 (parallel [
            (set (reg/f:DI 65 [ D.1841 ])
                (plus:DI (reg:DI 73)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1842_10 = *n_1(D);

(insn 24 23 25 (set (reg/f:DI 74)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 25 24 0 (set (reg:SI 66 [ D.1842 ])
        (mem:SI (reg/f:DI 74) [0 *n_1(D)+0 S4 A32])) Test6.f08:85 -1
     (nil))

;; D.1843_11 = D.1842_10 + 1;

(insn 26 25 0 (parallel [
            (set (reg:SI 67 [ D.1843 ])
                (plus:SI (reg:SI 66 [ D.1842 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1844_12 = (integer(kind=8)) D.1843_11;

(insn 27 26 0 (set (reg:DI 68 [ D.1844 ])
        (sign_extend:DI (reg:SI 67 [ D.1843 ]))) Test6.f08:85 -1
     (nil))

;; D.1845_13 = D.1844_12 + -1;

(insn 28 27 0 (parallel [
            (set (reg:DI 69 [ D.1845 ])
                (plus:DI (reg:DI 68 [ D.1844 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; D.1846_14 = &*wsave_8(D)[D.1845_13];

(insn 29 28 30 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 69 [ D.1845 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 30 29 0 (parallel [
            (set (reg/f:DI 70 [ D.1846 ])
                (plus:DI (reg:DI 75)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

;; rffti1 (n_1(D), D.1846_14, D.1841_9);

(insn 31 30 32 (set (reg:DI 76)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 32 31 33 (set (reg:DI 1 dx)
        (reg/f:DI 65 [ D.1841 ])) Test6.f08:85 -1
     (nil))

(insn 33 32 34 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.1846 ])) Test6.f08:85 -1
     (nil))

(insn 34 33 35 (set (reg:DI 5 di)
        (reg:DI 76)) Test6.f08:85 -1
     (nil))

(insn 35 34 36 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:85 -1
     (nil))

(call_insn 36 35 0 (call (mem:QI (symbol_ref:DI ("rffti1_") [flags 0x41]  <function_decl 0x7fc95dbed000 rffti1>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:85 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 6 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 5 di [ n ])) Test6.f08:82 -1
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 wsave+0 S8 A64])
        (reg:DI 4 si [ wsave ])) Test6.f08:82 -1
     (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 (set (reg/f:DI 71)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:84 -1
     (nil))

(insn 8 7 9 3 (set (reg:SI 59 [ D.1833 ])
        (mem:SI (reg/f:DI 71) [0 *n_1(D)+0 S4 A32])) Test6.f08:84 -1
     (nil))

(insn 9 8 10 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.1833 ])
            (const_int 1 [0x1]))) Test6.f08:84 -1
     (nil))

(jump_insn 10 9 11 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) Test6.f08:84 -1
     (nil)
 -> 14)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 12 11 13 4 (set (pc)
        (label_ref 37)) Test6.f08:84 -1
     (nil)
 -> 37)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 13 12 14)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 14 13 15 5 5 "" [1 uses])

(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 5 (set (reg/f:DI 72)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 17 16 18 5 (set (reg:SI 60 [ D.1836 ])
        (mem:SI (reg/f:DI 72) [0 *n_1(D)+0 S4 A32])) Test6.f08:85 -1
     (nil))

(insn 18 17 19 5 (parallel [
            (set (reg:SI 61 [ D.1837 ])
                (ashift:SI (reg:SI 60 [ D.1836 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 19 18 20 5 (parallel [
            (set (reg:SI 62 [ D.1838 ])
                (plus:SI (reg:SI 61 [ D.1837 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 20 19 21 5 (set (reg:DI 63 [ D.1839 ])
        (sign_extend:DI (reg:SI 62 [ D.1838 ]))) Test6.f08:85 -1
     (nil))

(insn 21 20 22 5 (parallel [
            (set (reg:DI 64 [ D.1840 ])
                (plus:DI (reg:DI 63 [ D.1839 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 22 21 23 5 (parallel [
            (set (reg:DI 73)
                (ashift:DI (reg:DI 64 [ D.1840 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 23 22 24 5 (parallel [
            (set (reg/f:DI 65 [ D.1841 ])
                (plus:DI (reg:DI 73)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 24 23 25 5 (set (reg/f:DI 74)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 25 24 26 5 (set (reg:SI 66 [ D.1842 ])
        (mem:SI (reg/f:DI 74) [0 *n_1(D)+0 S4 A32])) Test6.f08:85 -1
     (nil))

(insn 26 25 27 5 (parallel [
            (set (reg:SI 67 [ D.1843 ])
                (plus:SI (reg:SI 66 [ D.1842 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 27 26 28 5 (set (reg:DI 68 [ D.1844 ])
        (sign_extend:DI (reg:SI 67 [ D.1843 ]))) Test6.f08:85 -1
     (nil))

(insn 28 27 29 5 (parallel [
            (set (reg:DI 69 [ D.1845 ])
                (plus:DI (reg:DI 68 [ D.1844 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 29 28 30 5 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 69 [ D.1845 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 70 [ D.1846 ])
                (plus:DI (reg:DI 75)
                    (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 wsave+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:85 -1
     (nil))

(insn 31 30 32 5 (set (reg:DI 76)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) Test6.f08:85 -1
     (nil))

(insn 32 31 33 5 (set (reg:DI 1 dx)
        (reg/f:DI 65 [ D.1841 ])) Test6.f08:85 -1
     (nil))

(insn 33 32 34 5 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.1846 ])) Test6.f08:85 -1
     (nil))

(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg:DI 76)) Test6.f08:85 -1
     (nil))

(insn 35 34 36 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:85 -1
     (nil))

(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:DI ("rffti1_") [flags 0x41]  <function_decl 0x7fc95dbed000 rffti1>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:85 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 37 36 38 6 6 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(code_label 39 38 40 7 4 "" [0 uses])

(note 40 39 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function random_normal (random_normal_)

random_normal ()
{
  real(kind=4) D.1568;
  real(kind=4) D.1569;
  real(kind=4) D.1570;
  real(kind=4) D.1571;
  real(kind=4) D.1563;
  real(kind=4) D.1564;
  real(kind=4) y;
  real(kind=4) x;
  real(kind=4) v;
  real(kind=4) u;
  static real(kind=4) t = -3.865950107574462890625e-1;
  static real(kind=4) s = 4.49871003627777099609375e-1;
  static real(kind=4) r2 = 2.784599959850311279296875e-1;
  static real(kind=4) r1 = 2.759700119495391845703125e-1;
  real(kind=4) q;
  real(kind=4) fn_val;
  static real(kind=4) b = 2.547200024127960205078125e-1;
  static real(kind=4) a = 1.9599999487400054931640625e-1;
  real(kind=4) D.1831;
  real(kind=4) u.30;
  real(kind=4) v.29;
  logical(kind=4) D.1827;
  real(kind=4) D.1826;
  real(kind=4) D.1825;
  real(kind=4) D.1824;
  real(kind=4) D.1823;
  real(kind=4) u.28;
  logical(kind=4) D.1820;
  real(kind=4) r2.27;
  logical(kind=4) D.1817;
  real(kind=4) r1.26;
  real(kind=4) D.1815;
  real(kind=4) D.1814;
  real(kind=4) D.1813;
  real(kind=4) D.1812;
  real(kind=4) b.25;
  real(kind=4) D.1810;
  real(kind=4) a.24;
  real(kind=4) t.23;
  real(kind=4) D.1807;
  real(kind=4) v.22;
  real(kind=4) s.21;
  real(kind=4) u.20;
  real(kind=4) v.19;
  real(kind=4) D.1802;
  real(kind=4) D.1801;
  real(kind=4) v.18;

  # BLOCK 2
  # PRED: ENTRY (fallthru) 5 (fallthru)
  _gfortran_random_r4 (&u);
  _gfortran_random_r4 (&v);
  v.18_1 = v;
  D.1801_2 = v.18_1 - 5.0e-1;
  D.1802_3 = ((D.1801_2));
  v.19_4 = D.1802_3 * 1.71560001373291015625e+0;
  v = v.19_4;
  u.20_5 = u;
  s.21_6 = s;
  x_7 = u.20_5 - s.21_6;
  v.22_8 = v;
  D.1807_9 = ABS_EXPR <v.22_8>;
  t.23_10 = t;
  y_11 = D.1807_9 - t.23_10;
  D.1563_12 = x_7;
  D.1564_13 = D.1563_12 * D.1563_12;
  a.24_14 = a;
  D.1810_15 = a.24_14 * y_11;
  b.25_16 = b;
  D.1812_17 = b.25_16 * x_7;
  D.1813_18 = D.1810_15 - D.1812_17;
  D.1814_19 = ((D.1813_18));
  D.1815_20 = D.1814_19 * y_11;
  q_21 = D.1815_20 + D.1564_13;
  r1.26_22 = r1;
  D.1817_23 = q_21 < r1.26_22;
  if (D.1817_23 != 0)
    goto <bb 6>;
  else
    goto <bb 3>;
  # SUCC: 6 (true) 3 (false)

  # BLOCK 3
  # PRED: 2 (false)
  r2.27_24 = r2;
  D.1820_25 = q_21 > r2.27_24;
  if (D.1820_25 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 (true) 4 (false)

  # BLOCK 4
  # PRED: 3 (false)
  D.1568_26 = v;
  D.1569_27 = D.1568_26 * D.1568_26;
  D.1570_28 = u;
  D.1571_29 = D.1570_28 * D.1570_28;
  u.28_30 = u;
  D.1823_31 = __builtin_logf (u.28_30);
  D.1824_32 = D.1823_31 * 4.0e+0;
  D.1825_33 = D.1824_32 * D.1571_29;
  D.1826_34 = -D.1825_33;
  D.1827_35 = D.1826_34 > D.1569_27;
  if (D.1827_35 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 (true) 5 (false)

  # BLOCK 5
  # PRED: 3 (true) 4 (false)
  goto <bb 2>;
  # SUCC: 2 (fallthru)

  # BLOCK 6
  # PRED: 2 (true) 4 (true)
  v.29_36 = v;
  u.30_37 = u;
  fn_val_38 = v.29_36 / u.30_37;
  D.1831_39 = fn_val_38;
  return D.1831_39;
  # SUCC: EXIT

}



Partition map 

Partition 1 (v.18_1 - 1 )
Partition 2 (D.1801_2 - 2 )
Partition 3 (D.1802_3 - 3 )
Partition 4 (v.19_4 - 4 )
Partition 5 (u.20_5 - 5 )
Partition 6 (s.21_6 - 6 )
Partition 7 (x_7 - 7 )
Partition 8 (v.22_8 - 8 )
Partition 9 (D.1807_9 - 9 )
Partition 10 (t.23_10 - 10 )
Partition 11 (y_11 - 11 )
Partition 12 (D.1563_12 - 12 )
Partition 13 (D.1564_13 - 13 )
Partition 14 (a.24_14 - 14 )
Partition 15 (D.1810_15 - 15 )
Partition 16 (b.25_16 - 16 )
Partition 17 (D.1812_17 - 17 )
Partition 18 (D.1813_18 - 18 )
Partition 19 (D.1814_19 - 19 )
Partition 20 (D.1815_20 - 20 )
Partition 21 (q_21 - 21 )
Partition 22 (r1.26_22 - 22 )
Partition 23 (D.1817_23 - 23 )
Partition 24 (r2.27_24 - 24 )
Partition 25 (D.1820_25 - 25 )
Partition 26 (D.1568_26 - 26 )
Partition 27 (D.1569_27 - 27 )
Partition 28 (D.1570_28 - 28 )
Partition 29 (D.1571_29 - 29 )
Partition 30 (u.28_30 - 30 )
Partition 31 (D.1823_31 - 31 )
Partition 32 (D.1824_32 - 32 )
Partition 33 (D.1825_33 - 33 )
Partition 34 (D.1826_34 - 34 )
Partition 35 (D.1827_35 - 35 )
Partition 36 (v.29_36 - 36 )
Partition 37 (u.30_37 - 37 )
Partition 38 (fn_val_38 - 38 )
Partition 39 (D.1831_39 - 39 )

After Coalescing:

Partition map 

Partition 0 (v.18_1 - 1 )
Partition 1 (D.1801_2 - 2 )
Partition 2 (D.1802_3 - 3 )
Partition 3 (v.19_4 - 4 )
Partition 4 (u.20_5 - 5 )
Partition 5 (s.21_6 - 6 )
Partition 6 (x_7 - 7 )
Partition 7 (v.22_8 - 8 )
Partition 8 (D.1807_9 - 9 )
Partition 9 (t.23_10 - 10 )
Partition 10 (y_11 - 11 )
Partition 11 (D.1563_12 - 12 )
Partition 12 (D.1564_13 - 13 )
Partition 13 (a.24_14 - 14 )
Partition 14 (D.1810_15 - 15 )
Partition 15 (b.25_16 - 16 )
Partition 16 (D.1812_17 - 17 )
Partition 17 (D.1813_18 - 18 )
Partition 18 (D.1814_19 - 19 )
Partition 19 (D.1815_20 - 20 )
Partition 20 (q_21 - 21 )
Partition 21 (r1.26_22 - 22 )
Partition 22 (D.1817_23 - 23 )
Partition 23 (r2.27_24 - 24 )
Partition 24 (D.1820_25 - 25 )
Partition 25 (D.1568_26 - 26 )
Partition 26 (D.1569_27 - 27 )
Partition 27 (D.1570_28 - 28 )
Partition 28 (D.1571_29 - 29 )
Partition 29 (u.28_30 - 30 )
Partition 30 (D.1823_31 - 31 )
Partition 31 (D.1824_32 - 32 )
Partition 32 (D.1825_33 - 33 )
Partition 33 (D.1826_34 - 34 )
Partition 34 (D.1827_35 - 35 )
Partition 35 (v.29_36 - 36 )
Partition 36 (u.30_37 - 37 )
Partition 37 (fn_val_38 - 38 )
Partition 38 (D.1831_39 - 39 )

random_normal ()
{
  real(kind=4) D.1568;
  real(kind=4) D.1569;
  real(kind=4) D.1570;
  real(kind=4) D.1571;
  real(kind=4) D.1563;
  real(kind=4) D.1564;
  real(kind=4) y;
  real(kind=4) x;
  real(kind=4) v;
  real(kind=4) u;
  static real(kind=4) t = -3.865950107574462890625e-1;
  static real(kind=4) s = 4.49871003627777099609375e-1;
  static real(kind=4) r2 = 2.784599959850311279296875e-1;
  static real(kind=4) r1 = 2.759700119495391845703125e-1;
  real(kind=4) q;
  real(kind=4) fn_val;
  static real(kind=4) b = 2.547200024127960205078125e-1;
  static real(kind=4) a = 1.9599999487400054931640625e-1;
  real(kind=4) D.1831;
  real(kind=4) u.30;
  real(kind=4) v.29;
  logical(kind=4) D.1827;
  real(kind=4) D.1826;
  real(kind=4) D.1825;
  real(kind=4) D.1824;
  real(kind=4) D.1823;
  real(kind=4) u.28;
  logical(kind=4) D.1820;
  real(kind=4) r2.27;
  logical(kind=4) D.1817;
  real(kind=4) r1.26;
  real(kind=4) D.1815;
  real(kind=4) D.1814;
  real(kind=4) D.1813;
  real(kind=4) D.1812;
  real(kind=4) b.25;
  real(kind=4) D.1810;
  real(kind=4) a.24;
  real(kind=4) t.23;
  real(kind=4) D.1807;
  real(kind=4) v.22;
  real(kind=4) s.21;
  real(kind=4) u.20;
  real(kind=4) v.19;
  real(kind=4) D.1802;
  real(kind=4) D.1801;
  real(kind=4) v.18;

  # BLOCK 2
  # PRED: ENTRY (fallthru) 5 (fallthru)
  _gfortran_random_r4 (&u);
  _gfortran_random_r4 (&v);
  v.18_1 = v;
  D.1801_2 = v.18_1 - 5.0e-1;
  D.1802_3 = ((D.1801_2));
  v.19_4 = D.1802_3 * 1.71560001373291015625e+0;
  v = v.19_4;
  u.20_5 = u;
  s.21_6 = s;
  x_7 = u.20_5 - s.21_6;
  v.22_8 = v;
  D.1807_9 = ABS_EXPR <v.22_8>;
  t.23_10 = t;
  y_11 = D.1807_9 - t.23_10;
  D.1563_12 = x_7;
  D.1564_13 = D.1563_12 * D.1563_12;
  a.24_14 = a;
  D.1810_15 = a.24_14 * y_11;
  b.25_16 = b;
  D.1812_17 = b.25_16 * x_7;
  D.1813_18 = D.1810_15 - D.1812_17;
  D.1814_19 = ((D.1813_18));
  D.1815_20 = D.1814_19 * y_11;
  q_21 = D.1815_20 + D.1564_13;
  r1.26_22 = r1;
  D.1817_23 = q_21 < r1.26_22;
  if (D.1817_23 != 0)
    goto <bb 6>;
  else
    goto <bb 3>;
  # SUCC: 6 (true) 3 (false)

  # BLOCK 3
  # PRED: 2 (false)
  r2.27_24 = r2;
  D.1820_25 = q_21 > r2.27_24;
  if (D.1820_25 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 (true) 4 (false)

  # BLOCK 4
  # PRED: 3 (false)
  D.1568_26 = v;
  D.1569_27 = D.1568_26 * D.1568_26;
  D.1570_28 = u;
  D.1571_29 = D.1570_28 * D.1570_28;
  u.28_30 = u;
  D.1823_31 = __builtin_logf (u.28_30);
  D.1824_32 = D.1823_31 * 4.0e+0;
  D.1825_33 = D.1824_32 * D.1571_29;
  D.1826_34 = -D.1825_33;
  D.1827_35 = D.1826_34 > D.1569_27;
  if (D.1827_35 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 (true) 5 (false)

  # BLOCK 5
  # PRED: 3 (true) 4 (false)
  goto <bb 2>;
  # SUCC: 2 (fallthru)

  # BLOCK 6
  # PRED: 2 (true) 4 (true)
  v.29_36 = v;
  u.30_37 = u;
  fn_val_38 = v.29_36 / u.30_37;
  D.1831_39 = fn_val_38;
  return D.1831_39;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; _gfortran_random_r4 (&u);

(insn 5 4 6 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:58 -1
     (nil))

(insn 6 5 7 (set (reg:DI 5 di)
        (reg:DI 95)) Test6.f08:58 -1
     (nil))

(insn 7 6 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:58 -1
     (nil))

(call_insn 8 7 0 (call (mem:QI (symbol_ref:DI ("_gfortran_random_r4") [flags 0x41]  <function_decl 0x7fc95dbed300 _gfortran_random_r4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:58 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

;; _gfortran_random_r4 (&v);

(insn 9 8 10 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:59 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 96)) Test6.f08:59 -1
     (nil))

(insn 11 10 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:59 -1
     (nil))

(call_insn 12 11 0 (call (mem:QI (symbol_ref:DI ("_gfortran_random_r4") [flags 0x41]  <function_decl 0x7fc95dbed300 _gfortran_random_r4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:59 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

;; v.18_1 = v;

(insn 13 12 0 (set (reg:SF 59 [ v.18 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:60 -1
     (nil))

;; D.1801_2 = v.18_1 - 5.0e-1;

(insn 14 13 15 (set (reg:SF 97)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0 S4 A32])) Test6.f08:60 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))

(insn 15 14 0 (set (reg:SF 60 [ D.1801 ])
        (minus:SF (reg:SF 59 [ v.18 ])
            (reg:SF 97))) Test6.f08:60 -1
     (nil))

;; D.1802_3 = ((D.1801_2));

(insn 16 15 0 (set (reg:SF 61 [ D.1802 ])
        (reg:SF 60 [ D.1801 ])) Test6.f08:60 -1
     (nil))

;; v.19_4 = D.1802_3 * 1.71560001373291015625e+0;

(insn 17 16 18 (set (reg:SF 98)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0 S4 A32])) Test6.f08:60 -1
     (expr_list:REG_EQUAL (const_double:SF 1.71560001373291015625e+0 [0x0.db98c8p+1])
        (nil)))

(insn 18 17 0 (set (reg:SF 62 [ v.19 ])
        (mult:SF (reg:SF 61 [ D.1802 ])
            (reg:SF 98))) Test6.f08:60 -1
     (nil))

;; v = v.19_4;

(insn 19 18 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])
        (reg:SF 62 [ v.19 ])) Test6.f08:60 -1
     (nil))

;; u.20_5 = u;

(insn 20 19 0 (set (reg:SF 63 [ u.20 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:63 -1
     (nil))

;; s.21_6 = s;

(insn 21 20 0 (set (reg:SF 64 [ s.21 ])
        (mem/c/i:SF (symbol_ref:DI ("s.1554") [flags 0x2]  <var_decl 0x7fc95dbef3c0 s>) [0 s+0 S4 A32])) Test6.f08:63 -1
     (nil))

;; x_7 = u.20_5 - s.21_6;

(insn 22 21 23 (set (reg:SF 99)
        (minus:SF (reg:SF 63 [ u.20 ])
            (reg:SF 64 [ s.21 ]))) Test6.f08:63 -1
     (nil))

(insn 23 22 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (reg:SF 99)) Test6.f08:63 -1
     (nil))

;; v.22_8 = v;

(insn 24 23 0 (set (reg:SF 65 [ v.22 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:64 -1
     (nil))

;; D.1807_9 = ABS_EXPR <v.22_8>;

(insn 25 24 26 (set (reg:V4SF 100)
        (mem/u/c/i:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128])) Test6.f08:64 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 26 25 0 (parallel [
            (set (reg:SF 66 [ D.1807 ])
                (abs:SF (reg:SF 65 [ v.22 ])))
            (use (reg:V4SF 100))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:64 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 65 [ v.22 ]))
        (nil)))

;; t.23_10 = t;

(insn 27 26 0 (set (reg:SF 67 [ t.23 ])
        (mem/c/i:SF (symbol_ref:DI ("t.1555") [flags 0x2]  <var_decl 0x7fc95dbef460 t>) [0 t+0 S4 A32])) Test6.f08:64 -1
     (nil))

;; y_11 = D.1807_9 - t.23_10;

(insn 28 27 29 (set (reg:SF 101)
        (minus:SF (reg:SF 66 [ D.1807 ])
            (reg:SF 67 [ t.23 ]))) Test6.f08:64 -1
     (nil))

(insn 29 28 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (reg:SF 101)) Test6.f08:64 -1
     (nil))

;; D.1563_12 = x_7;

(insn 30 29 0 (set (reg:SF 68 [ D.1563 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Test6.f08:65 -1
     (nil))

;; D.1564_13 = D.1563_12 * D.1563_12;

(insn 31 30 0 (set (reg:SF 69 [ D.1564 ])
        (mult:SF (reg:SF 68 [ D.1563 ])
            (reg:SF 68 [ D.1563 ]))) Test6.f08:65 -1
     (nil))

;; a.24_14 = a;

(insn 32 31 0 (set (reg:SF 70 [ a.24 ])
        (mem/c/i:SF (symbol_ref:DI ("a.1548") [flags 0x2]  <var_decl 0x7fc95dbef000 a>) [0 a+0 S4 A32])) Test6.f08:65 -1
     (nil))

;; D.1810_15 = a.24_14 * y_11;

(insn 33 32 0 (set (reg:SF 71 [ D.1810 ])
        (mult:SF (reg:SF 70 [ a.24 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32]))) Test6.f08:65 -1
     (nil))

;; b.25_16 = b;

(insn 34 33 0 (set (reg:SF 72 [ b.25 ])
        (mem/c/i:SF (symbol_ref:DI ("b.1549") [flags 0x2]  <var_decl 0x7fc95dbef0a0 b>) [0 b+0 S4 A32])) Test6.f08:65 -1
     (nil))

;; D.1812_17 = b.25_16 * x_7;

(insn 35 34 0 (set (reg:SF 73 [ D.1812 ])
        (mult:SF (reg:SF 72 [ b.25 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32]))) Test6.f08:65 -1
     (nil))

;; D.1813_18 = D.1810_15 - D.1812_17;

(insn 36 35 0 (set (reg:SF 74 [ D.1813 ])
        (minus:SF (reg:SF 71 [ D.1810 ])
            (reg:SF 73 [ D.1812 ]))) Test6.f08:65 -1
     (nil))

;; D.1814_19 = ((D.1813_18));

(insn 37 36 0 (set (reg:SF 75 [ D.1814 ])
        (reg:SF 74 [ D.1813 ])) Test6.f08:65 -1
     (nil))

;; D.1815_20 = D.1814_19 * y_11;

(insn 38 37 0 (set (reg:SF 76 [ D.1815 ])
        (mult:SF (reg:SF 75 [ D.1814 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32]))) Test6.f08:65 -1
     (nil))

;; q_21 = D.1815_20 + D.1564_13;

(insn 39 38 40 (set (reg:SF 102)
        (plus:SF (reg:SF 76 [ D.1815 ])
            (reg:SF 69 [ D.1564 ]))) Test6.f08:65 -1
     (nil))

(insn 40 39 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32])
        (reg:SF 102)) Test6.f08:65 -1
     (nil))

;; r1.26_22 = r1;

(insn 41 40 0 (set (reg:SF 77 [ r1.26 ])
        (mem/c/i:SF (symbol_ref:DI ("r1.1552") [flags 0x2]  <var_decl 0x7fc95dbef280 r1>) [0 r1+0 S4 A32])) Test6.f08:68 -1
     (nil))

;; D.1817_23 = q_21 < r1.26_22;

(insn 42 41 43 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 77 [ r1.26 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32]))) Test6.f08:68 -1
     (nil))

(insn 43 42 44 (set (reg:QI 103)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:68 -1
     (nil))

(insn 44 43 0 (parallel [
            (set (reg:SI 78 [ D.1817 ])
                (zero_extend:SI (reg:QI 103)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:68 -1
     (nil))

;; if (D.1817_23 != 0)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.1817 ])
            (const_int 0 [0]))) Test6.f08:68 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:68 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; r2.27_24 = r2;

(insn 48 47 0 (set (reg:SF 79 [ r2.27 ])
        (mem/c/i:SF (symbol_ref:DI ("r2.1553") [flags 0x2]  <var_decl 0x7fc95dbef320 r2>) [0 r2+0 S4 A32])) Test6.f08:70 -1
     (nil))

;; D.1820_25 = q_21 > r2.27_24;

(insn 49 48 50 (set (reg:SF 105)
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32])) Test6.f08:70 -1
     (nil))

(insn 50 49 51 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 105)
            (reg:SF 79 [ r2.27 ]))) Test6.f08:70 -1
     (nil))

(insn 51 50 52 (set (reg:QI 104)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:70 -1
     (nil))

(insn 52 51 0 (parallel [
            (set (reg:SI 80 [ D.1820 ])
                (zero_extend:SI (reg:QI 104)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:70 -1
     (nil))

;; if (D.1820_25 != 0)

(insn 53 52 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.1820 ])
            (const_int 0 [0]))) Test6.f08:70 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:70 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.1568_26 = v;

(insn 56 55 0 (set (reg:SF 81 [ D.1568 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:72 -1
     (nil))

;; D.1569_27 = D.1568_26 * D.1568_26;

(insn 57 56 0 (set (reg:SF 82 [ D.1569 ])
        (mult:SF (reg:SF 81 [ D.1568 ])
            (reg:SF 81 [ D.1568 ]))) Test6.f08:72 -1
     (nil))

;; D.1570_28 = u;

(insn 58 57 0 (set (reg:SF 83 [ D.1570 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:72 -1
     (nil))

;; D.1571_29 = D.1570_28 * D.1570_28;

(insn 59 58 0 (set (reg:SF 84 [ D.1571 ])
        (mult:SF (reg:SF 83 [ D.1570 ])
            (reg:SF 83 [ D.1570 ]))) Test6.f08:72 -1
     (nil))

;; u.28_30 = u;

(insn 60 59 0 (set (reg:SF 85 [ u.28 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:72 -1
     (nil))

;; D.1823_31 = __builtin_logf (u.28_30);

(insn 61 60 62 (set (reg:SF 21 xmm0)
        (reg:SF 85 [ u.28 ])) Test6.f08:72 -1
     (nil))

(call_insn/u 62 61 63 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7fc95dd46300 __builtin_logf>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SF 21 xmm0))
        (nil)))

(insn 63 62 0 (set (reg:SF 86 [ D.1823 ])
        (reg:SF 21 xmm0)) Test6.f08:72 -1
     (nil))

;; D.1824_32 = D.1823_31 * 4.0e+0;

(insn 64 63 65 (set (reg:SF 106)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0 S4 A32])) Test6.f08:72 -1
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))

(insn 65 64 0 (set (reg:SF 87 [ D.1824 ])
        (mult:SF (reg:SF 86 [ D.1823 ])
            (reg:SF 106))) Test6.f08:72 -1
     (nil))

;; D.1825_33 = D.1824_32 * D.1571_29;

(insn 66 65 0 (set (reg:SF 88 [ D.1825 ])
        (mult:SF (reg:SF 87 [ D.1824 ])
            (reg:SF 84 [ D.1571 ]))) Test6.f08:72 -1
     (nil))

;; D.1826_34 = -D.1825_33;

(insn 67 66 68 (set (reg:V4SF 107)
        (mem/u/c/i:V4SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0 S16 A128])) Test6.f08:72 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 68 67 0 (parallel [
            (set (reg:SF 89 [ D.1826 ])
                (neg:SF (reg:SF 88 [ D.1825 ])))
            (use (reg:V4SF 107))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:72 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 88 [ D.1825 ]))
        (nil)))

;; D.1827_35 = D.1826_34 > D.1569_27;

(insn 69 68 70 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 89 [ D.1826 ])
            (reg:SF 82 [ D.1569 ]))) Test6.f08:72 -1
     (nil))

(insn 70 69 71 (set (reg:QI 108)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:72 -1
     (nil))

(insn 71 70 0 (parallel [
            (set (reg:SI 90 [ D.1827 ])
                (zero_extend:SI (reg:QI 108)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:72 -1
     (nil))

;; if (D.1827_35 != 0)

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.1827 ])
            (const_int 0 [0]))) Test6.f08:72 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:72 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 74 73 75 9 "" [0 uses])

(note 75 74 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 6

;; 

(code_label 79 78 80 8 "" [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; v.29_36 = v;

(insn 81 80 0 (set (reg:SF 91 [ v.29 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:76 -1
     (nil))

;; u.30_37 = u;

(insn 82 81 0 (set (reg:SF 92 [ u.30 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:76 -1
     (nil))

;; fn_val_38 = v.29_36 / u.30_37;

(insn 83 82 84 (set (reg:SF 109)
        (div:SF (reg:SF 91 [ v.29 ])
            (reg:SF 92 [ u.30 ]))) Test6.f08:76 -1
     (nil))

(insn 84 83 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 fn_val+0 S4 A32])
        (reg:SF 109)) Test6.f08:76 -1
     (nil))

;; D.1831_39 = fn_val_38;

(insn 85 84 0 (set (reg:SF 93 [ D.1831 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 fn_val+0 S4 A32])) Test6.f08:77 -1
     (nil))

;; return D.1831_39;

(insn 86 85 87 (set (reg:SF 94 [ <retval> ])
        (reg:SF 93 [ D.1831 ])) Test6.f08:77 -1
     (nil))

(jump_insn 87 86 88 (set (pc)
        (label_ref 0)) Test6.f08:77 -1
     (nil))

(barrier 88 87 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 76 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 3
;; Pred edge  6
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 76 2 4 3 10 "" [1 uses])

(note 4 76 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:58 -1
     (nil))

(insn 6 5 7 3 (set (reg:DI 5 di)
        (reg:DI 95)) Test6.f08:58 -1
     (nil))

(insn 7 6 8 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:58 -1
     (nil))

(call_insn 8 7 9 3 (call (mem:QI (symbol_ref:DI ("_gfortran_random_r4") [flags 0x41]  <function_decl 0x7fc95dbed300 _gfortran_random_r4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:58 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn 9 8 10 3 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:59 -1
     (nil))

(insn 10 9 11 3 (set (reg:DI 5 di)
        (reg:DI 96)) Test6.f08:59 -1
     (nil))

(insn 11 10 12 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:59 -1
     (nil))

(call_insn 12 11 13 3 (call (mem:QI (symbol_ref:DI ("_gfortran_random_r4") [flags 0x41]  <function_decl 0x7fc95dbed300 _gfortran_random_r4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:59 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn 13 12 14 3 (set (reg:SF 59 [ v.18 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:60 -1
     (nil))

(insn 14 13 15 3 (set (reg:SF 97)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0 S4 A32])) Test6.f08:60 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))

(insn 15 14 16 3 (set (reg:SF 60 [ D.1801 ])
        (minus:SF (reg:SF 59 [ v.18 ])
            (reg:SF 97))) Test6.f08:60 -1
     (nil))

(insn 16 15 17 3 (set (reg:SF 61 [ D.1802 ])
        (reg:SF 60 [ D.1801 ])) Test6.f08:60 -1
     (nil))

(insn 17 16 18 3 (set (reg:SF 98)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0 S4 A32])) Test6.f08:60 -1
     (expr_list:REG_EQUAL (const_double:SF 1.71560001373291015625e+0 [0x0.db98c8p+1])
        (nil)))

(insn 18 17 19 3 (set (reg:SF 62 [ v.19 ])
        (mult:SF (reg:SF 61 [ D.1802 ])
            (reg:SF 98))) Test6.f08:60 -1
     (nil))

(insn 19 18 20 3 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])
        (reg:SF 62 [ v.19 ])) Test6.f08:60 -1
     (nil))

(insn 20 19 21 3 (set (reg:SF 63 [ u.20 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:63 -1
     (nil))

(insn 21 20 22 3 (set (reg:SF 64 [ s.21 ])
        (mem/c/i:SF (symbol_ref:DI ("s.1554") [flags 0x2]  <var_decl 0x7fc95dbef3c0 s>) [0 s+0 S4 A32])) Test6.f08:63 -1
     (nil))

(insn 22 21 23 3 (set (reg:SF 99)
        (minus:SF (reg:SF 63 [ u.20 ])
            (reg:SF 64 [ s.21 ]))) Test6.f08:63 -1
     (nil))

(insn 23 22 24 3 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (reg:SF 99)) Test6.f08:63 -1
     (nil))

(insn 24 23 25 3 (set (reg:SF 65 [ v.22 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:64 -1
     (nil))

(insn 25 24 26 3 (set (reg:V4SF 100)
        (mem/u/c/i:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128])) Test6.f08:64 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 26 25 27 3 (parallel [
            (set (reg:SF 66 [ D.1807 ])
                (abs:SF (reg:SF 65 [ v.22 ])))
            (use (reg:V4SF 100))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:64 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 65 [ v.22 ]))
        (nil)))

(insn 27 26 28 3 (set (reg:SF 67 [ t.23 ])
        (mem/c/i:SF (symbol_ref:DI ("t.1555") [flags 0x2]  <var_decl 0x7fc95dbef460 t>) [0 t+0 S4 A32])) Test6.f08:64 -1
     (nil))

(insn 28 27 29 3 (set (reg:SF 101)
        (minus:SF (reg:SF 66 [ D.1807 ])
            (reg:SF 67 [ t.23 ]))) Test6.f08:64 -1
     (nil))

(insn 29 28 30 3 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (reg:SF 101)) Test6.f08:64 -1
     (nil))

(insn 30 29 31 3 (set (reg:SF 68 [ D.1563 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Test6.f08:65 -1
     (nil))

(insn 31 30 32 3 (set (reg:SF 69 [ D.1564 ])
        (mult:SF (reg:SF 68 [ D.1563 ])
            (reg:SF 68 [ D.1563 ]))) Test6.f08:65 -1
     (nil))

(insn 32 31 33 3 (set (reg:SF 70 [ a.24 ])
        (mem/c/i:SF (symbol_ref:DI ("a.1548") [flags 0x2]  <var_decl 0x7fc95dbef000 a>) [0 a+0 S4 A32])) Test6.f08:65 -1
     (nil))

(insn 33 32 34 3 (set (reg:SF 71 [ D.1810 ])
        (mult:SF (reg:SF 70 [ a.24 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32]))) Test6.f08:65 -1
     (nil))

(insn 34 33 35 3 (set (reg:SF 72 [ b.25 ])
        (mem/c/i:SF (symbol_ref:DI ("b.1549") [flags 0x2]  <var_decl 0x7fc95dbef0a0 b>) [0 b+0 S4 A32])) Test6.f08:65 -1
     (nil))

(insn 35 34 36 3 (set (reg:SF 73 [ D.1812 ])
        (mult:SF (reg:SF 72 [ b.25 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32]))) Test6.f08:65 -1
     (nil))

(insn 36 35 37 3 (set (reg:SF 74 [ D.1813 ])
        (minus:SF (reg:SF 71 [ D.1810 ])
            (reg:SF 73 [ D.1812 ]))) Test6.f08:65 -1
     (nil))

(insn 37 36 38 3 (set (reg:SF 75 [ D.1814 ])
        (reg:SF 74 [ D.1813 ])) Test6.f08:65 -1
     (nil))

(insn 38 37 39 3 (set (reg:SF 76 [ D.1815 ])
        (mult:SF (reg:SF 75 [ D.1814 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32]))) Test6.f08:65 -1
     (nil))

(insn 39 38 40 3 (set (reg:SF 102)
        (plus:SF (reg:SF 76 [ D.1815 ])
            (reg:SF 69 [ D.1564 ]))) Test6.f08:65 -1
     (nil))

(insn 40 39 41 3 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32])
        (reg:SF 102)) Test6.f08:65 -1
     (nil))

(insn 41 40 42 3 (set (reg:SF 77 [ r1.26 ])
        (mem/c/i:SF (symbol_ref:DI ("r1.1552") [flags 0x2]  <var_decl 0x7fc95dbef280 r1>) [0 r1+0 S4 A32])) Test6.f08:68 -1
     (nil))

(insn 42 41 43 3 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 77 [ r1.26 ])
            (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32]))) Test6.f08:68 -1
     (nil))

(insn 43 42 44 3 (set (reg:QI 103)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:68 -1
     (nil))

(insn 44 43 45 3 (parallel [
            (set (reg:SI 78 [ D.1817 ])
                (zero_extend:SI (reg:QI 103)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:68 -1
     (nil))

(insn 45 44 46 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.1817 ])
            (const_int 0 [0]))) Test6.f08:68 -1
     (nil))

(jump_insn 46 45 47 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) Test6.f08:68 -1
     (nil)
 -> 79)
;; End of basic block 3 -> ( 7 4)

;; Succ edge  7
;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 47 46 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 4 (set (reg:SF 79 [ r2.27 ])
        (mem/c/i:SF (symbol_ref:DI ("r2.1553") [flags 0x2]  <var_decl 0x7fc95dbef320 r2>) [0 r2+0 S4 A32])) Test6.f08:70 -1
     (nil))

(insn 49 48 50 4 (set (reg:SF 105)
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 q+0 S4 A32])) Test6.f08:70 -1
     (nil))

(insn 50 49 51 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 105)
            (reg:SF 79 [ r2.27 ]))) Test6.f08:70 -1
     (nil))

(insn 51 50 52 4 (set (reg:QI 104)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:70 -1
     (nil))

(insn 52 51 53 4 (parallel [
            (set (reg:SI 80 [ D.1820 ])
                (zero_extend:SI (reg:QI 104)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:70 -1
     (nil))

(insn 53 52 54 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.1820 ])
            (const_int 0 [0]))) Test6.f08:70 -1
     (nil))

(jump_insn 54 53 55 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Test6.f08:70 -1
     (nil)
 -> 74)
;; End of basic block 4 -> ( 6 5)

;; Succ edge  6
;; Succ edge  5 (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 5 (set (reg:SF 81 [ D.1568 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:72 -1
     (nil))

(insn 57 56 58 5 (set (reg:SF 82 [ D.1569 ])
        (mult:SF (reg:SF 81 [ D.1568 ])
            (reg:SF 81 [ D.1568 ]))) Test6.f08:72 -1
     (nil))

(insn 58 57 59 5 (set (reg:SF 83 [ D.1570 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:72 -1
     (nil))

(insn 59 58 60 5 (set (reg:SF 84 [ D.1571 ])
        (mult:SF (reg:SF 83 [ D.1570 ])
            (reg:SF 83 [ D.1570 ]))) Test6.f08:72 -1
     (nil))

(insn 60 59 61 5 (set (reg:SF 85 [ u.28 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:72 -1
     (nil))

(insn 61 60 62 5 (set (reg:SF 21 xmm0)
        (reg:SF 85 [ u.28 ])) Test6.f08:72 -1
     (nil))

(call_insn/u 62 61 63 5 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7fc95dd46300 __builtin_logf>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SF 21 xmm0))
        (nil)))

(insn 63 62 64 5 (set (reg:SF 86 [ D.1823 ])
        (reg:SF 21 xmm0)) Test6.f08:72 -1
     (nil))

(insn 64 63 65 5 (set (reg:SF 106)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0 S4 A32])) Test6.f08:72 -1
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))

(insn 65 64 66 5 (set (reg:SF 87 [ D.1824 ])
        (mult:SF (reg:SF 86 [ D.1823 ])
            (reg:SF 106))) Test6.f08:72 -1
     (nil))

(insn 66 65 67 5 (set (reg:SF 88 [ D.1825 ])
        (mult:SF (reg:SF 87 [ D.1824 ])
            (reg:SF 84 [ D.1571 ]))) Test6.f08:72 -1
     (nil))

(insn 67 66 68 5 (set (reg:V4SF 107)
        (mem/u/c/i:V4SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0 S16 A128])) Test6.f08:72 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 68 67 69 5 (parallel [
            (set (reg:SF 89 [ D.1826 ])
                (neg:SF (reg:SF 88 [ D.1825 ])))
            (use (reg:V4SF 107))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:72 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 88 [ D.1825 ]))
        (nil)))

(insn 69 68 70 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 89 [ D.1826 ])
            (reg:SF 82 [ D.1569 ]))) Test6.f08:72 -1
     (nil))

(insn 70 69 71 5 (set (reg:QI 108)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) Test6.f08:72 -1
     (nil))

(insn 71 70 72 5 (parallel [
            (set (reg:SI 90 [ D.1827 ])
                (zero_extend:SI (reg:QI 108)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:72 -1
     (nil))

(insn 72 71 73 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.1827 ])
            (const_int 0 [0]))) Test6.f08:72 -1
     (nil))

(jump_insn 73 72 74 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) Test6.f08:72 -1
     (nil)
 -> 79)
;; End of basic block 5 -> ( 7 6)

;; Succ edge  7
;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 74 73 75 6 9 "" [1 uses])

(note 75 74 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 77 75 78 6 (set (pc)
        (label_ref 76)) Test6.f08:57 -1
     (nil)
 -> 76)
;; End of basic block 6 -> ( 3)

;; Succ edge  3

(barrier 78 77 79)

;; Start of basic block ( 3 5) -> 7
;; Pred edge  3
;; Pred edge  5
(code_label 79 78 80 7 8 "" [2 uses])

(note 80 79 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 7 (set (reg:SF 91 [ v.29 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 v+0 S4 A64])) Test6.f08:76 -1
     (nil))

(insn 82 81 83 7 (set (reg:SF 92 [ u.30 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 u+0 S4 A32])) Test6.f08:76 -1
     (nil))

(insn 83 82 84 7 (set (reg:SF 109)
        (div:SF (reg:SF 91 [ v.29 ])
            (reg:SF 92 [ u.30 ]))) Test6.f08:76 -1
     (nil))

(insn 84 83 85 7 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 fn_val+0 S4 A32])
        (reg:SF 109)) Test6.f08:76 -1
     (nil))

(insn 85 84 86 7 (set (reg:SF 93 [ D.1831 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 fn_val+0 S4 A32])) Test6.f08:77 -1
     (nil))

(insn 86 85 87 7 (set (reg:SF 94 [ <retval> ])
        (reg:SF 93 [ D.1831 ])) Test6.f08:77 -1
     (nil))

(jump_insn 87 86 88 7 (set (pc)
        (label_ref 89)) Test6.f08:77 -1
     (nil)
 -> 89)
;; End of basic block 7 -> ( 9)

;; Succ edge  9

(barrier 88 87 94)

;; Start of basic block () -> 8
(note 94 88 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 91 94 92 8 (clobber (reg/i:SF 21 xmm0)) Test6.f08:79 -1
     (nil))

(insn 92 91 89 8 (clobber (reg:SF 94 [ <retval> ])) Test6.f08:79 -1
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7
;; Pred edge  8 (fallthru)
(code_label 89 92 95 9 7 "" [1 uses])

(note 95 89 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 90 95 93 9 (set (reg/i:SF 21 xmm0)
        (reg:SF 94 [ <retval> ])) Test6.f08:79 -1
     (nil))

(insn 93 90 0 9 (use (reg/i:SF 21 xmm0)) Test6.f08:79 -1
     (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function init_random_seed (init_random_seed_)

init_random_seed ()
{
  void * D.1614;
  integer(kind=8) D.1626;
  integer(kind=8) D.1627;
  logical(kind=4) D.1628;
  <unnamed-unsigned:64> D.1629;
  integer(kind=8) S.5;
  integer(kind=4) D.1617;
  <unnamed-unsigned:64> D.1618;
  integer(kind=4)[0] * restrict D.1619;
  integer(kind=4)[0:] * restrict D.1606;
  integer(kind=8) D.1607;
  integer(kind=8) D.1608;
  integer(kind=8) D.1609;
  integer(kind=4) D.1610;
  struct array1_integer(kind=4) atmp.2;
  integer(kind=4) shadow_loopvar.4;
  integer(kind=8) D.1621;
  integer(kind=8) offset.3;
  integer(kind=8) D.1622;
  <unnamed-unsigned:64> D.1603;
  void * restrict D.1604;
  void * restrict D.1602;
  integer(kind=8) D.1595;
  integer(kind=4) D.1596;
  integer(kind=8) D.1597;
  integer(kind=4) D.1598;
  <unnamed-unsigned:64> size.0;
  logical(kind=4) D.1600;
  integer(kind=4) overflow.1;
  struct array1_integer(kind=4) seed;
  integer(kind=4) n;
  integer(kind=4) i;
  integer(kind=4) clock;
  void * restrict D.1797;
  void * restrict D.1794;
  void * restrict D.1793;
  void * restrict D.1790;
  integer(kind=4) D.1786;
  integer(kind=4) D.1785;
  integer(kind=4) D.1784;
  void * restrict D.1783;
  integer(kind=8) D.1782;
  integer(kind=8) D.1781;
  void * restrict D.1777;
  void * D.1776;
  void * restrict D.1775;
  void * restrict D.1771;
  void * D.1770;
  void * restrict D.1767;
  integer(kind=8) D.1766;
  integer(kind=8) D.1765;
  integer(kind=8) D.1764;
  integer(kind=8) D.1763;
  integer(kind=8) D.1762;
  integer(kind=8) D.1761;
  integer(kind=8) D.1760;
  integer(kind=8) D.1759;
  integer(kind=8) D.1757;
  integer(kind=8) D.1756;
  integer(kind=8) D.1755;
  void * restrict D.1753;
  integer(kind=4) D.1752;
  void * restrict D.1751;
  logical(kind=4) D.1743;
  logical(kind=4) D.1742;
  logical(kind=4) D.1741;
  void * D.1740;
  void * restrict D.1739;
  integer(kind=8) D.1738;
  integer(kind=8) D.1737;
  integer(kind=8) D.1736;
  integer(kind=8) D.1735;
  integer(kind=8) D.1734;
  integer(kind=4) D.1733;
  integer(kind=4) D.1732;
  integer(kind=4) D.1731;
  integer(kind=8) D.1730;
  void * D.1726;
  <unnamed-unsigned:64> D.1725;
  void * restrict D.1722;
  logical(kind=4) D.1719;
  integer(kind=8) D.1718;
  integer(kind=8) D.1717;
  <unnamed-unsigned:64> D.1716;
  integer(kind=4) n.17;
  logical(kind=4) D.1708;
  integer(kind=8) D.1707;
  integer(kind=8) D.1706;
  <unnamed-unsigned:64> D.1705;
  integer(kind=4) iftmp.16;
  logical(kind=4) D.1700;
  integer(kind=8) D.1699;
  integer(kind=8) D.1698;
  integer(kind=8) D.1697;
  integer(kind=4) iftmp.15;
  logical(kind=4) D.1692;
  integer(kind=8) D.1691;
  integer(kind=8) D.1690;
  integer(kind=4) iftmp.14;
  integer(kind=4) D.1688;
  integer(kind=4) n.13;
  integer(kind=8) D.1686;
  integer(kind=4) n.12;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  seed.data = 0B;
  _gfortran_random_seed_i4 (&n, 0B, 0B);
  seed.dtype = 265;
  seed.dim[0].lbound = 1;
  n.12_12 = n;
  D.1686_13 = (integer(kind=8)) n.12_12;
  seed.dim[0].ubound = D.1686_13;
  seed.dim[0].stride = 1;
  n.13_14 = n;
  D.1688_15 = MAX_EXPR <n.13_14, 0>;
  D.1595_16 = (integer(kind=8)) D.1688_15;
  D.1690_17 = D.1595_16 == 0;
  D.1691_18 = __builtin_expect (D.1690_17, 0);
  D.1692_19 = (logical(kind=4)) D.1691_18;
  if (D.1692_19 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.14_20 = 0;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1697_21 = 9223372036854775807 / D.1595_16;
  D.1698_22 = D.1697_21 <= 0;
  D.1699_23 = __builtin_expect (D.1698_22, 0);
  D.1700_24 = (logical(kind=4)) D.1699_23;
  if (D.1700_24 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  iftmp.15_25 = 1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  iftmp.15_26 = 0;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  # iftmp.15_10 = PHI <iftmp.15_25(5), iftmp.15_26(6)>
  iftmp.14_27 = iftmp.15_10;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 3 (fallthru) 7 (fallthru)
  # iftmp.14_9 = PHI <iftmp.14_20(3), iftmp.14_27(7)>
  D.1596_28 = iftmp.14_9;
  D.1597_29 = D.1595_16;
  D.1705_30 = (<unnamed-unsigned:64>) D.1597_29;
  D.1706_31 = D.1705_30 > 4611686018427387903;
  D.1707_32 = __builtin_expect (D.1706_31, 0);
  D.1708_33 = (logical(kind=4)) D.1707_32;
  if (D.1708_33 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  iftmp.16_34 = 1;
  goto <bb 11>;
  # SUCC: 11 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  iftmp.16_35 = 0;
  # SUCC: 11 (fallthru)

  # BLOCK 11
  # PRED: 9 (fallthru) 10 (fallthru)
  # iftmp.16_11 = PHI <iftmp.16_34(9), iftmp.16_35(10)>
  D.1598_36 = iftmp.16_11 + D.1596_28;
  n.17_37 = n;
  D.1600_38 = n.17_37 <= 0;
  if (D.1600_38 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 11 (true)
  size.0_39 = 0;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 13
  # PRED: 11 (false)
  D.1716_40 = (<unnamed-unsigned:64>) D.1597_29;
  size.0_41 = D.1716_40 * 4;
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 12 (fallthru) 13 (fallthru)
  # size.0_1 = PHI <size.0_39(12), size.0_41(13)>
  overflow.1_42 = D.1598_36;
  D.1717_43 = overflow.1_42 != 0;
  D.1718_44 = __builtin_expect (D.1717_43, 0);
  D.1719_45 = (logical(kind=4)) D.1718_44;
  if (D.1719_45 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 (true) 16 (false)

  # BLOCK 15
  # PRED: 14 (true)
  _gfortran_runtime_error (&"Integer overflow when calculating the amount of memory to allocate"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 16
  # PRED: 14 (false)
  D.1722_46 = seed.data;
  if (D.1722_46 == 0B)
    goto <bb 17>;
  else
    goto <bb 20>;
  # SUCC: 17 (true) 20 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.1603_47 = size.0_1;
  D.1725_48 = MAX_EXPR <D.1603_47, 1>;
  D.1726_49 = __builtin_malloc (D.1725_48);
  D.1604_50 = (void * restrict) D.1726_49;
  if (D.1604_50 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 (true) 19 (false)

  # BLOCK 18
  # PRED: 17 (true)
  _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 19
  # PRED: 17 (false)
  D.1602_51 = D.1604_50;
  seed.data = D.1602_51;
  seed.offset = -1;
  _gfortran_system_clock_4 (&clock, 0B, 0B);
  D.1606_52 = seed.data;
  D.1607_53 = seed.offset;
  D.1608_54 = seed.dim[0].lbound;
  D.1609_55 = seed.dim[0].ubound;
  D.1610_56 = clock;
  atmp.2.dtype = 265;
  atmp.2.dim[0].stride = 1;
  atmp.2.dim[0].lbound = 0;
  atmp.2.dim[0].ubound = -1;
  atmp.2.data = 0B;
  atmp.2.offset = 0;
  offset.3_57 = 0;
  shadow_loopvar.4_58 = 1;
  D.1617_59 = n;
  D.1730_60 = atmp.2.dim[0].ubound;
  D.1731_61 = D.1617_59 - shadow_loopvar.4_58;
  D.1732_62 = D.1731_61 + 1;
  D.1733_63 = MAX_EXPR <D.1732_62, 0>;
  D.1734_64 = (integer(kind=8)) D.1733_63;
  D.1735_65 = D.1730_60 + D.1734_64;
  atmp.2.dim[0].ubound = D.1735_65;
  D.1736_66 = atmp.2.dim[0].ubound;
  D.1737_67 = D.1736_66 + 1;
  D.1738_68 = D.1737_67 * 4;
  D.1618_69 = (<unnamed-unsigned:64>) D.1738_68;
  D.1739_70 = atmp.2.data;
  D.1740_71 = __builtin_realloc (D.1739_70, D.1618_69);
  D.1619_72 = (integer(kind=4)[0] * restrict) D.1740_71;
  D.1741_73 = D.1619_72 == 0B;
  D.1742_74 = D.1618_69 != 0;
  D.1743_75 = D.1741_73 && D.1742_74;
  if (D.1743_75 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 (true) 22 (false)

  # BLOCK 20
  # PRED: 16 (false)
  _gfortran_runtime_error_at (&"At line 28 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempting to allocate already allocated variable \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 21
  # PRED: 19 (true)
  _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 22
  # PRED: 19 (false)
  if (D.1618_69 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 (true) 24 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.1619_76 = 0B;
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 22 (false) 23 (fallthru)
  # D.1619_6 = PHI <D.1619_72(22), D.1619_76(23)>
  atmp.2.data = D.1619_6;
  # SUCC: 25 (fallthru)

  # BLOCK 25
  # PRED: 24 (fallthru) 26 (fallthru)
  # offset.3_4 = PHI <offset.3_57(24), offset.3_79(26)>
  # shadow_loopvar.4_5 = PHI <shadow_loopvar.4_58(24), shadow_loopvar.4_80(26)>
  if (shadow_loopvar.4_5 > D.1617_59)
    goto <bb 27>;
  else
    goto <bb 26>;
  # SUCC: 27 (true) 26 (false)

  # BLOCK 26
  # PRED: 25 (false)
  D.1751_77 = atmp.2.data;
  D.1752_78 = shadow_loopvar.4_5 + -1;
  MEM[(integer(kind=4)[0] *)D.1751_77][offset.3_4] = D.1752_78;
  offset.3_79 = offset.3_4 + 1;
  shadow_loopvar.4_80 = shadow_loopvar.4_5 + 1;
  goto <bb 25>;
  # SUCC: 25 (fallthru)

  # BLOCK 27
  # PRED: 25 (true)
  D.1621_81 = offset.3_4 + -1;
  atmp.2.dim[0].ubound = D.1621_81;
  D.1622_82 = D.1608_54;
  D.1753_83 = seed.data;
  if (D.1753_83 == 0B)
    goto <bb 30>;
  else
    goto <bb 28>;
  # SUCC: 30 (true) 28 (false)

  # BLOCK 28
  # PRED: 27 (false)
  D.1755_84 = seed.dim[0].lbound;
  D.1756_85 = D.1755_84 + D.1621_81;
  D.1757_86 = seed.dim[0].ubound;
  if (D.1756_85 != D.1757_86)
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  goto <bb 35>;
  # SUCC: 35 (fallthru)

  # BLOCK 30
  # PRED: 27 (true) 28 (true)
  D.1759_87 = seed.dim[0].ubound;
  D.1760_88 = seed.dim[0].lbound;
  D.1761_89 = D.1759_87 - D.1760_88;
  D.1762_90 = D.1761_89 + 1;
  D.1626_91 = MAX_EXPR <D.1762_90, 0>;
  D.1627_92 = D.1621_81 + 1;
  D.1628_93 = D.1626_91 != D.1627_92;
  seed.dim[0].lbound = 1;
  D.1763_94 = D.1621_81 + 1;
  seed.dim[0].ubound = D.1763_94;
  seed.dim[0].stride = 1;
  D.1764_95 = seed.dim[0].lbound;
  D.1765_96 = -D.1764_95;
  seed.offset = D.1765_96;
  D.1607_97 = seed.offset;
  D.1622_98 = seed.dim[0].lbound;
  D.1766_99 = D.1627_92 * 4;
  D.1629_100 = (<unnamed-unsigned:64>) D.1766_99;
  D.1767_101 = seed.data;
  if (D.1767_101 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 (true) 32 (false)

  # BLOCK 31
  # PRED: 30 (true)
  D.1770_102 = __builtin_malloc (D.1629_100);
  D.1771_103 = (void * restrict) D.1770_102;
  seed.data = D.1771_103;
  seed.dtype = 265;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 32
  # PRED: 30 (false)
  if (D.1628_93 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 (true) 34 (false)

  # BLOCK 33
  # PRED: 32 (true)
  D.1775_104 = seed.data;
  D.1776_105 = __builtin_realloc (D.1775_104, D.1629_100);
  D.1777_106 = (void * restrict) D.1776_105;
  seed.data = D.1777_106;
  # SUCC: 34 (fallthru)

  # BLOCK 34
  # PRED: 31 (fallthru) 32 (false) 33 (fallthru)
  D.1606_107 = seed.data;
  # SUCC: 35 (fallthru)

  # BLOCK 35
  # PRED: 29 (fallthru) 34 (fallthru)
  # D.1606_2 = PHI <D.1606_52(29), D.1606_107(34)>
  # D.1607_3 = PHI <D.1607_53(29), D.1607_97(34)>
  # D.1622_7 = PHI <D.1622_82(29), D.1622_98(34)>
  S.5_108 = 0;
  # SUCC: 36 (fallthru)

  # BLOCK 36
  # PRED: 35 (fallthru) 37 (fallthru)
  # S.5_8 = PHI <S.5_108(35), S.5_115(37)>
  if (S.5_8 > D.1621_81)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 (true) 37 (false)

  # BLOCK 37
  # PRED: 36 (false)
  D.1781_109 = S.5_8 + D.1622_7;
  D.1782_110 = D.1781_109 + D.1607_3;
  D.1783_111 = atmp.2.data;
  D.1784_112 = MEM[(integer(kind=4)[0] *)D.1783_111][S.5_8];
  D.1785_113 = D.1784_112 * 37;
  D.1786_114 = D.1785_113 + D.1610_56;
  *D.1606_2[D.1782_110] = D.1786_114;
  S.5_115 = S.5_8 + 1;
  goto <bb 36>;
  # SUCC: 36 (fallthru)

  # BLOCK 38
  # PRED: 36 (true)
  D.1614_116 = atmp.2.data;
  if (D.1614_116 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  __builtin_free (D.1614_116);
  # SUCC: 40 (fallthru)

  # BLOCK 40
  # PRED: 38 (false) 39 (fallthru)
  _gfortran_random_seed_i4 (0B, &seed, 0B);
  D.1790_117 = seed.data;
  if (D.1790_117 == 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 (true) 42 (false)

  # BLOCK 41
  # PRED: 40 (true)
  _gfortran_runtime_error_at (&"At line 32 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempt to DEALLOCATE unallocated \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 42
  # PRED: 40 (false)
  D.1793_118 = seed.data;
  __builtin_free (D.1793_118);
  seed.data = 0B;
  D.1794_119 = seed.data;
  if (D.1794_119 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 (true) 44 (false)

  # BLOCK 43
  # PRED: 42 (true)
  D.1797_120 = seed.data;
  __builtin_free (D.1797_120);
  # SUCC: 44 (fallthru)

  # BLOCK 44
  # PRED: 42 (false) 43 (fallthru)
  seed.data = 0B;
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (size.0_1 - 1 )
Partition 2 (D.1606_2 - 2 )
Partition 3 (D.1607_3 - 3 )
Partition 4 (offset.3_4 - 4 )
Partition 5 (shadow_loopvar.4_5 - 5 )
Partition 6 (D.1619_6 - 6 )
Partition 7 (D.1622_7 - 7 )
Partition 8 (S.5_8 - 8 )
Partition 9 (iftmp.14_9 - 9 )
Partition 10 (iftmp.15_10 - 10 )
Partition 11 (iftmp.16_11 - 11 )
Partition 12 (n.12_12 - 12 )
Partition 13 (D.1686_13 - 13 )
Partition 14 (n.13_14 - 14 )
Partition 15 (D.1688_15 - 15 )
Partition 16 (D.1595_16 - 16 )
Partition 17 (D.1690_17 - 17 )
Partition 18 (D.1691_18 - 18 )
Partition 19 (D.1692_19 - 19 )
Partition 20 (iftmp.14_20 - 20 )
Partition 21 (D.1697_21 - 21 )
Partition 22 (D.1698_22 - 22 )
Partition 23 (D.1699_23 - 23 )
Partition 24 (D.1700_24 - 24 )
Partition 25 (iftmp.15_25 - 25 )
Partition 26 (iftmp.15_26 - 26 )
Partition 27 (iftmp.14_27 - 27 )
Partition 28 (D.1596_28 - 28 )
Partition 29 (D.1597_29 - 29 )
Partition 30 (D.1705_30 - 30 )
Partition 31 (D.1706_31 - 31 )
Partition 32 (D.1707_32 - 32 )
Partition 33 (D.1708_33 - 33 )
Partition 34 (iftmp.16_34 - 34 )
Partition 35 (iftmp.16_35 - 35 )
Partition 36 (D.1598_36 - 36 )
Partition 37 (n.17_37 - 37 )
Partition 38 (D.1600_38 - 38 )
Partition 39 (size.0_39 - 39 )
Partition 40 (D.1716_40 - 40 )
Partition 41 (size.0_41 - 41 )
Partition 42 (overflow.1_42 - 42 )
Partition 43 (D.1717_43 - 43 )
Partition 44 (D.1718_44 - 44 )
Partition 45 (D.1719_45 - 45 )
Partition 46 (D.1722_46 - 46 )
Partition 47 (D.1603_47 - 47 )
Partition 48 (D.1725_48 - 48 )
Partition 49 (D.1726_49 - 49 )
Partition 50 (D.1604_50 - 50 )
Partition 51 (D.1602_51 - 51 )
Partition 52 (D.1606_52 - 52 )
Partition 53 (D.1607_53 - 53 )
Partition 54 (D.1608_54 - 54 )
Partition 55 (D.1609_55 - 55 )
Partition 56 (D.1610_56 - 56 )
Partition 57 (offset.3_57 - 57 )
Partition 58 (shadow_loopvar.4_58 - 58 )
Partition 59 (D.1617_59 - 59 )
Partition 60 (D.1730_60 - 60 )
Partition 61 (D.1731_61 - 61 )
Partition 62 (D.1732_62 - 62 )
Partition 63 (D.1733_63 - 63 )
Partition 64 (D.1734_64 - 64 )
Partition 65 (D.1735_65 - 65 )
Partition 66 (D.1736_66 - 66 )
Partition 67 (D.1737_67 - 67 )
Partition 68 (D.1738_68 - 68 )
Partition 69 (D.1618_69 - 69 )
Partition 70 (D.1739_70 - 70 )
Partition 71 (D.1740_71 - 71 )
Partition 72 (D.1619_72 - 72 )
Partition 73 (D.1741_73 - 73 )
Partition 74 (D.1742_74 - 74 )
Partition 75 (D.1743_75 - 75 )
Partition 76 (D.1619_76 - 76 )
Partition 77 (D.1751_77 - 77 )
Partition 78 (D.1752_78 - 78 )
Partition 79 (offset.3_79 - 79 )
Partition 80 (shadow_loopvar.4_80 - 80 )
Partition 81 (D.1621_81 - 81 )
Partition 82 (D.1622_82 - 82 )
Partition 83 (D.1753_83 - 83 )
Partition 84 (D.1755_84 - 84 )
Partition 85 (D.1756_85 - 85 )
Partition 86 (D.1757_86 - 86 )
Partition 87 (D.1759_87 - 87 )
Partition 88 (D.1760_88 - 88 )
Partition 89 (D.1761_89 - 89 )
Partition 90 (D.1762_90 - 90 )
Partition 91 (D.1626_91 - 91 )
Partition 92 (D.1627_92 - 92 )
Partition 93 (D.1628_93 - 93 )
Partition 94 (D.1763_94 - 94 )
Partition 95 (D.1764_95 - 95 )
Partition 96 (D.1765_96 - 96 )
Partition 97 (D.1607_97 - 97 )
Partition 98 (D.1622_98 - 98 )
Partition 99 (D.1766_99 - 99 )
Partition 100 (D.1629_100 - 100 )
Partition 101 (D.1767_101 - 101 )
Partition 102 (D.1770_102 - 102 )
Partition 103 (D.1771_103 - 103 )
Partition 104 (D.1775_104 - 104 )
Partition 105 (D.1776_105 - 105 )
Partition 106 (D.1777_106 - 106 )
Partition 107 (D.1606_107 - 107 )
Partition 108 (S.5_108 - 108 )
Partition 109 (D.1781_109 - 109 )
Partition 110 (D.1782_110 - 110 )
Partition 111 (D.1783_111 - 111 )
Partition 112 (D.1784_112 - 112 )
Partition 113 (D.1785_113 - 113 )
Partition 114 (D.1786_114 - 114 )
Partition 115 (S.5_115 - 115 )
Partition 116 (D.1614_116 - 116 )
Partition 117 (D.1790_117 - 117 )
Partition 118 (D.1793_118 - 118 )
Partition 119 (D.1794_119 - 119 )
Partition 120 (D.1797_120 - 120 )


Partition map 

Partition 0 (size.0_1 - 1 )
Partition 1 (D.1606_2 - 2 )
Partition 2 (D.1607_3 - 3 )
Partition 3 (offset.3_4 - 4 )
Partition 4 (shadow_loopvar.4_5 - 5 )
Partition 5 (D.1619_6 - 6 )
Partition 6 (D.1622_7 - 7 )
Partition 7 (S.5_8 - 8 )
Partition 8 (iftmp.14_9 - 9 )
Partition 9 (iftmp.15_10 - 10 )
Partition 10 (iftmp.16_11 - 11 )
Partition 11 (iftmp.14_20 - 20 )
Partition 12 (iftmp.15_25 - 25 )
Partition 13 (iftmp.15_26 - 26 )
Partition 14 (iftmp.14_27 - 27 )
Partition 15 (iftmp.16_34 - 34 )
Partition 16 (iftmp.16_35 - 35 )
Partition 17 (size.0_39 - 39 )
Partition 18 (size.0_41 - 41 )
Partition 19 (D.1606_52 - 52 )
Partition 20 (D.1607_53 - 53 )
Partition 21 (offset.3_57 - 57 )
Partition 22 (shadow_loopvar.4_58 - 58 )
Partition 23 (D.1619_72 - 72 )
Partition 24 (D.1619_76 - 76 )
Partition 25 (offset.3_79 - 79 )
Partition 26 (shadow_loopvar.4_80 - 80 )
Partition 27 (D.1622_82 - 82 )
Partition 28 (D.1607_97 - 97 )
Partition 29 (D.1622_98 - 98 )
Partition 30 (D.1606_107 - 107 )
Partition 31 (S.5_108 - 108 )
Partition 32 (S.5_115 - 115 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : 

Live on entry to BB11 : 

Live on entry to BB12 : 

Live on entry to BB13 : 

Live on entry to BB14 : 

Live on entry to BB15 : 

Live on entry to BB16 : size.0_1  

Live on entry to BB17 : size.0_1  

Live on entry to BB18 : 

Live on entry to BB19 : 

Live on entry to BB20 : 

Live on entry to BB21 : 

Live on entry to BB22 : D.1606_52  D.1607_53  offset.3_57  shadow_loopvar.4_58  D.1619_72  

Live on entry to BB23 : D.1606_52  D.1607_53  offset.3_57  shadow_loopvar.4_58  

Live on entry to BB24 : D.1606_52  D.1607_53  offset.3_57  shadow_loopvar.4_58  

Live on entry to BB25 : D.1606_52  D.1607_53  

Live on entry to BB26 : offset.3_4  shadow_loopvar.4_5  D.1606_52  D.1607_53  

Live on entry to BB27 : offset.3_4  D.1606_52  D.1607_53  

Live on entry to BB28 : D.1606_52  D.1607_53  D.1622_82  

Live on entry to BB29 : D.1606_52  D.1607_53  D.1622_82  

Live on entry to BB30 : 

Live on entry to BB31 : D.1607_97  D.1622_98  

Live on entry to BB32 : D.1607_97  D.1622_98  

Live on entry to BB33 : D.1607_97  D.1622_98  

Live on entry to BB34 : D.1607_97  D.1622_98  

Live on entry to BB35 : 

Live on entry to BB36 : D.1606_2  D.1607_3  D.1622_7  

Live on entry to BB37 : D.1606_2  D.1607_3  D.1622_7  S.5_8  

Live on entry to BB38 : 

Live on entry to BB39 : 

Live on entry to BB40 : 

Live on entry to BB41 : 

Live on entry to BB42 : 

Live on entry to BB43 : 

Live on entry to BB44 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2) D.1619_6 <-> D.1619_72
(1) shadow_loopvar.4_5 <-> shadow_loopvar.4_58

Partition map 

Partition 0 (size.0_1 - 1 )
Partition 1 (D.1606_2 - 2 )
Partition 2 (D.1607_3 - 3 )
Partition 3 (offset.3_4 - 4 )
Partition 4 (shadow_loopvar.4_5 - 5 )
Partition 5 (D.1619_6 - 6 )
Partition 6 (D.1622_7 - 7 )
Partition 7 (S.5_8 - 8 )
Partition 8 (iftmp.14_9 - 9 )
Partition 9 (iftmp.15_10 - 10 )
Partition 10 (iftmp.16_11 - 11 )
Partition 11 (iftmp.14_20 - 20 )
Partition 12 (iftmp.15_25 - 25 )
Partition 13 (iftmp.15_26 - 26 )
Partition 14 (iftmp.14_27 - 27 )
Partition 15 (iftmp.16_34 - 34 )
Partition 16 (iftmp.16_35 - 35 )
Partition 17 (size.0_39 - 39 )
Partition 18 (size.0_41 - 41 )
Partition 19 (D.1606_52 - 52 )
Partition 20 (D.1607_53 - 53 )
Partition 21 (offset.3_57 - 57 )
Partition 22 (shadow_loopvar.4_58 - 58 )
Partition 23 (D.1619_72 - 72 )
Partition 24 (D.1619_76 - 76 )
Partition 25 (offset.3_79 - 79 )
Partition 26 (shadow_loopvar.4_80 - 80 )
Partition 27 (D.1622_82 - 82 )
Partition 28 (D.1607_97 - 97 )
Partition 29 (D.1622_98 - 98 )
Partition 30 (D.1606_107 - 107 )
Partition 31 (S.5_108 - 108 )
Partition 32 (S.5_115 - 115 )

Coalesce list: (6)D.1619_6 & (72)D.1619_72 [map: 5, 23] : Success -> 5
Coalesce list: (5)shadow_loopvar.4_5 & (58)shadow_loopvar.4_58 [map: 4, 22] : Success -> 4
Coalesce list: (8)S.5_8 & (115)S.5_115 [map: 7, 32] : Success -> 7
Coalesce list: (8)S.5_8 & (108)S.5_108 [map: 7, 31] : Success -> 7
Coalesce list: (7)D.1622_7 & (98)D.1622_98 [map: 6, 29] : Success -> 6
Coalesce list: (7)D.1622_7 & (82)D.1622_82 [map: 6, 27] : Success -> 6
Coalesce list: (3)D.1607_3 & (97)D.1607_97 [map: 2, 28] : Success -> 2
Coalesce list: (3)D.1607_3 & (53)D.1607_53 [map: 2, 20] : Success -> 2
Coalesce list: (2)D.1606_2 & (107)D.1606_107 [map: 1, 30] : Success -> 1
Coalesce list: (2)D.1606_2 & (52)D.1606_52 [map: 1, 19] : Success -> 1
Coalesce list: (5)shadow_loopvar.4_5 & (80)shadow_loopvar.4_80 [map: 4, 26] : Success -> 4
Coalesce list: (4)offset.3_4 & (79)offset.3_79 [map: 3, 25] : Success -> 3
Coalesce list: (4)offset.3_4 & (57)offset.3_57 [map: 3, 21] : Success -> 3
Coalesce list: (6)D.1619_6 & (76)D.1619_76 [map: 5, 24] : Success -> 5
Coalesce list: (1)size.0_1 & (41)size.0_41 [map: 0, 18] : Success -> 0
Coalesce list: (1)size.0_1 & (39)size.0_39 [map: 0, 17] : Success -> 0
Coalesce list: (11)iftmp.16_11 & (35)iftmp.16_35 [map: 10, 16] : Success -> 10
Coalesce list: (11)iftmp.16_11 & (34)iftmp.16_34 [map: 10, 15] : Success -> 10
Coalesce list: (9)iftmp.14_9 & (27)iftmp.14_27 [map: 8, 14] : Success -> 8
Coalesce list: (9)iftmp.14_9 & (20)iftmp.14_20 [map: 8, 11] : Success -> 8
Coalesce list: (10)iftmp.15_10 & (26)iftmp.15_26 [map: 9, 13] : Success -> 9
Coalesce list: (10)iftmp.15_10 & (25)iftmp.15_25 [map: 9, 12] : Success -> 9
After Coalescing:

Partition map 

Partition 0 (size.0_1 - 1 39 41 )
Partition 1 (D.1606_2 - 2 52 107 )
Partition 2 (D.1607_3 - 3 53 97 )
Partition 3 (offset.3_4 - 4 57 79 )
Partition 4 (shadow_loopvar.4_5 - 5 58 80 )
Partition 5 (D.1619_6 - 6 72 76 )
Partition 6 (D.1622_7 - 7 82 98 )
Partition 7 (S.5_8 - 8 108 115 )
Partition 8 (iftmp.14_9 - 9 20 27 )
Partition 9 (iftmp.15_10 - 10 25 26 )
Partition 10 (iftmp.16_11 - 11 34 35 )
Partition 11 (n.12_12 - 12 )
Partition 12 (D.1686_13 - 13 )
Partition 13 (n.13_14 - 14 )
Partition 14 (D.1688_15 - 15 )
Partition 15 (D.1595_16 - 16 )
Partition 16 (D.1690_17 - 17 )
Partition 17 (D.1691_18 - 18 )
Partition 18 (D.1692_19 - 19 )
Partition 19 (D.1697_21 - 21 )
Partition 20 (D.1698_22 - 22 )
Partition 21 (D.1699_23 - 23 )
Partition 22 (D.1700_24 - 24 )
Partition 23 (D.1596_28 - 28 )
Partition 24 (D.1597_29 - 29 )
Partition 25 (D.1705_30 - 30 )
Partition 26 (D.1706_31 - 31 )
Partition 27 (D.1707_32 - 32 )
Partition 28 (D.1708_33 - 33 )
Partition 29 (D.1598_36 - 36 )
Partition 30 (n.17_37 - 37 )
Partition 31 (D.1600_38 - 38 )
Partition 32 (D.1716_40 - 40 )
Partition 33 (overflow.1_42 - 42 )
Partition 34 (D.1717_43 - 43 )
Partition 35 (D.1718_44 - 44 )
Partition 36 (D.1719_45 - 45 )
Partition 37 (D.1722_46 - 46 )
Partition 38 (D.1603_47 - 47 )
Partition 39 (D.1725_48 - 48 )
Partition 40 (D.1726_49 - 49 )
Partition 41 (D.1604_50 - 50 )
Partition 42 (D.1602_51 - 51 )
Partition 43 (D.1608_54 - 54 )
Partition 44 (D.1609_55 - 55 )
Partition 45 (D.1610_56 - 56 )
Partition 46 (D.1617_59 - 59 )
Partition 47 (D.1730_60 - 60 )
Partition 48 (D.1731_61 - 61 )
Partition 49 (D.1732_62 - 62 )
Partition 50 (D.1733_63 - 63 )
Partition 51 (D.1734_64 - 64 )
Partition 52 (D.1735_65 - 65 )
Partition 53 (D.1736_66 - 66 )
Partition 54 (D.1737_67 - 67 )
Partition 55 (D.1738_68 - 68 )
Partition 56 (D.1618_69 - 69 )
Partition 57 (D.1739_70 - 70 )
Partition 58 (D.1740_71 - 71 )
Partition 59 (D.1741_73 - 73 )
Partition 60 (D.1742_74 - 74 )
Partition 61 (D.1743_75 - 75 )
Partition 62 (D.1751_77 - 77 )
Partition 63 (D.1752_78 - 78 )
Partition 64 (D.1621_81 - 81 )
Partition 65 (D.1753_83 - 83 )
Partition 66 (D.1755_84 - 84 )
Partition 67 (D.1756_85 - 85 )
Partition 68 (D.1757_86 - 86 )
Partition 69 (D.1759_87 - 87 )
Partition 70 (D.1760_88 - 88 )
Partition 71 (D.1761_89 - 89 )
Partition 72 (D.1762_90 - 90 )
Partition 73 (D.1626_91 - 91 )
Partition 74 (D.1627_92 - 92 )
Partition 75 (D.1628_93 - 93 )
Partition 76 (D.1763_94 - 94 )
Partition 77 (D.1764_95 - 95 )
Partition 78 (D.1765_96 - 96 )
Partition 79 (D.1766_99 - 99 )
Partition 80 (D.1629_100 - 100 )
Partition 81 (D.1767_101 - 101 )
Partition 82 (D.1770_102 - 102 )
Partition 83 (D.1771_103 - 103 )
Partition 84 (D.1775_104 - 104 )
Partition 85 (D.1776_105 - 105 )
Partition 86 (D.1777_106 - 106 )
Partition 87 (D.1781_109 - 109 )
Partition 88 (D.1782_110 - 110 )
Partition 89 (D.1783_111 - 111 )
Partition 90 (D.1784_112 - 112 )
Partition 91 (D.1785_113 - 113 )
Partition 92 (D.1786_114 - 114 )
Partition 93 (D.1614_116 - 116 )
Partition 94 (D.1790_117 - 117 )
Partition 95 (D.1793_118 - 118 )
Partition 96 (D.1794_119 - 119 )
Partition 97 (D.1797_120 - 120 )

init_random_seed ()
{
  void * D.1614;
  integer(kind=8) D.1626;
  integer(kind=8) D.1627;
  logical(kind=4) D.1628;
  <unnamed-unsigned:64> D.1629;
  integer(kind=8) S.5;
  integer(kind=4) D.1617;
  <unnamed-unsigned:64> D.1618;
  integer(kind=4)[0] * restrict D.1619;
  integer(kind=4)[0:] * restrict D.1606;
  integer(kind=8) D.1607;
  integer(kind=8) D.1608;
  integer(kind=8) D.1609;
  integer(kind=4) D.1610;
  struct array1_integer(kind=4) atmp.2;
  integer(kind=4) shadow_loopvar.4;
  integer(kind=8) D.1621;
  integer(kind=8) offset.3;
  integer(kind=8) D.1622;
  <unnamed-unsigned:64> D.1603;
  void * restrict D.1604;
  void * restrict D.1602;
  integer(kind=8) D.1595;
  integer(kind=4) D.1596;
  integer(kind=8) D.1597;
  integer(kind=4) D.1598;
  <unnamed-unsigned:64> size.0;
  logical(kind=4) D.1600;
  integer(kind=4) overflow.1;
  struct array1_integer(kind=4) seed;
  integer(kind=4) n;
  integer(kind=4) i;
  integer(kind=4) clock;
  void * restrict D.1797;
  void * restrict D.1794;
  void * restrict D.1793;
  void * restrict D.1790;
  integer(kind=4) D.1786;
  integer(kind=4) D.1785;
  integer(kind=4) D.1784;
  void * restrict D.1783;
  integer(kind=8) D.1782;
  integer(kind=8) D.1781;
  void * restrict D.1777;
  void * D.1776;
  void * restrict D.1775;
  void * restrict D.1771;
  void * D.1770;
  void * restrict D.1767;
  integer(kind=8) D.1766;
  integer(kind=8) D.1765;
  integer(kind=8) D.1764;
  integer(kind=8) D.1763;
  integer(kind=8) D.1762;
  integer(kind=8) D.1761;
  integer(kind=8) D.1760;
  integer(kind=8) D.1759;
  integer(kind=8) D.1757;
  integer(kind=8) D.1756;
  integer(kind=8) D.1755;
  void * restrict D.1753;
  integer(kind=4) D.1752;
  void * restrict D.1751;
  logical(kind=4) D.1743;
  logical(kind=4) D.1742;
  logical(kind=4) D.1741;
  void * D.1740;
  void * restrict D.1739;
  integer(kind=8) D.1738;
  integer(kind=8) D.1737;
  integer(kind=8) D.1736;
  integer(kind=8) D.1735;
  integer(kind=8) D.1734;
  integer(kind=4) D.1733;
  integer(kind=4) D.1732;
  integer(kind=4) D.1731;
  integer(kind=8) D.1730;
  void * D.1726;
  <unnamed-unsigned:64> D.1725;
  void * restrict D.1722;
  logical(kind=4) D.1719;
  integer(kind=8) D.1718;
  integer(kind=8) D.1717;
  <unnamed-unsigned:64> D.1716;
  integer(kind=4) n.17;
  logical(kind=4) D.1708;
  integer(kind=8) D.1707;
  integer(kind=8) D.1706;
  <unnamed-unsigned:64> D.1705;
  integer(kind=4) iftmp.16;
  logical(kind=4) D.1700;
  integer(kind=8) D.1699;
  integer(kind=8) D.1698;
  integer(kind=8) D.1697;
  integer(kind=4) iftmp.15;
  logical(kind=4) D.1692;
  integer(kind=8) D.1691;
  integer(kind=8) D.1690;
  integer(kind=4) iftmp.14;
  integer(kind=4) D.1688;
  integer(kind=4) n.13;
  integer(kind=8) D.1686;
  integer(kind=4) n.12;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  seed.data = 0B;
  _gfortran_random_seed_i4 (&n, 0B, 0B);
  seed.dtype = 265;
  seed.dim[0].lbound = 1;
  n.12_12 = n;
  D.1686_13 = (integer(kind=8)) n.12_12;
  seed.dim[0].ubound = D.1686_13;
  seed.dim[0].stride = 1;
  n.13_14 = n;
  D.1688_15 = MAX_EXPR <n.13_14, 0>;
  D.1595_16 = (integer(kind=8)) D.1688_15;
  D.1690_17 = D.1595_16 == 0;
  D.1691_18 = __builtin_expect (D.1690_17, 0);
  D.1692_19 = (logical(kind=4)) D.1691_18;
  if (D.1692_19 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.14_20 = 0;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.1697_21 = 9223372036854775807 / D.1595_16;
  D.1698_22 = D.1697_21 <= 0;
  D.1699_23 = __builtin_expect (D.1698_22, 0);
  D.1700_24 = (logical(kind=4)) D.1699_23;
  if (D.1700_24 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  iftmp.15_25 = 1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  iftmp.15_26 = 0;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  # iftmp.15_10 = PHI <iftmp.15_25(5), iftmp.15_26(6)>
  iftmp.14_27 = iftmp.15_10;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 3 (fallthru) 7 (fallthru)
  # iftmp.14_9 = PHI <iftmp.14_20(3), iftmp.14_27(7)>
  D.1596_28 = iftmp.14_9;
  D.1597_29 = D.1595_16;
  D.1705_30 = (<unnamed-unsigned:64>) D.1597_29;
  D.1706_31 = D.1705_30 > 4611686018427387903;
  D.1707_32 = __builtin_expect (D.1706_31, 0);
  D.1708_33 = (logical(kind=4)) D.1707_32;
  if (D.1708_33 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  iftmp.16_34 = 1;
  goto <bb 11>;
  # SUCC: 11 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  iftmp.16_35 = 0;
  # SUCC: 11 (fallthru)

  # BLOCK 11
  # PRED: 9 (fallthru) 10 (fallthru)
  # iftmp.16_11 = PHI <iftmp.16_34(9), iftmp.16_35(10)>
  D.1598_36 = iftmp.16_11 + D.1596_28;
  n.17_37 = n;
  D.1600_38 = n.17_37 <= 0;
  if (D.1600_38 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 11 (true)
  size.0_39 = 0;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 13
  # PRED: 11 (false)
  D.1716_40 = (<unnamed-unsigned:64>) D.1597_29;
  size.0_41 = D.1716_40 * 4;
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 12 (fallthru) 13 (fallthru)
  # size.0_1 = PHI <size.0_39(12), size.0_41(13)>
  overflow.1_42 = D.1598_36;
  D.1717_43 = overflow.1_42 != 0;
  D.1718_44 = __builtin_expect (D.1717_43, 0);
  D.1719_45 = (logical(kind=4)) D.1718_44;
  if (D.1719_45 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 (true) 16 (false)

  # BLOCK 15
  # PRED: 14 (true)
  _gfortran_runtime_error (&"Integer overflow when calculating the amount of memory to allocate"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 16
  # PRED: 14 (false)
  D.1722_46 = seed.data;
  if (D.1722_46 == 0B)
    goto <bb 17>;
  else
    goto <bb 20>;
  # SUCC: 17 (true) 20 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.1603_47 = size.0_1;
  D.1725_48 = MAX_EXPR <D.1603_47, 1>;
  D.1726_49 = __builtin_malloc (D.1725_48);
  D.1604_50 = (void * restrict) D.1726_49;
  if (D.1604_50 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 (true) 19 (false)

  # BLOCK 18
  # PRED: 17 (true)
  _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 19
  # PRED: 17 (false)
  D.1602_51 = D.1604_50;
  seed.data = D.1602_51;
  seed.offset = -1;
  _gfortran_system_clock_4 (&clock, 0B, 0B);
  D.1606_52 = seed.data;
  D.1607_53 = seed.offset;
  D.1608_54 = seed.dim[0].lbound;
  D.1609_55 = seed.dim[0].ubound;
  D.1610_56 = clock;
  atmp.2.dtype = 265;
  atmp.2.dim[0].stride = 1;
  atmp.2.dim[0].lbound = 0;
  atmp.2.dim[0].ubound = -1;
  atmp.2.data = 0B;
  atmp.2.offset = 0;
  offset.3_57 = 0;
  shadow_loopvar.4_58 = 1;
  D.1617_59 = n;
  D.1730_60 = atmp.2.dim[0].ubound;
  D.1731_61 = D.1617_59 - shadow_loopvar.4_58;
  D.1732_62 = D.1731_61 + 1;
  D.1733_63 = MAX_EXPR <D.1732_62, 0>;
  D.1734_64 = (integer(kind=8)) D.1733_63;
  D.1735_65 = D.1730_60 + D.1734_64;
  atmp.2.dim[0].ubound = D.1735_65;
  D.1736_66 = atmp.2.dim[0].ubound;
  D.1737_67 = D.1736_66 + 1;
  D.1738_68 = D.1737_67 * 4;
  D.1618_69 = (<unnamed-unsigned:64>) D.1738_68;
  D.1739_70 = atmp.2.data;
  D.1740_71 = __builtin_realloc (D.1739_70, D.1618_69);
  D.1619_72 = (integer(kind=4)[0] * restrict) D.1740_71;
  D.1741_73 = D.1619_72 == 0B;
  D.1742_74 = D.1618_69 != 0;
  D.1743_75 = D.1741_73 && D.1742_74;
  if (D.1743_75 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 (true) 22 (false)

  # BLOCK 20
  # PRED: 16 (false)
  _gfortran_runtime_error_at (&"At line 28 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempting to allocate already allocated variable \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 21
  # PRED: 19 (true)
  _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 22
  # PRED: 19 (false)
  if (D.1618_69 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 (true) 24 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.1619_76 = 0B;
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 22 (false) 23 (fallthru)
  # D.1619_6 = PHI <D.1619_72(22), D.1619_76(23)>
  atmp.2.data = D.1619_6;
  # SUCC: 25 (fallthru)

  # BLOCK 25
  # PRED: 24 (fallthru) 26 (fallthru)
  # offset.3_4 = PHI <offset.3_57(24), offset.3_79(26)>
  # shadow_loopvar.4_5 = PHI <shadow_loopvar.4_58(24), shadow_loopvar.4_80(26)>
  if (shadow_loopvar.4_5 > D.1617_59)
    goto <bb 27>;
  else
    goto <bb 26>;
  # SUCC: 27 (true) 26 (false)

  # BLOCK 26
  # PRED: 25 (false)
  D.1751_77 = atmp.2.data;
  D.1752_78 = shadow_loopvar.4_5 + -1;
  MEM[(integer(kind=4)[0] *)D.1751_77][offset.3_4] = D.1752_78;
  offset.3_79 = offset.3_4 + 1;
  shadow_loopvar.4_80 = shadow_loopvar.4_5 + 1;
  goto <bb 25>;
  # SUCC: 25 (fallthru)

  # BLOCK 27
  # PRED: 25 (true)
  D.1621_81 = offset.3_4 + -1;
  atmp.2.dim[0].ubound = D.1621_81;
  D.1622_82 = D.1608_54;
  D.1753_83 = seed.data;
  if (D.1753_83 == 0B)
    goto <bb 30>;
  else
    goto <bb 28>;
  # SUCC: 30 (true) 28 (false)

  # BLOCK 28
  # PRED: 27 (false)
  D.1755_84 = seed.dim[0].lbound;
  D.1756_85 = D.1755_84 + D.1621_81;
  D.1757_86 = seed.dim[0].ubound;
  if (D.1756_85 != D.1757_86)
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  goto <bb 35>;
  # SUCC: 35 (fallthru)

  # BLOCK 30
  # PRED: 27 (true) 28 (true)
  D.1759_87 = seed.dim[0].ubound;
  D.1760_88 = seed.dim[0].lbound;
  D.1761_89 = D.1759_87 - D.1760_88;
  D.1762_90 = D.1761_89 + 1;
  D.1626_91 = MAX_EXPR <D.1762_90, 0>;
  D.1627_92 = D.1621_81 + 1;
  D.1628_93 = D.1626_91 != D.1627_92;
  seed.dim[0].lbound = 1;
  D.1763_94 = D.1621_81 + 1;
  seed.dim[0].ubound = D.1763_94;
  seed.dim[0].stride = 1;
  D.1764_95 = seed.dim[0].lbound;
  D.1765_96 = -D.1764_95;
  seed.offset = D.1765_96;
  D.1607_97 = seed.offset;
  D.1622_98 = seed.dim[0].lbound;
  D.1766_99 = D.1627_92 * 4;
  D.1629_100 = (<unnamed-unsigned:64>) D.1766_99;
  D.1767_101 = seed.data;
  if (D.1767_101 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 (true) 32 (false)

  # BLOCK 31
  # PRED: 30 (true)
  D.1770_102 = __builtin_malloc (D.1629_100);
  D.1771_103 = (void * restrict) D.1770_102;
  seed.data = D.1771_103;
  seed.dtype = 265;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 32
  # PRED: 30 (false)
  if (D.1628_93 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 (true) 34 (false)

  # BLOCK 33
  # PRED: 32 (true)
  D.1775_104 = seed.data;
  D.1776_105 = __builtin_realloc (D.1775_104, D.1629_100);
  D.1777_106 = (void * restrict) D.1776_105;
  seed.data = D.1777_106;
  # SUCC: 34 (fallthru)

  # BLOCK 34
  # PRED: 31 (fallthru) 32 (false) 33 (fallthru)
  D.1606_107 = seed.data;
  # SUCC: 35 (fallthru)

  # BLOCK 35
  # PRED: 29 (fallthru) 34 (fallthru)
  # D.1606_2 = PHI <D.1606_52(29), D.1606_107(34)>
  # D.1607_3 = PHI <D.1607_53(29), D.1607_97(34)>
  # D.1622_7 = PHI <D.1622_82(29), D.1622_98(34)>
  S.5_108 = 0;
  # SUCC: 36 (fallthru)

  # BLOCK 36
  # PRED: 35 (fallthru) 37 (fallthru)
  # S.5_8 = PHI <S.5_108(35), S.5_115(37)>
  if (S.5_8 > D.1621_81)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 (true) 37 (false)

  # BLOCK 37
  # PRED: 36 (false)
  D.1781_109 = S.5_8 + D.1622_7;
  D.1782_110 = D.1781_109 + D.1607_3;
  D.1783_111 = atmp.2.data;
  D.1784_112 = MEM[(integer(kind=4)[0] *)D.1783_111][S.5_8];
  D.1785_113 = D.1784_112 * 37;
  D.1786_114 = D.1785_113 + D.1610_56;
  *D.1606_2[D.1782_110] = D.1786_114;
  S.5_115 = S.5_8 + 1;
  goto <bb 36>;
  # SUCC: 36 (fallthru)

  # BLOCK 38
  # PRED: 36 (true)
  D.1614_116 = atmp.2.data;
  if (D.1614_116 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  __builtin_free (D.1614_116);
  # SUCC: 40 (fallthru)

  # BLOCK 40
  # PRED: 38 (false) 39 (fallthru)
  _gfortran_random_seed_i4 (0B, &seed, 0B);
  D.1790_117 = seed.data;
  if (D.1790_117 == 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 (true) 42 (false)

  # BLOCK 41
  # PRED: 40 (true)
  _gfortran_runtime_error_at (&"At line 32 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempt to DEALLOCATE unallocated \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});
  # SUCC:

  # BLOCK 42
  # PRED: 40 (false)
  D.1793_118 = seed.data;
  __builtin_free (D.1793_118);
  seed.data = 0B;
  D.1794_119 = seed.data;
  if (D.1794_119 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 (true) 44 (false)

  # BLOCK 43
  # PRED: 42 (true)
  D.1797_120 = seed.data;
  __builtin_free (D.1797_120);
  # SUCC: 44 (fallthru)

  # BLOCK 44
  # PRED: 42 (false) 43 (fallthru)
  seed.data = 0B;
  return;
  # SUCC: EXIT

}


Partition 0: size 48 align 16
	atmp.2, offset 0

;; Generating RTL for gimple basic block 2

;; seed.data = 0B;

(insn 5 4 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:25 -1
     (nil))

;; _gfortran_random_seed_i4 (&n, 0B, 0B);

(insn 6 5 7 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:27 -1
     (nil))

(insn 7 6 8 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(insn 8 7 9 (set (reg:DI 4 si)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 157)) Test6.f08:27 -1
     (nil))

(insn 10 9 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("_gfortran_random_seed_i4") [flags 0x41]  <function_decl 0x7fc95dbed700 _gfortran_random_seed_i4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:27 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

;; seed.dtype = 265;

(insn 12 11 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 seed.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:28 -1
     (nil))

;; seed.dim[0].lbound = 1;

(insn 13 12 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

;; n.12_12 = n;

(insn 14 13 0 (set (reg:SI 70 [ n.12 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

;; D.1686_13 = (integer(kind=8)) n.12_12;

(insn 15 14 0 (set (reg:DI 71 [ D.1686 ])
        (sign_extend:DI (reg:SI 70 [ n.12 ]))) Test6.f08:28 -1
     (nil))

;; seed.dim[0].ubound = D.1686_13;

(insn 16 15 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])
        (reg:DI 71 [ D.1686 ])) Test6.f08:28 -1
     (nil))

;; seed.dim[0].stride = 1;

(insn 17 16 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 seed.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

;; n.13_14 = n;

(insn 18 17 0 (set (reg:SI 72 [ n.13 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

;; D.1688_15 = MAX_EXPR <n.13_14, 0>;

(insn 20 18 19 (set (reg:SI 158)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(insn 19 20 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 72 [ n.13 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 21 19 0 (set (reg:SI 73 [ D.1688 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 72 [ n.13 ])
            (reg:SI 158))) Test6.f08:28 -1
     (nil))

;; D.1595_16 = (integer(kind=8)) D.1688_15;

(insn 22 21 0 (set (reg:DI 74 [ D.1595 ])
        (sign_extend:DI (reg:SI 73 [ D.1688 ]))) Test6.f08:28 -1
     (nil))

;; D.1690_17 = D.1595_16 == 0;

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74 [ D.1595 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 24 23 25 (set (reg:QI 159)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 25 24 0 (set (reg:DI 75 [ D.1690 ])
        (zero_extend:DI (reg:QI 159))) Test6.f08:28 -1
     (nil))

;; D.1691_18 = __builtin_expect (D.1690_17, 0);

(insn 26 25 0 (set (reg:DI 76 [ D.1691 ])
        (reg:DI 75 [ D.1690 ])) Test6.f08:28 -1
     (nil))

;; D.1692_19 = (logical(kind=4)) D.1691_18;

(insn 27 26 0 (set (reg:SI 77 [ D.1692 ])
        (subreg:SI (reg:DI 76 [ D.1691 ]) 0)) Test6.f08:28 -1
     (nil))

;; if (D.1692_19 != 0)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.1692 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; iftmp.14_20 = 0;

(insn 31 30 0 (set (reg:SI 67 [ iftmp.14 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 34 33 35 13 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; D.1697_21 = 9223372036854775807 / D.1595_16;

(insn 36 35 37 (set (reg:DI 162)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) Test6.f08:28 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:DI 160)
                (div:DI (reg:DI 162)
                    (reg:DI 74 [ D.1595 ])))
            (set (reg:DI 161)
                (mod:DI (reg:DI 162)
                    (reg:DI 74 [ D.1595 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

(insn 38 37 0 (set (reg:DI 78 [ D.1697 ])
        (reg:DI 160)) Test6.f08:28 -1
     (nil))

;; D.1698_22 = D.1697_21 <= 0;

(insn 39 38 40 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 78 [ D.1697 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 40 39 41 (set (reg:QI 163)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 41 40 0 (set (reg:DI 79 [ D.1698 ])
        (zero_extend:DI (reg:QI 163))) Test6.f08:28 -1
     (nil))

;; D.1699_23 = __builtin_expect (D.1698_22, 0);

(insn 42 41 0 (set (reg:DI 80 [ D.1699 ])
        (reg:DI 79 [ D.1698 ])) Test6.f08:28 -1
     (nil))

;; D.1700_24 = (logical(kind=4)) D.1699_23;

(insn 43 42 0 (set (reg:SI 81 [ D.1700 ])
        (subreg:SI (reg:DI 80 [ D.1699 ]) 0)) Test6.f08:28 -1
     (nil))

;; if (D.1700_24 != 0)

(insn 44 43 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.1700 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; iftmp.15_25 = 1;

(insn 47 46 0 (set (reg:SI 68 [ iftmp.15 ])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 50 49 51 15 "" [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.15_26 = 0;

(insn 52 51 0 (set (reg:SI 68 [ iftmp.15 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 53 52 54 16 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.14_27 = iftmp.15_10;

(insn 55 54 0 (set (reg:SI 67 [ iftmp.14 ])
        (reg:SI 68 [ iftmp.15 ])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 56 55 57 14 "" [0 uses])

(note 57 56 0 NOTE_INSN_BASIC_BLOCK)

;; D.1596_28 = iftmp.14_9;

(insn 58 57 0 (set (reg:SI 82 [ D.1596 ])
        (reg:SI 67 [ iftmp.14 ])) Test6.f08:28 -1
     (nil))

;; D.1597_29 = D.1595_16;

(insn 59 58 0 (set (reg:DI 83 [ D.1597 ])
        (reg:DI 74 [ D.1595 ])) Test6.f08:28 -1
     (nil))

;; D.1705_30 = (<unnamed-unsigned:64>) D.1597_29;

(insn 60 59 0 (set (reg:DI 84 [ D.1705 ])
        (reg:DI 83 [ D.1597 ])) Test6.f08:28 -1
     (nil))

;; D.1706_31 = D.1705_30 > 4611686018427387903;

(insn 61 60 62 (set (reg:DI 164)
        (const_int 4611686018427387903 [0x3fffffffffffffff])) Test6.f08:28 -1
     (nil))

(insn 62 61 63 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 84 [ D.1705 ])
            (reg:DI 164))) Test6.f08:28 -1
     (nil))

(insn 63 62 64 (set (reg:QI 165)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 64 63 0 (set (reg:DI 85 [ D.1706 ])
        (zero_extend:DI (reg:QI 165))) Test6.f08:28 -1
     (nil))

;; D.1707_32 = __builtin_expect (D.1706_31, 0);

(insn 65 64 0 (set (reg:DI 86 [ D.1707 ])
        (reg:DI 85 [ D.1706 ])) Test6.f08:28 -1
     (nil))

;; D.1708_33 = (logical(kind=4)) D.1707_32;

(insn 66 65 0 (set (reg:SI 87 [ D.1708 ])
        (subreg:SI (reg:DI 86 [ D.1707 ]) 0)) Test6.f08:28 -1
     (nil))

;; if (D.1708_33 != 0)

(insn 67 66 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.1708 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 68 67 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; iftmp.16_34 = 1;

(insn 70 69 0 (set (reg:SI 69 [ iftmp.16 ])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 73 72 74 17 "" [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.16_35 = 0;

(insn 75 74 0 (set (reg:SI 69 [ iftmp.16 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 76 75 77 18 "" [0 uses])

(note 77 76 0 NOTE_INSN_BASIC_BLOCK)

;; D.1598_36 = iftmp.16_11 + D.1596_28;

(insn 78 77 0 (parallel [
            (set (reg:SI 88 [ D.1598 ])
                (plus:SI (reg:SI 69 [ iftmp.16 ])
                    (reg:SI 82 [ D.1596 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

;; n.17_37 = n;

(insn 79 78 0 (set (reg:SI 89 [ n.17 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

;; D.1600_38 = n.17_37 <= 0;

(insn 80 79 81 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 89 [ n.17 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 81 80 82 (set (reg:QI 166)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 82 81 0 (parallel [
            (set (reg:SI 90 [ D.1600 ])
                (zero_extend:SI (reg:QI 166)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

;; if (D.1600_38 != 0)

(insn 83 82 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.1600 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 84 83 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; size.0_39 = 0;

(insn 86 85 0 (set (reg:DI 59 [ size.0 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 89 88 90 19 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; D.1716_40 = (<unnamed-unsigned:64>) D.1597_29;

(insn 91 90 0 (set (reg:DI 91 [ D.1716 ])
        (reg:DI 83 [ D.1597 ])) Test6.f08:28 -1
     (nil))

;; size.0_41 = D.1716_40 * 4;

(insn 92 91 0 (parallel [
            (set (reg:DI 59 [ size.0 ])
                (ashift:DI (reg:DI 91 [ D.1716 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 93 92 94 20 "" [0 uses])

(note 94 93 0 NOTE_INSN_BASIC_BLOCK)

;; overflow.1_42 = D.1598_36;

(insn 95 94 0 (set (reg:SI 92 [ overflow.1 ])
        (reg:SI 88 [ D.1598 ])) Test6.f08:28 -1
     (nil))

;; D.1717_43 = overflow.1_42 != 0;

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ overflow.1 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 97 96 98 (set (reg:QI 167)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 98 97 0 (set (reg:DI 93 [ D.1717 ])
        (zero_extend:DI (reg:QI 167))) Test6.f08:28 -1
     (nil))

;; D.1718_44 = __builtin_expect (D.1717_43, 0);

(insn 99 98 0 (set (reg:DI 94 [ D.1718 ])
        (reg:DI 93 [ D.1717 ])) Test6.f08:28 -1
     (nil))

;; D.1719_45 = (logical(kind=4)) D.1718_44;

(insn 100 99 0 (set (reg:SI 95 [ D.1719 ])
        (subreg:SI (reg:DI 94 [ D.1718 ]) 0)) Test6.f08:28 -1
     (nil))

;; if (D.1719_45 != 0)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.1719 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _gfortran_runtime_error (&"Integer overflow when calculating the amount of memory to allocate"[1]{lb: 1 sz: 1});

(insn 104 103 105 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc95dc27780 *.LC5>)) Test6.f08:28 -1
     (nil))

(insn 105 104 106 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(call_insn 106 105 107 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error") [flags 0x41]  <function_decl 0x7fc95ddde200 _gfortran_runtime_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(barrier 107 106 0)

;; Generating RTL for gimple basic block 16

;; 

(code_label 108 107 109 21 "" [0 uses])

(note 109 108 0 NOTE_INSN_BASIC_BLOCK)

;; D.1722_46 = seed.data;

(insn 110 109 0 (set (reg/f:DI 96 [ D.1722 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:28 -1
     (nil))

;; if (D.1722_46 == 0B)

(insn 111 110 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.1722 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 112 111 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; D.1603_47 = size.0_1;

(insn 114 113 0 (set (reg:DI 97 [ D.1603 ])
        (reg:DI 59 [ size.0 ])) Test6.f08:28 -1
     (nil))

;; D.1725_48 = MAX_EXPR <D.1603_47, 1>;

(insn 116 114 115 (set (reg:DI 168)
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(insn 115 116 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ D.1603 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 117 115 0 (set (reg:DI 98 [ D.1725 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 97 [ D.1603 ])
            (reg:DI 168))) Test6.f08:28 -1
     (nil))

;; D.1726_49 = __builtin_malloc (D.1725_48);

(insn 118 117 119 (set (reg:DI 5 di)
        (reg:DI 98 [ D.1725 ])) Test6.f08:28 -1
     (nil))

(call_insn 119 118 120 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc95dd56d00 __builtin_malloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:28 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 120 119 121 (set (reg/f:DI 169)
        (reg:DI 0 ax)) Test6.f08:28 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))

(insn 121 120 0 (set (reg/f:DI 99 [ D.1726 ])
        (reg/f:DI 169)) Test6.f08:28 -1
     (nil))

;; D.1604_50 = (void * restrict) D.1726_49;

(insn 122 121 0 (set (reg/f:DI 100 [ D.1604 ])
        (reg/f:DI 99 [ D.1726 ])) Test6.f08:28 -1
     (nil))

;; if (D.1604_50 == 0B)

(insn 123 122 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.1604 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 124 123 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:28 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});

(insn 126 125 127 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc95dc27820 *.LC6>)) Test6.f08:28 -1
     (nil))

(call_insn 127 126 128 (call (mem:QI (symbol_ref:DI ("_gfortran_os_error") [flags 0x41]  <function_decl 0x7fc95ddde600 _gfortran_os_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(barrier 128 127 0)

;; Generating RTL for gimple basic block 19

;; 

(code_label 129 128 130 23 "" [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; D.1602_51 = D.1604_50;

(insn 131 130 0 (set (reg/f:DI 101 [ D.1602 ])
        (reg/f:DI 100 [ D.1604 ])) Test6.f08:28 -1
     (nil))

;; seed.data = D.1602_51;

(insn 132 131 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 101 [ D.1602 ])) Test6.f08:28 -1
     (nil))

;; seed.offset = -1;

(insn 133 132 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) Test6.f08:28 -1
     (nil))

;; _gfortran_system_clock_4 (&clock, 0B, 0B);

(insn 134 133 135 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:29 -1
     (nil))

(insn 135 134 136 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(insn 136 135 137 (set (reg:DI 4 si)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(insn 137 136 138 (set (reg:DI 5 di)
        (reg:DI 170)) Test6.f08:29 -1
     (nil))

(insn 138 137 139 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(call_insn 139 138 0 (call (mem:QI (symbol_ref:DI ("_gfortran_system_clock_4") [flags 0x41]  <function_decl 0x7fc95dbed800 _gfortran_system_clock_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:29 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

;; D.1606_52 = seed.data;

(insn 140 139 0 (set (reg/f:DI 60 [ D.1606 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1607_53 = seed.offset;

(insn 141 140 0 (set (reg:DI 61 [ D.1607 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1608_54 = seed.dim[0].lbound;

(insn 142 141 0 (set (reg:DI 102 [ D.1608 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1609_55 = seed.dim[0].ubound;

(insn 143 142 0 (set (reg:DI 103 [ D.1609 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1610_56 = clock;

(insn 144 143 0 (set (reg:SI 104 [ D.1610 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 clock+0 S4 A32])) Test6.f08:30 -1
     (nil))

;; atmp.2.dtype = 265;

(insn 145 144 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 atmp.2.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:30 -1
     (nil))

;; atmp.2.dim[0].stride = 1;

(insn 146 145 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 atmp.2.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

;; atmp.2.dim[0].lbound = 0;

(insn 147 146 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 atmp.2.dim[0].lbound+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; atmp.2.dim[0].ubound = -1;

(insn 148 147 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) Test6.f08:30 -1
     (nil))

;; atmp.2.data = 0B;

(insn 149 148 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; atmp.2.offset = 0;

(insn 150 149 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 atmp.2.offset+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; offset.3_57 = 0;

(insn 151 150 0 (set (reg:DI 62 [ offset.3 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; shadow_loopvar.4_58 = 1;

(insn 152 151 0 (set (reg:SI 63 [ shadow_loopvar.4 ])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

;; D.1617_59 = n;

(insn 153 152 0 (set (reg:SI 105 [ D.1617 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:30 -1
     (nil))

;; D.1730_60 = atmp.2.dim[0].ubound;

(insn 154 153 0 (set (reg:DI 106 [ D.1730 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1731_61 = D.1617_59 - shadow_loopvar.4_58;

(insn 155 154 0 (parallel [
            (set (reg:SI 107 [ D.1731 ])
                (minus:SI (reg:SI 105 [ D.1617 ])
                    (reg:SI 63 [ shadow_loopvar.4 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1732_62 = D.1731_61 + 1;

(insn 156 155 0 (parallel [
            (set (reg:SI 108 [ D.1732 ])
                (plus:SI (reg:SI 107 [ D.1731 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1733_63 = MAX_EXPR <D.1732_62, 0>;

(insn 158 156 157 (set (reg:SI 171)
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 157 158 159 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 108 [ D.1732 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 159 157 0 (set (reg:SI 109 [ D.1733 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 108 [ D.1732 ])
            (reg:SI 171))) Test6.f08:30 -1
     (nil))

;; D.1734_64 = (integer(kind=8)) D.1733_63;

(insn 160 159 0 (set (reg:DI 110 [ D.1734 ])
        (sign_extend:DI (reg:SI 109 [ D.1733 ]))) Test6.f08:30 -1
     (nil))

;; D.1735_65 = D.1730_60 + D.1734_64;

(insn 161 160 0 (parallel [
            (set (reg:DI 111 [ D.1735 ])
                (plus:DI (reg:DI 106 [ D.1730 ])
                    (reg:DI 110 [ D.1734 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; atmp.2.dim[0].ubound = D.1735_65;

(insn 162 161 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (reg:DI 111 [ D.1735 ])) Test6.f08:30 -1
     (nil))

;; D.1736_66 = atmp.2.dim[0].ubound;

(insn 163 162 0 (set (reg:DI 112 [ D.1736 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1737_67 = D.1736_66 + 1;

(insn 164 163 0 (parallel [
            (set (reg:DI 113 [ D.1737 ])
                (plus:DI (reg:DI 112 [ D.1736 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1738_68 = D.1737_67 * 4;

(insn 165 164 0 (parallel [
            (set (reg:DI 114 [ D.1738 ])
                (ashift:DI (reg:DI 113 [ D.1737 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1618_69 = (<unnamed-unsigned:64>) D.1738_68;

(insn 166 165 0 (set (reg:DI 115 [ D.1618 ])
        (reg:DI 114 [ D.1738 ])) Test6.f08:30 -1
     (nil))

;; D.1739_70 = atmp.2.data;

(insn 167 166 0 (set (reg/f:DI 116 [ D.1739 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1740_71 = __builtin_realloc (D.1739_70, D.1618_69);

(insn 168 167 169 (set (reg:DI 4 si)
        (reg:DI 115 [ D.1618 ])) Test6.f08:30 -1
     (nil))

(insn 169 168 170 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.1739 ])) Test6.f08:30 -1
     (nil))

(call_insn 170 169 171 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fc95dd56e00 __builtin_realloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 171 170 0 (set (reg/f:DI 117 [ D.1740 ])
        (reg:DI 0 ax)) Test6.f08:30 -1
     (nil))

;; D.1619_72 = (integer(kind=4)[0] * restrict) D.1740_71;

(insn 172 171 0 (set (reg/f:DI 64 [ D.1619 ])
        (reg/f:DI 117 [ D.1740 ])) Test6.f08:30 -1
     (nil))

;; D.1741_73 = D.1619_72 == 0B;

(insn 173 172 174 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 64 [ D.1619 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 174 173 175 (set (reg:QI 172)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 175 174 0 (parallel [
            (set (reg:SI 118 [ D.1741 ])
                (zero_extend:SI (reg:QI 172)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1742_74 = D.1618_69 != 0;

(insn 176 175 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ D.1618 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 177 176 178 (set (reg:QI 173)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 178 177 0 (parallel [
            (set (reg:SI 119 [ D.1742 ])
                (zero_extend:SI (reg:QI 173)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1743_75 = D.1741_73 && D.1742_74;

(insn 179 178 0 (parallel [
            (set (reg:SI 120 [ D.1743 ])
                (and:SI (reg:SI 118 [ D.1741 ])
                    (reg:SI 119 [ D.1742 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; if (D.1743_75 != 0)

(insn 180 179 181 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.1743 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 181 180 184 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

(note 184 181 182 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(jump_insn 182 184 183 46 (set (pc)
        (label_ref 0)) Test6.f08:30 -1
     (nil))

(barrier 183 182 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 185 183 186 22 "" [0 uses])

(note 186 185 0 NOTE_INSN_BASIC_BLOCK)

;; _gfortran_runtime_error_at (&"At line 28 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempting to allocate already allocated variable \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});

(insn 187 186 188 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc95dc278c0 *.LC7>)) Test6.f08:28 -1
     (nil))

(insn 188 187 189 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fc95dc27960 *.LC8>)) Test6.f08:28 -1
     (nil))

(insn 189 188 190 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fc95dc27a00 *.LC9>)) Test6.f08:28 -1
     (nil))

(insn 190 189 191 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(call_insn 191 190 192 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error_at") [flags 0x41]  <function_decl 0x7fc95ddde300 _gfortran_runtime_error_at>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(barrier 192 191 0)

;; Generating RTL for gimple basic block 21

;; 

(code_label 193 192 194 24 "" [0 uses])

(note 194 193 0 NOTE_INSN_BASIC_BLOCK)

;; _gfortran_os_error (&"Allocation would exceed memory limit"[1]{lb: 1 sz: 1});

(insn 195 194 196 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc95dc27820 *.LC6>)) Test6.f08:30 -1
     (nil))

(call_insn 196 195 197 (call (mem:QI (symbol_ref:DI ("_gfortran_os_error") [flags 0x41]  <function_decl 0x7fc95ddde600 _gfortran_os_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:30 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(barrier 197 196 0)

;; Generating RTL for gimple basic block 22

;; 

(code_label 198 197 199 25 "" [0 uses])

(note 199 198 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.1618_69 == 0)

(insn 200 199 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ D.1618 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 201 200 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; D.1619_76 = 0B;

(insn 203 202 0 (set (reg/f:DI 64 [ D.1619 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 204 203 205 26 "" [0 uses])

(note 205 204 0 NOTE_INSN_BASIC_BLOCK)

;; atmp.2.data = D.1619_6;

(insn 206 205 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])
        (reg/f:DI 64 [ D.1619 ])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; if (shadow_loopvar.4_5 > D.1617_59)

(insn 208 207 209 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ shadow_loopvar.4 ])
            (reg:SI 105 [ D.1617 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 209 208 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; D.1751_77 = atmp.2.data;

(insn 211 210 0 (set (reg/f:DI 121 [ D.1751 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1752_78 = shadow_loopvar.4_5 + -1;

(insn 212 211 0 (parallel [
            (set (reg:SI 122 [ D.1752 ])
                (plus:SI (reg:SI 63 [ shadow_loopvar.4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; MEM[(integer(kind=4)[0] *)D.1751_77][offset.3_4] = D.1752_78;

(insn 213 212 0 (set (mem/s/j:SI (plus:DI (mult:DI (reg:DI 62 [ offset.3 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 121 [ D.1751 ])) [0 MEM[(integer(kind=4)[0] *)D.1751_77] S4 A32])
        (reg:SI 122 [ D.1752 ])) Test6.f08:30 -1
     (nil))

;; offset.3_79 = offset.3_4 + 1;

(insn 214 213 0 (parallel [
            (set (reg:DI 62 [ offset.3 ])
                (plus:DI (reg:DI 62 [ offset.3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; shadow_loopvar.4_80 = shadow_loopvar.4_5 + 1;

(insn 215 214 0 (parallel [
            (set (reg:SI 63 [ shadow_loopvar.4 ])
                (plus:SI (reg:SI 63 [ shadow_loopvar.4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 219 218 220 27 "" [0 uses])

(note 220 219 0 NOTE_INSN_BASIC_BLOCK)

;; D.1621_81 = offset.3_4 + -1;

(insn 221 220 0 (parallel [
            (set (reg:DI 123 [ D.1621 ])
                (plus:DI (reg:DI 62 [ offset.3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; atmp.2.dim[0].ubound = D.1621_81;

(insn 222 221 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (reg:DI 123 [ D.1621 ])) Test6.f08:30 -1
     (nil))

;; D.1622_82 = D.1608_54;

(insn 223 222 0 (set (reg:DI 65 [ D.1622 ])
        (reg:DI 102 [ D.1608 ])) Test6.f08:30 -1
     (nil))

;; D.1753_83 = seed.data;

(insn 224 223 0 (set (reg/f:DI 124 [ D.1753 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; if (D.1753_83 == 0B)

(insn 225 224 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 124 [ D.1753 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 226 225 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; D.1755_84 = seed.dim[0].lbound;

(insn 228 227 0 (set (reg:DI 125 [ D.1755 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1756_85 = D.1755_84 + D.1621_81;

(insn 229 228 0 (parallel [
            (set (reg:DI 126 [ D.1756 ])
                (plus:DI (reg:DI 125 [ D.1755 ])
                    (reg:DI 123 [ D.1621 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1757_86 = seed.dim[0].ubound;

(insn 230 229 0 (set (reg:DI 127 [ D.1757 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; if (D.1756_85 != D.1757_86)

(insn 231 230 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 126 [ D.1756 ])
            (reg:DI 127 [ D.1757 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 232 231 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; 

(code_label 236 235 237 29 "" [0 uses])

(note 237 236 0 NOTE_INSN_BASIC_BLOCK)

;; D.1759_87 = seed.dim[0].ubound;

(insn 238 237 0 (set (reg:DI 128 [ D.1759 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1760_88 = seed.dim[0].lbound;

(insn 239 238 0 (set (reg:DI 129 [ D.1760 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1761_89 = D.1759_87 - D.1760_88;

(insn 240 239 0 (parallel [
            (set (reg:DI 130 [ D.1761 ])
                (minus:DI (reg:DI 128 [ D.1759 ])
                    (reg:DI 129 [ D.1760 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1762_90 = D.1761_89 + 1;

(insn 241 240 0 (parallel [
            (set (reg:DI 131 [ D.1762 ])
                (plus:DI (reg:DI 130 [ D.1761 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1626_91 = MAX_EXPR <D.1762_90, 0>;

(insn 243 241 242 (set (reg:DI 174)
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 242 243 244 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 131 [ D.1762 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 244 242 0 (set (reg:DI 132 [ D.1626 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 131 [ D.1762 ])
            (reg:DI 174))) Test6.f08:30 -1
     (nil))

;; D.1627_92 = D.1621_81 + 1;

(insn 245 244 0 (parallel [
            (set (reg:DI 133 [ D.1627 ])
                (plus:DI (reg:DI 123 [ D.1621 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1628_93 = D.1626_91 != D.1627_92;

(insn 246 245 247 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ D.1626 ])
            (reg:DI 133 [ D.1627 ]))) Test6.f08:30 -1
     (nil))

(insn 247 246 248 (set (reg:QI 175)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 248 247 0 (parallel [
            (set (reg:SI 134 [ D.1628 ])
                (zero_extend:SI (reg:QI 175)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; seed.dim[0].lbound = 1;

(insn 249 248 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

;; D.1763_94 = D.1621_81 + 1;

(insn 250 249 0 (parallel [
            (set (reg:DI 135 [ D.1763 ])
                (plus:DI (reg:DI 123 [ D.1621 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; seed.dim[0].ubound = D.1763_94;

(insn 251 250 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])
        (reg:DI 135 [ D.1763 ])) Test6.f08:30 -1
     (nil))

;; seed.dim[0].stride = 1;

(insn 252 251 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 seed.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

;; D.1764_95 = seed.dim[0].lbound;

(insn 253 252 0 (set (reg:DI 136 [ D.1764 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1765_96 = -D.1764_95;

(insn 254 253 0 (parallel [
            (set (reg:DI 137 [ D.1765 ])
                (neg:DI (reg:DI 136 [ D.1764 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; seed.offset = D.1765_96;

(insn 255 254 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])
        (reg:DI 137 [ D.1765 ])) Test6.f08:30 -1
     (nil))

;; D.1607_97 = seed.offset;

(insn 256 255 0 (set (reg:DI 61 [ D.1607 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1622_98 = seed.dim[0].lbound;

(insn 257 256 0 (set (reg:DI 65 [ D.1622 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1766_99 = D.1627_92 * 4;

(insn 258 257 0 (parallel [
            (set (reg:DI 138 [ D.1766 ])
                (ashift:DI (reg:DI 133 [ D.1627 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1629_100 = (<unnamed-unsigned:64>) D.1766_99;

(insn 259 258 0 (set (reg:DI 139 [ D.1629 ])
        (reg:DI 138 [ D.1766 ])) Test6.f08:30 -1
     (nil))

;; D.1767_101 = seed.data;

(insn 260 259 0 (set (reg/f:DI 140 [ D.1767 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; if (D.1767_101 == 0B)

(insn 261 260 262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 140 [ D.1767 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 262 261 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; D.1770_102 = __builtin_malloc (D.1629_100);

(insn 264 263 265 (set (reg:DI 5 di)
        (reg:DI 139 [ D.1629 ])) Test6.f08:30 -1
     (nil))

(call_insn 265 264 266 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc95dd56d00 __builtin_malloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 266 265 267 (set (reg/f:DI 176)
        (reg:DI 0 ax)) Test6.f08:30 -1
     (expr_list:REG_NOALIAS (reg/f:DI 176)
        (nil)))

(insn 267 266 0 (set (reg/f:DI 141 [ D.1770 ])
        (reg/f:DI 176)) Test6.f08:30 -1
     (nil))

;; D.1771_103 = (void * restrict) D.1770_102;

(insn 268 267 0 (set (reg/f:DI 142 [ D.1771 ])
        (reg/f:DI 141 [ D.1770 ])) Test6.f08:30 -1
     (nil))

;; seed.data = D.1771_103;

(insn 269 268 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 142 [ D.1771 ])) Test6.f08:30 -1
     (nil))

;; seed.dtype = 265;

(insn 270 269 0 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 seed.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 273 272 274 31 "" [0 uses])

(note 274 273 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.1628_93 != 0)

(insn 275 274 276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.1628 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 276 275 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; D.1775_104 = seed.data;

(insn 278 277 0 (set (reg/f:DI 143 [ D.1775 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1776_105 = __builtin_realloc (D.1775_104, D.1629_100);

(insn 279 278 280 (set (reg:DI 4 si)
        (reg:DI 139 [ D.1629 ])) Test6.f08:30 -1
     (nil))

(insn 280 279 281 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.1775 ])) Test6.f08:30 -1
     (nil))

(call_insn 281 280 282 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fc95dd56e00 __builtin_realloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 282 281 0 (set (reg/f:DI 144 [ D.1776 ])
        (reg:DI 0 ax)) Test6.f08:30 -1
     (nil))

;; D.1777_106 = (void * restrict) D.1776_105;

(insn 283 282 0 (set (reg/f:DI 145 [ D.1777 ])
        (reg/f:DI 144 [ D.1776 ])) Test6.f08:30 -1
     (nil))

;; seed.data = D.1777_106;

(insn 284 283 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 145 [ D.1777 ])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 285 284 286 32 "" [0 uses])

(note 286 285 0 NOTE_INSN_BASIC_BLOCK)

;; D.1606_107 = seed.data;

(insn 287 286 0 (set (reg/f:DI 60 [ D.1606 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 288 287 289 30 "" [0 uses])

(note 289 288 0 NOTE_INSN_BASIC_BLOCK)

;; S.5_108 = 0;

(insn 290 289 0 (set (reg:DI 66 [ S.5 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; if (S.5_8 > D.1621_81)

(insn 292 291 293 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 66 [ S.5 ])
            (reg:DI 123 [ D.1621 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 293 292 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; D.1781_109 = S.5_8 + D.1622_7;

(insn 295 294 0 (parallel [
            (set (reg:DI 146 [ D.1781 ])
                (plus:DI (reg:DI 66 [ S.5 ])
                    (reg:DI 65 [ D.1622 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1782_110 = D.1781_109 + D.1607_3;

(insn 296 295 0 (parallel [
            (set (reg:DI 147 [ D.1782 ])
                (plus:DI (reg:DI 146 [ D.1781 ])
                    (reg:DI 61 [ D.1607 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; D.1783_111 = atmp.2.data;

(insn 297 296 0 (set (reg/f:DI 148 [ D.1783 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; D.1784_112 = MEM[(integer(kind=4)[0] *)D.1783_111][S.5_8];

(insn 298 297 0 (set (reg:SI 149 [ D.1784 ])
        (mem/s/j:SI (plus:DI (mult:DI (reg:DI 66 [ S.5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148 [ D.1783 ])) [0 MEM[(integer(kind=4)[0] *)D.1783_111] S4 A32])) Test6.f08:30 -1
     (nil))

;; D.1785_113 = D.1784_112 * 37;

(insn 299 298 300 (set (reg:SI 177)
        (reg:SI 149 [ D.1784 ])) Test6.f08:30 -1
     (nil))

(insn 300 299 301 (parallel [
            (set (reg:SI 177)
                (ashift:SI (reg:SI 177)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 301 300 302 (parallel [
            (set (reg:SI 177)
                (plus:SI (reg:SI 177)
                    (reg:SI 149 [ D.1784 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 149 [ D.1784 ])
            (const_int 9 [0x9]))
        (nil)))

(insn 302 301 303 (parallel [
            (set (reg:SI 177)
                (ashift:SI (reg:SI 177)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 303 302 0 (parallel [
            (set (reg:SI 150 [ D.1785 ])
                (plus:SI (reg:SI 177)
                    (reg:SI 149 [ D.1784 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 149 [ D.1784 ])
            (const_int 37 [0x25]))
        (nil)))

;; D.1786_114 = D.1785_113 + D.1610_56;

(insn 304 303 0 (parallel [
            (set (reg:SI 151 [ D.1786 ])
                (plus:SI (reg:SI 150 [ D.1785 ])
                    (reg:SI 104 [ D.1610 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; *D.1606_2[D.1782_110] = D.1786_114;

(insn 305 304 0 (set (mem/s/j:SI (plus:DI (mult:DI (reg:DI 147 [ D.1782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 60 [ D.1606 ])) [0 *D.1606_2 S4 A32])
        (reg:SI 151 [ D.1786 ])) Test6.f08:30 -1
     (nil))

;; S.5_115 = S.5_8 + 1;

(insn 306 305 0 (parallel [
            (set (reg:DI 66 [ S.5 ])
                (plus:DI (reg:DI 66 [ S.5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 310 309 311 33 "" [0 uses])

(note 311 310 0 NOTE_INSN_BASIC_BLOCK)

;; D.1614_116 = atmp.2.data;

(insn 312 311 0 (set (reg/f:DI 152 [ D.1614 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

;; if (D.1614_116 != 0B)

(insn 313 312 314 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 152 [ D.1614 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 314 313 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:30 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; __builtin_free (D.1614_116);

(insn 316 315 317 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.1614 ])) Test6.f08:30 -1
     (nil))

(call_insn 317 316 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 40

;; 

(code_label 318 317 319 35 "" [0 uses])

(note 319 318 0 NOTE_INSN_BASIC_BLOCK)

;; _gfortran_random_seed_i4 (0B, &seed, 0B);

(insn 320 319 321 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:31 -1
     (nil))

(insn 321 320 322 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(insn 322 321 323 (set (reg:DI 4 si)
        (reg:DI 178)) Test6.f08:31 -1
     (nil))

(insn 323 322 324 (set (reg:DI 5 di)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(insn 324 323 325 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(call_insn 325 324 0 (call (mem:QI (symbol_ref:DI ("_gfortran_random_seed_i4") [flags 0x41]  <function_decl 0x7fc95dbed700 _gfortran_random_seed_i4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:31 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

;; D.1790_117 = seed.data;

(insn 326 325 0 (set (reg/f:DI 153 [ D.1790 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:32 -1
     (nil))

;; if (D.1790_117 == 0B)

(insn 327 326 328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 153 [ D.1790 ])
            (const_int 0 [0]))) Test6.f08:32 -1
     (nil))

(jump_insn 328 327 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:32 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; _gfortran_runtime_error_at (&"At line 32 of file Test6.f08"[1]{lb: 1 sz: 1}, &"Attempt to DEALLOCATE unallocated \'%s\'"[1]{lb: 1 sz: 1}, &"seed"[1]{lb: 1 sz: 1});

(insn 330 329 331 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc95dc278c0 *.LC7>)) Test6.f08:32 -1
     (nil))

(insn 331 330 332 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fc95dc27aa0 *.LC10>)) Test6.f08:32 -1
     (nil))

(insn 332 331 333 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fc95dc27b40 *.LC11>)) Test6.f08:32 -1
     (nil))

(insn 333 332 334 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:32 -1
     (nil))

(call_insn 334 333 335 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error_at") [flags 0x41]  <function_decl 0x7fc95ddde300 _gfortran_runtime_error_at>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:32 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(barrier 335 334 0)

;; Generating RTL for gimple basic block 42

;; 

(code_label 336 335 337 36 "" [0 uses])

(note 337 336 0 NOTE_INSN_BASIC_BLOCK)

;; D.1793_118 = seed.data;

(insn 338 337 0 (set (reg/f:DI 154 [ D.1793 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:32 -1
     (nil))

;; __builtin_free (D.1793_118);

(insn 339 338 340 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.1793 ])) Test6.f08:32 -1
     (nil))

(call_insn 340 339 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:32 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; seed.data = 0B;

(insn 341 340 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:32 -1
     (nil))

;; D.1794_119 = seed.data;

(insn 342 341 0 (set (reg/f:DI 155 [ D.1794 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:33 -1
     (nil))

;; if (D.1794_119 != 0B)

(insn 343 342 344 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 155 [ D.1794 ])
            (const_int 0 [0]))) Test6.f08:33 -1
     (nil))

(jump_insn 344 343 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:33 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; D.1797_120 = seed.data;

(insn 346 345 0 (set (reg/f:DI 156 [ D.1797 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:33 -1
     (nil))

;; __builtin_free (D.1797_120);

(insn 347 346 348 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.1797 ])) Test6.f08:33 -1
     (nil))

(call_insn 348 347 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:33 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 44

;; 

(code_label 349 348 350 37 "" [0 uses])

(note 350 349 0 NOTE_INSN_BASIC_BLOCK)

;; seed.data = 0B;

(insn 351 350 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:33 -1
     (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:25 -1
     (nil))

(insn 6 5 7 3 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:27 -1
     (nil))

(insn 7 6 8 3 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(insn 8 7 9 3 (set (reg:DI 4 si)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg:DI 157)) Test6.f08:27 -1
     (nil))

(insn 10 9 11 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:27 -1
     (nil))

(call_insn 11 10 12 3 (call (mem:QI (symbol_ref:DI ("_gfortran_random_seed_i4") [flags 0x41]  <function_decl 0x7fc95dbed700 _gfortran_random_seed_i4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:27 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 12 11 13 3 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 seed.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:28 -1
     (nil))

(insn 13 12 14 3 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(insn 14 13 15 3 (set (reg:SI 70 [ n.12 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

(insn 15 14 16 3 (set (reg:DI 71 [ D.1686 ])
        (sign_extend:DI (reg:SI 70 [ n.12 ]))) Test6.f08:28 -1
     (nil))

(insn 16 15 17 3 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])
        (reg:DI 71 [ D.1686 ])) Test6.f08:28 -1
     (nil))

(insn 17 16 18 3 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 seed.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(insn 18 17 20 3 (set (reg:SI 72 [ n.13 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

(insn 20 18 19 3 (set (reg:SI 158)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(insn 19 20 21 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 72 [ n.13 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 21 19 22 3 (set (reg:SI 73 [ D.1688 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 72 [ n.13 ])
            (reg:SI 158))) Test6.f08:28 -1
     (nil))

(insn 22 21 23 3 (set (reg:DI 74 [ D.1595 ])
        (sign_extend:DI (reg:SI 73 [ D.1688 ]))) Test6.f08:28 -1
     (nil))

(insn 23 22 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74 [ D.1595 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 24 23 25 3 (set (reg:QI 159)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 25 24 26 3 (set (reg:DI 75 [ D.1690 ])
        (zero_extend:DI (reg:QI 159))) Test6.f08:28 -1
     (nil))

(insn 26 25 27 3 (set (reg:DI 76 [ D.1691 ])
        (reg:DI 75 [ D.1690 ])) Test6.f08:28 -1
     (nil))

(insn 27 26 28 3 (set (reg:SI 77 [ D.1692 ])
        (subreg:SI (reg:DI 76 [ D.1691 ]) 0)) Test6.f08:28 -1
     (nil))

(insn 28 27 29 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.1692 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 29 28 30 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 34)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 (set (reg:SI 67 [ iftmp.14 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(jump_insn 32 31 33 4 (set (pc)
        (label_ref 56)) Test6.f08:28 -1
     (nil)
 -> 56)
;; End of basic block 4 -> ( 9)

;; Succ edge  9

(barrier 33 32 34)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 34 33 35 5 13 "" [1 uses])

(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 (set (reg:DI 162)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) Test6.f08:28 -1
     (nil))

(insn 37 36 38 5 (parallel [
            (set (reg:DI 160)
                (div:DI (reg:DI 162)
                    (reg:DI 74 [ D.1595 ])))
            (set (reg:DI 161)
                (mod:DI (reg:DI 162)
                    (reg:DI 74 [ D.1595 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

(insn 38 37 39 5 (set (reg:DI 78 [ D.1697 ])
        (reg:DI 160)) Test6.f08:28 -1
     (nil))

(insn 39 38 40 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 78 [ D.1697 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 40 39 41 5 (set (reg:QI 163)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 41 40 42 5 (set (reg:DI 79 [ D.1698 ])
        (zero_extend:DI (reg:QI 163))) Test6.f08:28 -1
     (nil))

(insn 42 41 43 5 (set (reg:DI 80 [ D.1699 ])
        (reg:DI 79 [ D.1698 ])) Test6.f08:28 -1
     (nil))

(insn 43 42 44 5 (set (reg:SI 81 [ D.1700 ])
        (subreg:SI (reg:DI 80 [ D.1699 ]) 0)) Test6.f08:28 -1
     (nil))

(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.1700 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 50)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 6 (set (reg:SI 68 [ iftmp.15 ])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(jump_insn 48 47 49 6 (set (pc)
        (label_ref 53)) Test6.f08:28 -1
     (nil)
 -> 53)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 49 48 50)

;; Start of basic block ( 5) -> 7
;; Pred edge  5
(code_label 50 49 51 7 15 "" [1 uses])

(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 7 (set (reg:SI 68 [ iftmp.15 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 53 52 54 8 16 "" [1 uses])

(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 8 (set (reg:SI 67 [ iftmp.14 ])
        (reg:SI 68 [ iftmp.15 ])) Test6.f08:28 -1
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 4 8) -> 9
;; Pred edge  4
;; Pred edge  8 (fallthru)
(code_label 56 55 57 9 14 "" [1 uses])

(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 (set (reg:SI 82 [ D.1596 ])
        (reg:SI 67 [ iftmp.14 ])) Test6.f08:28 -1
     (nil))

(insn 59 58 60 9 (set (reg:DI 83 [ D.1597 ])
        (reg:DI 74 [ D.1595 ])) Test6.f08:28 -1
     (nil))

(insn 60 59 61 9 (set (reg:DI 84 [ D.1705 ])
        (reg:DI 83 [ D.1597 ])) Test6.f08:28 -1
     (nil))

(insn 61 60 62 9 (set (reg:DI 164)
        (const_int 4611686018427387903 [0x3fffffffffffffff])) Test6.f08:28 -1
     (nil))

(insn 62 61 63 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 84 [ D.1705 ])
            (reg:DI 164))) Test6.f08:28 -1
     (nil))

(insn 63 62 64 9 (set (reg:QI 165)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 64 63 65 9 (set (reg:DI 85 [ D.1706 ])
        (zero_extend:DI (reg:QI 165))) Test6.f08:28 -1
     (nil))

(insn 65 64 66 9 (set (reg:DI 86 [ D.1707 ])
        (reg:DI 85 [ D.1706 ])) Test6.f08:28 -1
     (nil))

(insn 66 65 67 9 (set (reg:SI 87 [ D.1708 ])
        (subreg:SI (reg:DI 86 [ D.1707 ]) 0)) Test6.f08:28 -1
     (nil))

(insn 67 66 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.1708 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 73)
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 10 (set (reg:SI 69 [ iftmp.16 ])
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(jump_insn 71 70 72 10 (set (pc)
        (label_ref 76)) Test6.f08:28 -1
     (nil)
 -> 76)
;; End of basic block 10 -> ( 12)

;; Succ edge  12

(barrier 72 71 73)

;; Start of basic block ( 9) -> 11
;; Pred edge  9
(code_label 73 72 74 11 17 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 (set (reg:SI 69 [ iftmp.16 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10
;; Pred edge  11 (fallthru)
(code_label 76 75 77 12 18 "" [1 uses])

(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 12 (parallel [
            (set (reg:SI 88 [ D.1598 ])
                (plus:SI (reg:SI 69 [ iftmp.16 ])
                    (reg:SI 82 [ D.1596 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

(insn 79 78 80 12 (set (reg:SI 89 [ n.17 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:28 -1
     (nil))

(insn 80 79 81 12 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 89 [ n.17 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 81 80 82 12 (set (reg:QI 166)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 82 81 83 12 (parallel [
            (set (reg:SI 90 [ D.1600 ])
                (zero_extend:SI (reg:QI 166)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))

(insn 83 82 84 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.1600 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 89)
;; End of basic block 12 -> ( 13 14)

;; Succ edge  13 (fallthru)
;; Succ edge  14

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 13 (set (reg:DI 59 [ size.0 ])
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(jump_insn 87 86 88 13 (set (pc)
        (label_ref 93)) Test6.f08:28 -1
     (nil)
 -> 93)
;; End of basic block 13 -> ( 15)

;; Succ edge  15

(barrier 88 87 89)

;; Start of basic block ( 12) -> 14
;; Pred edge  12
(code_label 89 88 90 14 19 "" [1 uses])

(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 14 (set (reg:DI 91 [ D.1716 ])
        (reg:DI 83 [ D.1597 ])) Test6.f08:28 -1
     (nil))

(insn 92 91 93 14 (parallel [
            (set (reg:DI 59 [ size.0 ])
                (ashift:DI (reg:DI 91 [ D.1716 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:28 -1
     (nil))
;; End of basic block 14 -> ( 15)

;; Succ edge  15 (fallthru)

;; Start of basic block ( 13 14) -> 15
;; Pred edge  13
;; Pred edge  14 (fallthru)
(code_label 93 92 94 15 20 "" [1 uses])

(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 (set (reg:SI 92 [ overflow.1 ])
        (reg:SI 88 [ D.1598 ])) Test6.f08:28 -1
     (nil))

(insn 96 95 97 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ overflow.1 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 97 96 98 15 (set (reg:QI 167)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 98 97 99 15 (set (reg:DI 93 [ D.1717 ])
        (zero_extend:DI (reg:QI 167))) Test6.f08:28 -1
     (nil))

(insn 99 98 100 15 (set (reg:DI 94 [ D.1718 ])
        (reg:DI 93 [ D.1717 ])) Test6.f08:28 -1
     (nil))

(insn 100 99 101 15 (set (reg:SI 95 [ D.1719 ])
        (subreg:SI (reg:DI 94 [ D.1718 ]) 0)) Test6.f08:28 -1
     (nil))

(insn 101 100 102 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.1719 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 102 101 103 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 108)
;; End of basic block 15 -> ( 16 17)

;; Succ edge  16 (fallthru)
;; Succ edge  17

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc95dc27780 *.LC5>)) Test6.f08:28 -1
     (nil))

(insn 105 104 106 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(call_insn 106 105 107 16 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error") [flags 0x41]  <function_decl 0x7fc95ddde200 _gfortran_runtime_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))
;; End of basic block 16 -> ()


(barrier 107 106 108)

;; Start of basic block ( 15) -> 17
;; Pred edge  15
(code_label 108 107 109 17 21 "" [1 uses])

(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 17 (set (reg/f:DI 96 [ D.1722 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:28 -1
     (nil))

(insn 111 110 112 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.1722 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 112 111 113 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 185)
;; End of basic block 17 -> ( 18 22)

;; Succ edge  18 (fallthru)
;; Succ edge  22

;; Start of basic block ( 17) -> 18
;; Pred edge  17 (fallthru)
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 116 18 (set (reg:DI 97 [ D.1603 ])
        (reg:DI 59 [ size.0 ])) Test6.f08:28 -1
     (nil))

(insn 116 114 115 18 (set (reg:DI 168)
        (const_int 1 [0x1])) Test6.f08:28 -1
     (nil))

(insn 115 116 117 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ D.1603 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(insn 117 115 118 18 (set (reg:DI 98 [ D.1725 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 97 [ D.1603 ])
            (reg:DI 168))) Test6.f08:28 -1
     (nil))

(insn 118 117 119 18 (set (reg:DI 5 di)
        (reg:DI 98 [ D.1725 ])) Test6.f08:28 -1
     (nil))

(call_insn 119 118 120 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc95dd56d00 __builtin_malloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:28 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 120 119 121 18 (set (reg/f:DI 169)
        (reg:DI 0 ax)) Test6.f08:28 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))

(insn 121 120 122 18 (set (reg/f:DI 99 [ D.1726 ])
        (reg/f:DI 169)) Test6.f08:28 -1
     (nil))

(insn 122 121 123 18 (set (reg/f:DI 100 [ D.1604 ])
        (reg/f:DI 99 [ D.1726 ])) Test6.f08:28 -1
     (nil))

(insn 123 122 124 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.1604 ])
            (const_int 0 [0]))) Test6.f08:28 -1
     (nil))

(jump_insn 124 123 125 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) Test6.f08:28 -1
     (nil)
 -> 129)
;; End of basic block 18 -> ( 19 20)

;; Succ edge  19 (fallthru)
;; Succ edge  20

;; Start of basic block ( 18) -> 19
;; Pred edge  18 (fallthru)
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 126 125 127 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc95dc27820 *.LC6>)) Test6.f08:28 -1
     (nil))

(call_insn 127 126 128 19 (call (mem:QI (symbol_ref:DI ("_gfortran_os_error") [flags 0x41]  <function_decl 0x7fc95ddde600 _gfortran_os_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 19 -> ()


(barrier 128 127 129)

;; Start of basic block ( 18) -> 20
;; Pred edge  18
(code_label 129 128 130 20 23 "" [1 uses])

(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 20 (set (reg/f:DI 101 [ D.1602 ])
        (reg/f:DI 100 [ D.1604 ])) Test6.f08:28 -1
     (nil))

(insn 132 131 133 20 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 101 [ D.1602 ])) Test6.f08:28 -1
     (nil))

(insn 133 132 134 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) Test6.f08:28 -1
     (nil))

(insn 134 133 135 20 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:29 -1
     (nil))

(insn 135 134 136 20 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(insn 136 135 137 20 (set (reg:DI 4 si)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(insn 137 136 138 20 (set (reg:DI 5 di)
        (reg:DI 170)) Test6.f08:29 -1
     (nil))

(insn 138 137 139 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:29 -1
     (nil))

(call_insn 139 138 140 20 (call (mem:QI (symbol_ref:DI ("_gfortran_system_clock_4") [flags 0x41]  <function_decl 0x7fc95dbed800 _gfortran_system_clock_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:29 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 140 139 141 20 (set (reg/f:DI 60 [ D.1606 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 141 140 142 20 (set (reg:DI 61 [ D.1607 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 142 141 143 20 (set (reg:DI 102 [ D.1608 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 143 142 144 20 (set (reg:DI 103 [ D.1609 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 144 143 145 20 (set (reg:SI 104 [ D.1610 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 clock+0 S4 A32])) Test6.f08:30 -1
     (nil))

(insn 145 144 146 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 atmp.2.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:30 -1
     (nil))

(insn 146 145 147 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 atmp.2.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

(insn 147 146 148 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 atmp.2.dim[0].lbound+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 148 147 149 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) Test6.f08:30 -1
     (nil))

(insn 149 148 150 20 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 150 149 151 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 atmp.2.offset+0 S8 A64])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 151 150 152 20 (set (reg:DI 62 [ offset.3 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 152 151 153 20 (set (reg:SI 63 [ shadow_loopvar.4 ])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

(insn 153 152 154 20 (set (reg:SI 105 [ D.1617 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Test6.f08:30 -1
     (nil))

(insn 154 153 155 20 (set (reg:DI 106 [ D.1730 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 155 154 156 20 (parallel [
            (set (reg:SI 107 [ D.1731 ])
                (minus:SI (reg:SI 105 [ D.1617 ])
                    (reg:SI 63 [ shadow_loopvar.4 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 156 155 158 20 (parallel [
            (set (reg:SI 108 [ D.1732 ])
                (plus:SI (reg:SI 107 [ D.1731 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 158 156 157 20 (set (reg:SI 171)
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 157 158 159 20 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 108 [ D.1732 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 159 157 160 20 (set (reg:SI 109 [ D.1733 ])
        (if_then_else:SI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 108 [ D.1732 ])
            (reg:SI 171))) Test6.f08:30 -1
     (nil))

(insn 160 159 161 20 (set (reg:DI 110 [ D.1734 ])
        (sign_extend:DI (reg:SI 109 [ D.1733 ]))) Test6.f08:30 -1
     (nil))

(insn 161 160 162 20 (parallel [
            (set (reg:DI 111 [ D.1735 ])
                (plus:DI (reg:DI 106 [ D.1730 ])
                    (reg:DI 110 [ D.1734 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 162 161 163 20 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (reg:DI 111 [ D.1735 ])) Test6.f08:30 -1
     (nil))

(insn 163 162 164 20 (set (reg:DI 112 [ D.1736 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 164 163 165 20 (parallel [
            (set (reg:DI 113 [ D.1737 ])
                (plus:DI (reg:DI 112 [ D.1736 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 165 164 166 20 (parallel [
            (set (reg:DI 114 [ D.1738 ])
                (ashift:DI (reg:DI 113 [ D.1737 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 166 165 167 20 (set (reg:DI 115 [ D.1618 ])
        (reg:DI 114 [ D.1738 ])) Test6.f08:30 -1
     (nil))

(insn 167 166 168 20 (set (reg/f:DI 116 [ D.1739 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 168 167 169 20 (set (reg:DI 4 si)
        (reg:DI 115 [ D.1618 ])) Test6.f08:30 -1
     (nil))

(insn 169 168 170 20 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.1739 ])) Test6.f08:30 -1
     (nil))

(call_insn 170 169 171 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fc95dd56e00 __builtin_realloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 171 170 172 20 (set (reg/f:DI 117 [ D.1740 ])
        (reg:DI 0 ax)) Test6.f08:30 -1
     (nil))

(insn 172 171 173 20 (set (reg/f:DI 64 [ D.1619 ])
        (reg/f:DI 117 [ D.1740 ])) Test6.f08:30 -1
     (nil))

(insn 173 172 174 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 64 [ D.1619 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 174 173 175 20 (set (reg:QI 172)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 175 174 176 20 (parallel [
            (set (reg:SI 118 [ D.1741 ])
                (zero_extend:SI (reg:QI 172)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 176 175 177 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ D.1618 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 177 176 178 20 (set (reg:QI 173)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 178 177 179 20 (parallel [
            (set (reg:SI 119 [ D.1742 ])
                (zero_extend:SI (reg:QI 173)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 179 178 180 20 (parallel [
            (set (reg:SI 120 [ D.1743 ])
                (and:SI (reg:SI 118 [ D.1741 ])
                    (reg:SI 119 [ D.1742 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 180 179 181 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.1743 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 181 180 184 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 193)
;; End of basic block 20 -> ( 23 21)

;; Succ edge  23
;; Succ edge  21 (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 (fallthru)
(note 184 181 182 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn 182 184 183 21 (set (pc)
        (label_ref 198)) Test6.f08:30 -1
     (nil)
 -> 198)
;; End of basic block 21 -> ( 24)

;; Succ edge  24 [100.0%] 

(barrier 183 182 185)

;; Start of basic block ( 17) -> 22
;; Pred edge  17
(code_label 185 183 186 22 22 "" [1 uses])

(note 186 185 187 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 22 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc95dc278c0 *.LC7>)) Test6.f08:28 -1
     (nil))

(insn 188 187 189 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fc95dc27960 *.LC8>)) Test6.f08:28 -1
     (nil))

(insn 189 188 190 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fc95dc27a00 *.LC9>)) Test6.f08:28 -1
     (nil))

(insn 190 189 191 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:28 -1
     (nil))

(call_insn 191 190 192 22 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error_at") [flags 0x41]  <function_decl 0x7fc95ddde300 _gfortran_runtime_error_at>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:28 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 22 -> ()


(barrier 192 191 193)

;; Start of basic block ( 20) -> 23
;; Pred edge  20
(code_label 193 192 194 23 24 "" [1 uses])

(note 194 193 195 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc95dc27820 *.LC6>)) Test6.f08:30 -1
     (nil))

(call_insn 196 195 197 23 (call (mem:QI (symbol_ref:DI ("_gfortran_os_error") [flags 0x41]  <function_decl 0x7fc95ddde600 _gfortran_os_error>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:30 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 23 -> ()


(barrier 197 196 198)

;; Start of basic block ( 21) -> 24
;; Pred edge  21 [100.0%] 
(code_label 198 197 199 24 25 "" [1 uses])

(note 199 198 200 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ D.1618 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 201 200 202 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 204)
;; End of basic block 24 -> ( 25 26)

;; Succ edge  25 (fallthru)
;; Succ edge  26

;; Start of basic block ( 24) -> 25
;; Pred edge  24 (fallthru)
(note 202 201 203 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 204 25 (set (reg/f:DI 64 [ D.1619 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))
;; End of basic block 25 -> ( 26)

;; Succ edge  26 (fallthru)

;; Start of basic block ( 24 25) -> 26
;; Pred edge  24
;; Pred edge  25 (fallthru)
(code_label 204 203 205 26 26 "" [1 uses])

(note 205 204 206 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 206 205 216 26 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])
        (reg/f:DI 64 [ D.1619 ])) Test6.f08:30 -1
     (nil))
;; End of basic block 26 -> ( 27)

;; Succ edge  27 (fallthru)

;; Start of basic block ( 26 28) -> 27
;; Pred edge  26 (fallthru)
;; Pred edge  28
(code_label 216 206 207 27 28 "" [1 uses])

(note 207 216 208 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ shadow_loopvar.4 ])
            (reg:SI 105 [ D.1617 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 209 208 210 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 219)
;; End of basic block 27 -> ( 29 28)

;; Succ edge  29
;; Succ edge  28 (fallthru)

;; Start of basic block ( 27) -> 28
;; Pred edge  27 (fallthru)
(note 210 209 211 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 28 (set (reg/f:DI 121 [ D.1751 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 212 211 213 28 (parallel [
            (set (reg:SI 122 [ D.1752 ])
                (plus:SI (reg:SI 63 [ shadow_loopvar.4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 213 212 214 28 (set (mem/s/j:SI (plus:DI (mult:DI (reg:DI 62 [ offset.3 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 121 [ D.1751 ])) [0 MEM[(integer(kind=4)[0] *)D.1751_77] S4 A32])
        (reg:SI 122 [ D.1752 ])) Test6.f08:30 -1
     (nil))

(insn 214 213 215 28 (parallel [
            (set (reg:DI 62 [ offset.3 ])
                (plus:DI (reg:DI 62 [ offset.3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 215 214 217 28 (parallel [
            (set (reg:SI 63 [ shadow_loopvar.4 ])
                (plus:SI (reg:SI 63 [ shadow_loopvar.4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(jump_insn 217 215 218 28 (set (pc)
        (label_ref 216)) Test6.f08:30 -1
     (nil)
 -> 216)
;; End of basic block 28 -> ( 27)

;; Succ edge  27

(barrier 218 217 219)

;; Start of basic block ( 27) -> 29
;; Pred edge  27
(code_label 219 218 220 29 27 "" [1 uses])

(note 220 219 221 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 29 (parallel [
            (set (reg:DI 123 [ D.1621 ])
                (plus:DI (reg:DI 62 [ offset.3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 222 221 223 29 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 atmp.2.dim[0].ubound+0 S8 A64])
        (reg:DI 123 [ D.1621 ])) Test6.f08:30 -1
     (nil))

(insn 223 222 224 29 (set (reg:DI 65 [ D.1622 ])
        (reg:DI 102 [ D.1608 ])) Test6.f08:30 -1
     (nil))

(insn 224 223 225 29 (set (reg/f:DI 124 [ D.1753 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 225 224 226 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 124 [ D.1753 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 226 225 227 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 236)
;; End of basic block 29 -> ( 32 30)

;; Succ edge  32
;; Succ edge  30 (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 227 226 228 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 30 (set (reg:DI 125 [ D.1755 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 229 228 230 30 (parallel [
            (set (reg:DI 126 [ D.1756 ])
                (plus:DI (reg:DI 125 [ D.1755 ])
                    (reg:DI 123 [ D.1621 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 230 229 231 30 (set (reg:DI 127 [ D.1757 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 231 230 232 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 126 [ D.1756 ])
            (reg:DI 127 [ D.1757 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 232 231 233 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 236)
;; End of basic block 30 -> ( 32 31)

;; Succ edge  32
;; Succ edge  31 (fallthru)

;; Start of basic block ( 30) -> 31
;; Pred edge  30 (fallthru)
(note 233 232 234 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 234 233 235 31 (set (pc)
        (label_ref 288)) Test6.f08:30 -1
     (nil)
 -> 288)
;; End of basic block 31 -> ( 37)

;; Succ edge  37

(barrier 235 234 236)

;; Start of basic block ( 29 30) -> 32
;; Pred edge  29
;; Pred edge  30
(code_label 236 235 237 32 29 "" [2 uses])

(note 237 236 238 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 32 (set (reg:DI 128 [ D.1759 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 239 238 240 32 (set (reg:DI 129 [ D.1760 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 240 239 241 32 (parallel [
            (set (reg:DI 130 [ D.1761 ])
                (minus:DI (reg:DI 128 [ D.1759 ])
                    (reg:DI 129 [ D.1760 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 241 240 243 32 (parallel [
            (set (reg:DI 131 [ D.1762 ])
                (plus:DI (reg:DI 130 [ D.1761 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 243 241 242 32 (set (reg:DI 174)
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))

(insn 242 243 244 32 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 131 [ D.1762 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 244 242 245 32 (set (reg:DI 132 [ D.1626 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 131 [ D.1762 ])
            (reg:DI 174))) Test6.f08:30 -1
     (nil))

(insn 245 244 246 32 (parallel [
            (set (reg:DI 133 [ D.1627 ])
                (plus:DI (reg:DI 123 [ D.1621 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 246 245 247 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 132 [ D.1626 ])
            (reg:DI 133 [ D.1627 ]))) Test6.f08:30 -1
     (nil))

(insn 247 246 248 32 (set (reg:QI 175)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(insn 248 247 249 32 (parallel [
            (set (reg:SI 134 [ D.1628 ])
                (zero_extend:SI (reg:QI 175)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 249 248 250 32 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

(insn 250 249 251 32 (parallel [
            (set (reg:DI 135 [ D.1763 ])
                (plus:DI (reg:DI 123 [ D.1621 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 251 250 252 32 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 seed.dim[0].ubound+0 S8 A64])
        (reg:DI 135 [ D.1763 ])) Test6.f08:30 -1
     (nil))

(insn 252 251 253 32 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 seed.dim[0].stride+0 S8 A64])
        (const_int 1 [0x1])) Test6.f08:30 -1
     (nil))

(insn 253 252 254 32 (set (reg:DI 136 [ D.1764 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 254 253 255 32 (parallel [
            (set (reg:DI 137 [ D.1765 ])
                (neg:DI (reg:DI 136 [ D.1764 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 255 254 256 32 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])
        (reg:DI 137 [ D.1765 ])) Test6.f08:30 -1
     (nil))

(insn 256 255 257 32 (set (reg:DI 61 [ D.1607 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 seed.offset+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 257 256 258 32 (set (reg:DI 65 [ D.1622 ])
        (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 seed.dim[0].lbound+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 258 257 259 32 (parallel [
            (set (reg:DI 138 [ D.1766 ])
                (ashift:DI (reg:DI 133 [ D.1627 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 259 258 260 32 (set (reg:DI 139 [ D.1629 ])
        (reg:DI 138 [ D.1766 ])) Test6.f08:30 -1
     (nil))

(insn 260 259 261 32 (set (reg/f:DI 140 [ D.1767 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 261 260 262 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 140 [ D.1767 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 262 261 263 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 273)
;; End of basic block 32 -> ( 33 34)

;; Succ edge  33 (fallthru)
;; Succ edge  34

;; Start of basic block ( 32) -> 33
;; Pred edge  32 (fallthru)
(note 263 262 264 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 264 263 265 33 (set (reg:DI 5 di)
        (reg:DI 139 [ D.1629 ])) Test6.f08:30 -1
     (nil))

(call_insn 265 264 266 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fc95dd56d00 __builtin_malloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 266 265 267 33 (set (reg/f:DI 176)
        (reg:DI 0 ax)) Test6.f08:30 -1
     (expr_list:REG_NOALIAS (reg/f:DI 176)
        (nil)))

(insn 267 266 268 33 (set (reg/f:DI 141 [ D.1770 ])
        (reg/f:DI 176)) Test6.f08:30 -1
     (nil))

(insn 268 267 269 33 (set (reg/f:DI 142 [ D.1771 ])
        (reg/f:DI 141 [ D.1770 ])) Test6.f08:30 -1
     (nil))

(insn 269 268 270 33 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 142 [ D.1771 ])) Test6.f08:30 -1
     (nil))

(insn 270 269 271 33 (set (mem/s/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 seed.dtype+0 S8 A64])
        (const_int 265 [0x109])) Test6.f08:30 -1
     (nil))

(jump_insn 271 270 272 33 (set (pc)
        (label_ref 285)) Test6.f08:30 -1
     (nil)
 -> 285)
;; End of basic block 33 -> ( 36)

;; Succ edge  36

(barrier 272 271 273)

;; Start of basic block ( 32) -> 34
;; Pred edge  32
(code_label 273 272 274 34 31 "" [1 uses])

(note 274 273 275 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 276 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.1628 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 276 275 277 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 285)
;; End of basic block 34 -> ( 35 36)

;; Succ edge  35 (fallthru)
;; Succ edge  36

;; Start of basic block ( 34) -> 35
;; Pred edge  34 (fallthru)
(note 277 276 278 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 35 (set (reg/f:DI 143 [ D.1775 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 279 278 280 35 (set (reg:DI 4 si)
        (reg:DI 139 [ D.1629 ])) Test6.f08:30 -1
     (nil))

(insn 280 279 281 35 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.1775 ])) Test6.f08:30 -1
     (nil))

(call_insn 281 280 282 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7fc95dd56e00 __builtin_realloc>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 282 281 283 35 (set (reg/f:DI 144 [ D.1776 ])
        (reg:DI 0 ax)) Test6.f08:30 -1
     (nil))

(insn 283 282 284 35 (set (reg/f:DI 145 [ D.1777 ])
        (reg/f:DI 144 [ D.1776 ])) Test6.f08:30 -1
     (nil))

(insn 284 283 285 35 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (reg/f:DI 145 [ D.1777 ])) Test6.f08:30 -1
     (nil))
;; End of basic block 35 -> ( 36)

;; Succ edge  36 (fallthru)

;; Start of basic block ( 33 34 35) -> 36
;; Pred edge  33
;; Pred edge  34
;; Pred edge  35 (fallthru)
(code_label 285 284 286 36 32 "" [2 uses])

(note 286 285 287 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 288 36 (set (reg/f:DI 60 [ D.1606 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:30 -1
     (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 (fallthru)

;; Start of basic block ( 31 36) -> 37
;; Pred edge  31
;; Pred edge  36 (fallthru)
(code_label 288 287 289 37 30 "" [1 uses])

(note 289 288 290 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 290 289 307 37 (set (reg:DI 66 [ S.5 ])
        (const_int 0 [0])) Test6.f08:30 -1
     (nil))
;; End of basic block 37 -> ( 38)

;; Succ edge  38 (fallthru)

;; Start of basic block ( 37 39) -> 38
;; Pred edge  37 (fallthru)
;; Pred edge  39
(code_label 307 290 291 38 34 "" [1 uses])

(note 291 307 292 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 66 [ S.5 ])
            (reg:DI 123 [ D.1621 ]))) Test6.f08:30 -1
     (nil))

(jump_insn 293 292 294 38 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 310)
;; End of basic block 38 -> ( 40 39)

;; Succ edge  40
;; Succ edge  39 (fallthru)

;; Start of basic block ( 38) -> 39
;; Pred edge  38 (fallthru)
(note 294 293 295 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 295 294 296 39 (parallel [
            (set (reg:DI 146 [ D.1781 ])
                (plus:DI (reg:DI 66 [ S.5 ])
                    (reg:DI 65 [ D.1622 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 296 295 297 39 (parallel [
            (set (reg:DI 147 [ D.1782 ])
                (plus:DI (reg:DI 146 [ D.1781 ])
                    (reg:DI 61 [ D.1607 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 297 296 298 39 (set (reg/f:DI 148 [ D.1783 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 298 297 299 39 (set (reg:SI 149 [ D.1784 ])
        (mem/s/j:SI (plus:DI (mult:DI (reg:DI 66 [ S.5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148 [ D.1783 ])) [0 MEM[(integer(kind=4)[0] *)D.1783_111] S4 A32])) Test6.f08:30 -1
     (nil))

(insn 299 298 300 39 (set (reg:SI 177)
        (reg:SI 149 [ D.1784 ])) Test6.f08:30 -1
     (nil))

(insn 300 299 301 39 (parallel [
            (set (reg:SI 177)
                (ashift:SI (reg:SI 177)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 301 300 302 39 (parallel [
            (set (reg:SI 177)
                (plus:SI (reg:SI 177)
                    (reg:SI 149 [ D.1784 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 149 [ D.1784 ])
            (const_int 9 [0x9]))
        (nil)))

(insn 302 301 303 39 (parallel [
            (set (reg:SI 177)
                (ashift:SI (reg:SI 177)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 303 302 304 39 (parallel [
            (set (reg:SI 150 [ D.1785 ])
                (plus:SI (reg:SI 177)
                    (reg:SI 149 [ D.1784 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 149 [ D.1784 ])
            (const_int 37 [0x25]))
        (nil)))

(insn 304 303 305 39 (parallel [
            (set (reg:SI 151 [ D.1786 ])
                (plus:SI (reg:SI 150 [ D.1785 ])
                    (reg:SI 104 [ D.1610 ])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(insn 305 304 306 39 (set (mem/s/j:SI (plus:DI (mult:DI (reg:DI 147 [ D.1782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 60 [ D.1606 ])) [0 *D.1606_2 S4 A32])
        (reg:SI 151 [ D.1786 ])) Test6.f08:30 -1
     (nil))

(insn 306 305 308 39 (parallel [
            (set (reg:DI 66 [ S.5 ])
                (plus:DI (reg:DI 66 [ S.5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:30 -1
     (nil))

(jump_insn 308 306 309 39 (set (pc)
        (label_ref 307)) Test6.f08:30 -1
     (nil)
 -> 307)
;; End of basic block 39 -> ( 38)

;; Succ edge  38

(barrier 309 308 310)

;; Start of basic block ( 38) -> 40
;; Pred edge  38
(code_label 310 309 311 40 33 "" [1 uses])

(note 311 310 312 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 313 40 (set (reg/f:DI 152 [ D.1614 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 atmp.2.data+0 S8 A64])) Test6.f08:30 -1
     (nil))

(insn 313 312 314 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 152 [ D.1614 ])
            (const_int 0 [0]))) Test6.f08:30 -1
     (nil))

(jump_insn 314 313 315 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) Test6.f08:30 -1
     (nil)
 -> 318)
;; End of basic block 40 -> ( 41 42)

;; Succ edge  41 (fallthru)
;; Succ edge  42

;; Start of basic block ( 40) -> 41
;; Pred edge  40 (fallthru)
(note 315 314 316 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 316 315 317 41 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.1614 ])) Test6.f08:30 -1
     (nil))

(call_insn 317 316 318 41 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 41 -> ( 42)

;; Succ edge  42 (fallthru)

;; Start of basic block ( 40 41) -> 42
;; Pred edge  40
;; Pred edge  41 (fallthru)
(code_label 318 317 319 42 35 "" [1 uses])

(note 319 318 320 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 320 319 321 42 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:31 -1
     (nil))

(insn 321 320 322 42 (set (reg:DI 1 dx)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(insn 322 321 323 42 (set (reg:DI 4 si)
        (reg:DI 178)) Test6.f08:31 -1
     (nil))

(insn 323 322 324 42 (set (reg:DI 5 di)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(insn 324 323 325 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:31 -1
     (nil))

(call_insn 325 324 326 42 (call (mem:QI (symbol_ref:DI ("_gfortran_random_seed_i4") [flags 0x41]  <function_decl 0x7fc95dbed700 _gfortran_random_seed_i4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:31 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 326 325 327 42 (set (reg/f:DI 153 [ D.1790 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:32 -1
     (nil))

(insn 327 326 328 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 153 [ D.1790 ])
            (const_int 0 [0]))) Test6.f08:32 -1
     (nil))

(jump_insn 328 327 329 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) Test6.f08:32 -1
     (nil)
 -> 336)
;; End of basic block 42 -> ( 43 44)

;; Succ edge  43 (fallthru)
;; Succ edge  44

;; Start of basic block ( 42) -> 43
;; Pred edge  42 (fallthru)
(note 329 328 330 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 330 329 331 43 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc95dc278c0 *.LC7>)) Test6.f08:32 -1
     (nil))

(insn 331 330 332 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fc95dc27aa0 *.LC10>)) Test6.f08:32 -1
     (nil))

(insn 332 331 333 43 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fc95dc27b40 *.LC11>)) Test6.f08:32 -1
     (nil))

(insn 333 332 334 43 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:32 -1
     (nil))

(call_insn 334 333 335 43 (call (mem:QI (symbol_ref:DI ("_gfortran_runtime_error_at") [flags 0x41]  <function_decl 0x7fc95ddde300 _gfortran_runtime_error_at>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:32 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 43 -> ()


(barrier 335 334 336)

;; Start of basic block ( 42) -> 44
;; Pred edge  42
(code_label 336 335 337 44 36 "" [1 uses])

(note 337 336 338 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 338 337 339 44 (set (reg/f:DI 154 [ D.1793 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:32 -1
     (nil))

(insn 339 338 340 44 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.1793 ])) Test6.f08:32 -1
     (nil))

(call_insn 340 339 341 44 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:32 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 341 340 342 44 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:32 -1
     (nil))

(insn 342 341 343 44 (set (reg/f:DI 155 [ D.1794 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:33 -1
     (nil))

(insn 343 342 344 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 155 [ D.1794 ])
            (const_int 0 [0]))) Test6.f08:33 -1
     (nil))

(jump_insn 344 343 345 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) Test6.f08:33 -1
     (nil)
 -> 349)
;; End of basic block 44 -> ( 45 46)

;; Succ edge  45 (fallthru)
;; Succ edge  46

;; Start of basic block ( 44) -> 45
;; Pred edge  44 (fallthru)
(note 345 344 346 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 346 345 347 45 (set (reg/f:DI 156 [ D.1797 ])
        (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])) Test6.f08:33 -1
     (nil))

(insn 347 346 348 45 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.1797 ])) Test6.f08:33 -1
     (nil))

(call_insn 348 347 349 45 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fc95dd56c00 __builtin_free>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:33 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 45 -> ( 46)

;; Succ edge  46 (fallthru)

;; Start of basic block ( 44 45) -> 46
;; Pred edge  44
;; Pred edge  45 (fallthru)
(code_label 349 348 350 46 37 "" [1 uses])

(note 350 349 351 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 351 350 352 46 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 seed.data+0 S8 A64])
        (const_int 0 [0])) Test6.f08:33 -1
     (nil))
;; End of basic block 46 -> ( 47)

;; Succ edge  47 (fallthru)

;; Start of basic block ( 46) -> 47
;; Pred edge  46 (fallthru)
(code_label 352 351 353 47 12 "" [0 uses])

(note 353 352 0 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 47 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function test6 (MAIN__)

test6 ()
{
  integer(kind=8) S.8;
  real(kind=4) val.7;
  real(kind=4) D.1656;
  struct __st_parameter_dt dt_parm.6;
  logical(kind=4) D.1648;
  logical(kind=4) D.1651;
  real(kind=4) wsave[25];
  real(kind=4) tresults[15];
  static real(kind=4) t6[2400000];
  real(kind=4) start;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) finish;
  real(kind=4) D.1684;
  real(kind=4) D.1683;
  integer(kind=8) D.1682;
  real(kind=4) D.1678;
  real(kind=4) start.11;
  real(kind=4) finish.10;
  integer(kind=8) D.1675;
  integer(kind=8) D.1674;
  real(kind=4) D.1672;
  integer(kind=8) D.1671;
  integer(kind=8) D.1670;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_5 = 1;
  if (i_5 <= 15)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 3
  # PRED: 2 (true) 7 (fallthru)
  # i_1 = PHI <i_5(2), i_18(7)>
  _gfortran_cpu_time_4 (&start);
  j_6 = 1;
  if (j_6 <= 2400000)
    goto <bb 4>;
  else
    goto <bb 6>;
  # SUCC: 4 (true) 6 (false)

  # BLOCK 4
  # PRED: 3 (true) 5 (fallthru)
  # j_2 = PHI <j_6(3), j_11(5)>
  init_random_seed ();
  D.1670_7 = (integer(kind=8)) j_2;
  D.1671_8 = D.1670_7 + -1;
  D.1672_9 = random_normal ();
  t6[D.1671_8] = D.1672_9;
  D.1648_10 = j_2 == 2400000;
  j_11 = j_2 + 1;
  if (D.1648_10 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 6
  # PRED: 3 (false) 4 (true)
  rffti (&C.1649, &wsave);
  rfftf (&C.1650, &t6, &wsave);
  _gfortran_cpu_time_4 (&finish);
  D.1674_12 = (integer(kind=8)) i_1;
  D.1675_13 = D.1674_12 + -1;
  finish.10_14 = finish;
  start.11_15 = start;
  D.1678_16 = finish.10_14 - start.11_15;
  tresults[D.1675_13] = D.1678_16;
  D.1651_17 = i_1 == 15;
  i_18 = i_1 + 1;
  if (D.1651_17 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  goto <bb 3>;
  # SUCC: 3 (fallthru)

  # BLOCK 8
  # PRED: 2 (false) 6 (true)
  dt_parm.6.common.filename = &"Test6.f08"[1]{lb: 1 sz: 1};
  dt_parm.6.common.line = 17;
  dt_parm.6.common.flags = 128;
  dt_parm.6.common.unit = 6;
  _gfortran_st_write (&dt_parm.6);
  val.7_19 = 0.0;
  S.8_20 = 1;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 8 (fallthru) 10 (fallthru)
  # val.7_3 = PHI <val.7_19(8), val.7_23(10)>
  # S.8_4 = PHI <S.8_20(8), S.8_24(10)>
  if (S.8_4 > 15)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 (true) 10 (false)

  # BLOCK 10
  # PRED: 9 (false)
  D.1682_21 = S.8_4 + -1;
  D.1683_22 = tresults[D.1682_21];
  val.7_23 = D.1683_22 + val.7_3;
  S.8_24 = S.8_4 + 1;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 11
  # PRED: 9 (true)
  D.1684_25 = val.7_3 / 1.5e+1;
  D.1656 = D.1684_25;
  _gfortran_transfer_real_write (&dt_parm.6, &D.1656, 4);
  _gfortran_st_write_done (&dt_parm.6);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (val.7_3 - 3 )
Partition 4 (S.8_4 - 4 )
Partition 5 (i_5 - 5 )
Partition 6 (j_6 - 6 )
Partition 7 (D.1670_7 - 7 )
Partition 8 (D.1671_8 - 8 )
Partition 9 (D.1672_9 - 9 )
Partition 10 (D.1648_10 - 10 )
Partition 11 (j_11 - 11 )
Partition 12 (D.1674_12 - 12 )
Partition 13 (D.1675_13 - 13 )
Partition 14 (finish.10_14 - 14 )
Partition 15 (start.11_15 - 15 )
Partition 16 (D.1678_16 - 16 )
Partition 17 (D.1651_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (val.7_19 - 19 )
Partition 20 (S.8_20 - 20 )
Partition 21 (D.1682_21 - 21 )
Partition 22 (D.1683_22 - 22 )
Partition 23 (val.7_23 - 23 )
Partition 24 (S.8_24 - 24 )
Partition 25 (D.1684_25 - 25 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (val.7_3 - 3 )
Partition 3 (S.8_4 - 4 )
Partition 4 (i_5 - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (j_11 - 11 )
Partition 7 (i_18 - 18 )
Partition 8 (val.7_19 - 19 )
Partition 9 (S.8_20 - 20 )
Partition 10 (val.7_23 - 23 )
Partition 11 (S.8_24 - 24 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : i_1  

Live on entry to BB5 : i_1  j_11  

Live on entry to BB6 : i_1  

Live on entry to BB7 : i_18  

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : val.7_3  S.8_4  

Live on entry to BB11 : val.7_3  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_5
(2147483646) i_1 <-> i_18
(2147483646) j_2 <-> j_6
(2147483646) j_2 <-> j_11

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (val.7_3 - 3 )
Partition 3 (S.8_4 - 4 )
Partition 4 (i_5 - 5 )
Partition 5 (j_6 - 6 )
Partition 6 (j_11 - 11 )
Partition 7 (i_18 - 18 )
Partition 8 (val.7_19 - 19 )
Partition 9 (S.8_20 - 20 )
Partition 10 (val.7_23 - 23 )
Partition 11 (S.8_24 - 24 )

Coalesce list: (1)i_1 & (5)i_5 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (18)i_18 [map: 0, 7] : Success -> 0
Coalesce list: (2)j_2 & (6)j_6 [map: 1, 5] : Success -> 1
Coalesce list: (2)j_2 & (11)j_11 [map: 1, 6] : Success -> 1
Coalesce list: (4)S.8_4 & (24)S.8_24 [map: 3, 11] : Success -> 3
Coalesce list: (4)S.8_4 & (20)S.8_20 [map: 3, 9] : Success -> 3
Coalesce list: (3)val.7_3 & (23)val.7_23 [map: 2, 10] : Success -> 2
Coalesce list: (3)val.7_3 & (19)val.7_19 [map: 2, 8] : Success -> 2
Coalesce list: (2)j_2 & (11)j_2: Already Coalesced.
Coalesce list: (1)i_1 & (18)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 5 18 )
Partition 1 (j_2 - 2 6 11 )
Partition 2 (val.7_3 - 3 19 23 )
Partition 3 (S.8_4 - 4 20 24 )
Partition 4 (D.1670_7 - 7 )
Partition 5 (D.1671_8 - 8 )
Partition 6 (D.1672_9 - 9 )
Partition 7 (D.1648_10 - 10 )
Partition 8 (D.1674_12 - 12 )
Partition 9 (D.1675_13 - 13 )
Partition 10 (finish.10_14 - 14 )
Partition 11 (start.11_15 - 15 )
Partition 12 (D.1678_16 - 16 )
Partition 13 (D.1651_17 - 17 )
Partition 14 (D.1682_21 - 21 )
Partition 15 (D.1683_22 - 22 )
Partition 16 (D.1684_25 - 25 )

test6 ()
{
  integer(kind=8) S.8;
  real(kind=4) val.7;
  real(kind=4) D.1656;
  struct __st_parameter_dt dt_parm.6;
  logical(kind=4) D.1648;
  logical(kind=4) D.1651;
  real(kind=4) wsave[25];
  real(kind=4) tresults[15];
  static real(kind=4) t6[2400000];
  real(kind=4) start;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) finish;
  real(kind=4) D.1684;
  real(kind=4) D.1683;
  integer(kind=8) D.1682;
  real(kind=4) D.1678;
  real(kind=4) start.11;
  real(kind=4) finish.10;
  integer(kind=8) D.1675;
  integer(kind=8) D.1674;
  real(kind=4) D.1672;
  integer(kind=8) D.1671;
  integer(kind=8) D.1670;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_5 = 1;
  if (i_5 <= 15)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 3
  # PRED: 2 (true) 7 (fallthru)
  # i_1 = PHI <i_5(2), i_18(7)>
  _gfortran_cpu_time_4 (&start);
  j_6 = 1;
  if (j_6 <= 2400000)
    goto <bb 4>;
  else
    goto <bb 6>;
  # SUCC: 4 (true) 6 (false)

  # BLOCK 4
  # PRED: 3 (true) 5 (fallthru)
  # j_2 = PHI <j_6(3), j_11(5)>
  init_random_seed ();
  D.1670_7 = (integer(kind=8)) j_2;
  D.1671_8 = D.1670_7 + -1;
  D.1672_9 = random_normal ();
  t6[D.1671_8] = D.1672_9;
  D.1648_10 = j_2 == 2400000;
  j_11 = j_2 + 1;
  if (D.1648_10 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 6
  # PRED: 3 (false) 4 (true)
  rffti (&C.1649, &wsave);
  rfftf (&C.1650, &t6, &wsave);
  _gfortran_cpu_time_4 (&finish);
  D.1674_12 = (integer(kind=8)) i_1;
  D.1675_13 = D.1674_12 + -1;
  finish.10_14 = finish;
  start.11_15 = start;
  D.1678_16 = finish.10_14 - start.11_15;
  tresults[D.1675_13] = D.1678_16;
  D.1651_17 = i_1 == 15;
  i_18 = i_1 + 1;
  if (D.1651_17 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  goto <bb 3>;
  # SUCC: 3 (fallthru)

  # BLOCK 8
  # PRED: 2 (false) 6 (true)
  dt_parm.6.common.filename = &"Test6.f08"[1]{lb: 1 sz: 1};
  dt_parm.6.common.line = 17;
  dt_parm.6.common.flags = 128;
  dt_parm.6.common.unit = 6;
  _gfortran_st_write (&dt_parm.6);
  val.7_19 = 0.0;
  S.8_20 = 1;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 8 (fallthru) 10 (fallthru)
  # val.7_3 = PHI <val.7_19(8), val.7_23(10)>
  # S.8_4 = PHI <S.8_20(8), S.8_24(10)>
  if (S.8_4 > 15)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 (true) 10 (false)

  # BLOCK 10
  # PRED: 9 (false)
  D.1682_21 = S.8_4 + -1;
  D.1683_22 = tresults[D.1682_21];
  val.7_23 = D.1683_22 + val.7_3;
  S.8_24 = S.8_4 + 1;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 11
  # PRED: 9 (true)
  D.1684_25 = val.7_3 / 1.5e+1;
  D.1656 = D.1684_25;
  _gfortran_transfer_real_write (&dt_parm.6, &D.1656, 4);
  _gfortran_st_write_done (&dt_parm.6);
  return;
  # SUCC: EXIT

}


Partition 0: size 480 align 16
	dt_parm.6, offset 0

;; Generating RTL for gimple basic block 2

;; i_5 = 1;

(insn 5 4 0 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) Test6.f08:6 -1
     (nil))

;; if (i_5 <= 15)

(insn 6 5 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 15 [0xf]))) Test6.f08:6 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:6 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _gfortran_cpu_time_4 (&start);

(insn 9 8 10 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:7 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 74)) Test6.f08:7 -1
     (nil))

(insn 11 10 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:7 -1
     (nil))

(call_insn 12 11 0 (call (mem:QI (symbol_ref:DI ("_gfortran_cpu_time_4") [flags 0x41]  <function_decl 0x7fc95dbedf00 _gfortran_cpu_time_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:7 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

;; j_6 = 1;

(insn 13 12 0 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) Test6.f08:8 -1
     (nil))

;; if (j_6 <= 2400000)

(insn 14 13 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int 2400000 [0x249f00]))) Test6.f08:8 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:8 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; init_random_seed ();

(insn 17 16 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:9 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("init_random_seed_") [flags 0x3]  <function_decl 0x7fc95dbed400 init_random_seed>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:9 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; D.1670_7 = (integer(kind=8)) j_2;

(insn 19 18 20 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) Test6.f08:10 -1
     (nil))

(insn 20 19 0 (set (reg:DI 61 [ D.1670 ])
        (sign_extend:DI (reg:SI 75))) Test6.f08:10 -1
     (nil))

;; D.1671_8 = D.1670_7 + -1;

(insn 21 20 0 (parallel [
            (set (reg:DI 62 [ D.1671 ])
                (plus:DI (reg:DI 61 [ D.1670 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:10 -1
     (nil))

;; D.1672_9 = random_normal ();

(insn 22 21 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:10 -1
     (nil))

(call_insn 23 22 24 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("random_normal_") [flags 0x3]  <function_decl 0x7fc95dbed100 random_normal>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:10 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 24 23 0 (set (reg:SF 63 [ D.1672 ])
        (reg:SF 21 xmm0)) Test6.f08:10 -1
     (nil))

;; t6[D.1671_8] = D.1672_9;

(insn 25 24 0 (set (mem/s/j:SF (plus:DI (mult:DI (reg:DI 62 [ D.1671 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("t6.1638") [flags 0x2]  <var_decl 0x7fc95dbfa5a0 t6>)) [0 t6 S4 A32])
        (reg:SF 63 [ D.1672 ])) Test6.f08:10 -1
     (nil))

;; D.1648_10 = j_2 == 2400000;

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int 2400000 [0x249f00]))) Test6.f08:8 -1
     (nil))

(insn 27 26 28 (set (reg:QI 76)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:8 -1
     (nil))

(insn 28 27 0 (parallel [
            (set (reg:SI 64 [ D.1648 ])
                (zero_extend:SI (reg:QI 76)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:8 -1
     (nil))

;; j_11 = j_2 + 1;

(insn 29 28 0 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:8 -1
     (nil))

;; if (D.1648_10 != 0)

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.1648 ])
            (const_int 0 [0]))) Test6.f08:8 -1
     (nil))

(jump_insn 31 30 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:8 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 36 35 37 41 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; rffti (&C.1649, &wsave);

(insn 38 37 39 (parallel [
            (set (reg:DI 77)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:12 -1
     (nil))

(insn 39 38 40 (set (reg:DI 4 si)
        (reg:DI 77)) Test6.f08:12 -1
     (nil))

(insn 40 39 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc95dc27be0 *.LC12>)) Test6.f08:12 -1
     (nil))

(call_insn 41 40 0 (call (mem:QI (symbol_ref:DI ("rffti_") [flags 0x3]  <function_decl 0x7fc95ddfde00 rffti>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:12 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

;; rfftf (&C.1650, &t6, &wsave);

(insn 42 41 43 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:13 -1
     (nil))

(insn 43 42 44 (set (reg:DI 1 dx)
        (reg:DI 78)) Test6.f08:13 -1
     (nil))

(insn 44 43 45 (set (reg:DI 4 si)
        (symbol_ref:DI ("t6.1638") [flags 0x2]  <var_decl 0x7fc95dbfa5a0 t6>)) Test6.f08:13 -1
     (nil))

(insn 45 44 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc95dc27be0 *.LC12>)) Test6.f08:13 -1
     (nil))

(call_insn 46 45 0 (call (mem:QI (symbol_ref:DI ("rfftf_") [flags 0x3]  <function_decl 0x7fc95ddfda00 rfftf>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:13 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

;; _gfortran_cpu_time_4 (&finish);

(insn 47 46 48 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:14 -1
     (nil))

(insn 48 47 49 (set (reg:DI 5 di)
        (reg:DI 79)) Test6.f08:14 -1
     (nil))

(insn 49 48 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:14 -1
     (nil))

(call_insn 50 49 0 (call (mem:QI (symbol_ref:DI ("_gfortran_cpu_time_4") [flags 0x41]  <function_decl 0x7fc95dbedf00 _gfortran_cpu_time_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:14 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

;; D.1674_12 = (integer(kind=8)) i_1;

(insn 51 50 52 (set (reg:SI 80)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Test6.f08:15 -1
     (nil))

(insn 52 51 0 (set (reg:DI 65 [ D.1674 ])
        (sign_extend:DI (reg:SI 80))) Test6.f08:15 -1
     (nil))

;; D.1675_13 = D.1674_12 + -1;

(insn 53 52 0 (parallel [
            (set (reg:DI 66 [ D.1675 ])
                (plus:DI (reg:DI 65 [ D.1674 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:15 -1
     (nil))

;; finish.10_14 = finish;

(insn 54 53 0 (set (reg:SF 67 [ finish.10 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 finish+0 S4 A32])) Test6.f08:15 -1
     (nil))

;; start.11_15 = start;

(insn 55 54 0 (set (reg:SF 68 [ start.11 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 start+0 S4 A64])) Test6.f08:15 -1
     (nil))

;; D.1678_16 = finish.10_14 - start.11_15;

(insn 56 55 0 (set (reg:SF 69 [ D.1678 ])
        (minus:SF (reg:SF 67 [ finish.10 ])
            (reg:SF 68 [ start.11 ]))) Test6.f08:15 -1
     (nil))

;; tresults[D.1675_13] = D.1678_16;

(insn 57 56 0 (set (mem/s/j:SF (plus:DI (plus:DI (mult:DI (reg:DI 66 [ D.1675 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -80 [0xffffffffffffffb0])) [0 tresults S4 A32])
        (reg:SF 69 [ D.1678 ])) Test6.f08:15 -1
     (nil))

;; D.1651_17 = i_1 == 15;

(insn 58 57 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 15 [0xf]))) Test6.f08:6 -1
     (nil))

(insn 59 58 60 (set (reg:QI 81)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:6 -1
     (nil))

(insn 60 59 0 (parallel [
            (set (reg:SI 70 [ D.1651 ])
                (zero_extend:SI (reg:QI 81)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:6 -1
     (nil))

;; i_18 = i_1 + 1;

(insn 61 60 0 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:6 -1
     (nil))

;; if (D.1651_17 != 0)

(insn 62 61 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.1651 ])
            (const_int 0 [0]))) Test6.f08:6 -1
     (nil))

(jump_insn 63 62 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:6 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; 

(code_label 68 67 69 40 "" [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.6.common.filename = &"Test6.f08"[1]{lb: 1 sz: 1};

(insn 70 69 0 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [0 dt_parm.6.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fc95dc27c80 *.LC13>)) Test6.f08:17 -1
     (nil))

;; dt_parm.6.common.line = 17;

(insn 71 70 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [0 dt_parm.6.common.line+0 S4 A64])
        (const_int 17 [0x11])) Test6.f08:17 -1
     (nil))

;; dt_parm.6.common.flags = 128;

(insn 72 71 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [0 dt_parm.6.common.flags+0 S4 A64])
        (const_int 128 [0x80])) Test6.f08:17 -1
     (nil))

;; dt_parm.6.common.unit = 6;

(insn 73 72 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -684 [0xfffffffffffffd54])) [0 dt_parm.6.common.unit+0 S4 A32])
        (const_int 6 [0x6])) Test6.f08:17 -1
     (nil))

;; _gfortran_st_write (&dt_parm.6);

(insn 74 73 75 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 75 74 76 (set (reg:DI 5 di)
        (reg:DI 82)) Test6.f08:17 -1
     (nil))

(call_insn 76 75 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7fc95ddf9900 _gfortran_st_write>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; val.7_19 = 0.0;

(insn 77 76 0 (set (reg:SF 59 [ val.7 ])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0 S4 A32])) Test6.f08:17 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

;; S.8_20 = 1;

(insn 78 77 0 (set (reg:DI 60 [ S.8 ])
        (const_int 1 [0x1])) Test6.f08:17 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; if (S.8_4 > 15)

(insn 80 79 81 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 60 [ S.8 ])
            (const_int 15 [0xf]))) Test6.f08:17 -1
     (nil))

(jump_insn 81 80 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Test6.f08:17 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.1682_21 = S.8_4 + -1;

(insn 83 82 0 (parallel [
            (set (reg:DI 71 [ D.1682 ])
                (plus:DI (reg:DI 60 [ S.8 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

;; D.1683_22 = tresults[D.1682_21];

(insn 84 83 0 (set (reg:SF 72 [ D.1683 ])
        (mem/s/j:SF (plus:DI (plus:DI (mult:DI (reg:DI 71 [ D.1682 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -80 [0xffffffffffffffb0])) [0 tresults S4 A32])) Test6.f08:17 -1
     (nil))

;; val.7_23 = D.1683_22 + val.7_3;

(insn 85 84 0 (set (reg:SF 59 [ val.7 ])
        (plus:SF (reg:SF 59 [ val.7 ])
            (reg:SF 72 [ D.1683 ]))) Test6.f08:17 -1
     (nil))

;; S.8_24 = S.8_4 + 1;

(insn 86 85 0 (parallel [
            (set (reg:DI 60 [ S.8 ])
                (plus:DI (reg:DI 60 [ S.8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 90 89 91 44 "" [0 uses])

(note 91 90 0 NOTE_INSN_BASIC_BLOCK)

;; D.1684_25 = val.7_3 / 1.5e+1;

(insn 92 91 93 (set (reg:SF 83)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0 S4 A32])) Test6.f08:17 -1
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))

(insn 93 92 0 (set (reg:SF 73 [ D.1684 ])
        (div:SF (reg:SF 59 [ val.7 ])
            (reg:SF 83))) Test6.f08:17 -1
     (nil))

;; D.1656 = D.1684_25;

(insn 94 93 0 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 D.1656+0 S4 A32])
        (reg:SF 73 [ D.1684 ])) Test6.f08:17 -1
     (nil))

;; _gfortran_transfer_real_write (&dt_parm.6, &D.1656, 4);

(insn 95 94 96 (parallel [
            (set (reg:DI 84)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 85)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 97 96 98 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) Test6.f08:17 -1
     (nil))

(insn 98 97 99 (set (reg:DI 4 si)
        (reg:DI 84)) Test6.f08:17 -1
     (nil))

(insn 99 98 100 (set (reg:DI 5 di)
        (reg:DI 85)) Test6.f08:17 -1
     (nil))

(call_insn 100 99 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fc95ddeff00 _gfortran_transfer_real_write>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.6);

(insn 101 100 102 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 102 101 103 (set (reg:DI 5 di)
        (reg:DI 86)) Test6.f08:17 -1
     (nil))

(call_insn 103 102 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7fc95ddfd400 _gfortran_st_write_done>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) Test6.f08:6 -1
     (nil))

(insn 6 5 7 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 15 [0xf]))) Test6.f08:6 -1
     (nil))

(jump_insn 7 6 65 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) Test6.f08:6 -1
     (nil)
 -> 68)
;; End of basic block 3 -> ( 4 9)

;; Succ edge  4 (fallthru)
;; Succ edge  9

;; Start of basic block ( 3 8) -> 4
;; Pred edge  3 (fallthru)
;; Pred edge  8
(code_label 65 7 8 4 43 "" [1 uses])

(note 8 65 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:7 -1
     (nil))

(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg:DI 74)) Test6.f08:7 -1
     (nil))

(insn 11 10 12 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:7 -1
     (nil))

(call_insn 12 11 13 4 (call (mem:QI (symbol_ref:DI ("_gfortran_cpu_time_4") [flags 0x41]  <function_decl 0x7fc95dbedf00 _gfortran_cpu_time_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:7 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn 13 12 14 4 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) Test6.f08:8 -1
     (nil))

(insn 14 13 15 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int 2400000 [0x249f00]))) Test6.f08:8 -1
     (nil))

(jump_insn 15 14 33 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Test6.f08:8 -1
     (nil)
 -> 36)
;; End of basic block 4 -> ( 5 7)

;; Succ edge  5 (fallthru)
;; Succ edge  7

;; Start of basic block ( 4 6) -> 5
;; Pred edge  4 (fallthru)
;; Pred edge  6
(code_label 33 15 16 5 42 "" [1 uses])

(note 16 33 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:9 -1
     (nil))

(call_insn 18 17 19 5 (call (mem:QI (symbol_ref:DI ("init_random_seed_") [flags 0x3]  <function_decl 0x7fc95dbed400 init_random_seed>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:9 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 19 18 20 5 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) Test6.f08:10 -1
     (nil))

(insn 20 19 21 5 (set (reg:DI 61 [ D.1670 ])
        (sign_extend:DI (reg:SI 75))) Test6.f08:10 -1
     (nil))

(insn 21 20 22 5 (parallel [
            (set (reg:DI 62 [ D.1671 ])
                (plus:DI (reg:DI 61 [ D.1670 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:10 -1
     (nil))

(insn 22 21 23 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:10 -1
     (nil))

(call_insn 23 22 24 5 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("random_normal_") [flags 0x3]  <function_decl 0x7fc95dbed100 random_normal>) [0 S1 A8])
            (const_int 0 [0]))) Test6.f08:10 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 24 23 25 5 (set (reg:SF 63 [ D.1672 ])
        (reg:SF 21 xmm0)) Test6.f08:10 -1
     (nil))

(insn 25 24 26 5 (set (mem/s/j:SF (plus:DI (mult:DI (reg:DI 62 [ D.1671 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("t6.1638") [flags 0x2]  <var_decl 0x7fc95dbfa5a0 t6>)) [0 t6 S4 A32])
        (reg:SF 63 [ D.1672 ])) Test6.f08:10 -1
     (nil))

(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (const_int 2400000 [0x249f00]))) Test6.f08:8 -1
     (nil))

(insn 27 26 28 5 (set (reg:QI 76)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:8 -1
     (nil))

(insn 28 27 29 5 (parallel [
            (set (reg:SI 64 [ D.1648 ])
                (zero_extend:SI (reg:QI 76)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:8 -1
     (nil))

(insn 29 28 30 5 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:8 -1
     (nil))

(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.1648 ])
            (const_int 0 [0]))) Test6.f08:8 -1
     (nil))

(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Test6.f08:8 -1
     (nil)
 -> 36)
;; End of basic block 5 -> ( 7 6)

;; Succ edge  7
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 32 31 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 34 32 35 6 (set (pc)
        (label_ref 33)) Test6.f08:8 -1
     (nil)
 -> 33)
;; End of basic block 6 -> ( 5)

;; Succ edge  5

(barrier 35 34 36)

;; Start of basic block ( 4 5) -> 7
;; Pred edge  4
;; Pred edge  5
(code_label 36 35 37 7 41 "" [2 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 (parallel [
            (set (reg:DI 77)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:12 -1
     (nil))

(insn 39 38 40 7 (set (reg:DI 4 si)
        (reg:DI 77)) Test6.f08:12 -1
     (nil))

(insn 40 39 41 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc95dc27be0 *.LC12>)) Test6.f08:12 -1
     (nil))

(call_insn 41 40 42 7 (call (mem:QI (symbol_ref:DI ("rffti_") [flags 0x3]  <function_decl 0x7fc95ddfde00 rffti>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:12 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 42 41 43 7 (parallel [
            (set (reg:DI 78)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:13 -1
     (nil))

(insn 43 42 44 7 (set (reg:DI 1 dx)
        (reg:DI 78)) Test6.f08:13 -1
     (nil))

(insn 44 43 45 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("t6.1638") [flags 0x2]  <var_decl 0x7fc95dbfa5a0 t6>)) Test6.f08:13 -1
     (nil))

(insn 45 44 46 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc95dc27be0 *.LC12>)) Test6.f08:13 -1
     (nil))

(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:DI ("rfftf_") [flags 0x3]  <function_decl 0x7fc95ddfda00 rfftf>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:13 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 47 46 48 7 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:14 -1
     (nil))

(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg:DI 79)) Test6.f08:14 -1
     (nil))

(insn 49 48 50 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) Test6.f08:14 -1
     (nil))

(call_insn 50 49 51 7 (call (mem:QI (symbol_ref:DI ("_gfortran_cpu_time_4") [flags 0x41]  <function_decl 0x7fc95dbedf00 _gfortran_cpu_time_4>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:14 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (nil))))

(insn 51 50 52 7 (set (reg:SI 80)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) Test6.f08:15 -1
     (nil))

(insn 52 51 53 7 (set (reg:DI 65 [ D.1674 ])
        (sign_extend:DI (reg:SI 80))) Test6.f08:15 -1
     (nil))

(insn 53 52 54 7 (parallel [
            (set (reg:DI 66 [ D.1675 ])
                (plus:DI (reg:DI 65 [ D.1674 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:15 -1
     (nil))

(insn 54 53 55 7 (set (reg:SF 67 [ finish.10 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 finish+0 S4 A32])) Test6.f08:15 -1
     (nil))

(insn 55 54 56 7 (set (reg:SF 68 [ start.11 ])
        (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 start+0 S4 A64])) Test6.f08:15 -1
     (nil))

(insn 56 55 57 7 (set (reg:SF 69 [ D.1678 ])
        (minus:SF (reg:SF 67 [ finish.10 ])
            (reg:SF 68 [ start.11 ]))) Test6.f08:15 -1
     (nil))

(insn 57 56 58 7 (set (mem/s/j:SF (plus:DI (plus:DI (mult:DI (reg:DI 66 [ D.1675 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -80 [0xffffffffffffffb0])) [0 tresults S4 A32])
        (reg:SF 69 [ D.1678 ])) Test6.f08:15 -1
     (nil))

(insn 58 57 59 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 15 [0xf]))) Test6.f08:6 -1
     (nil))

(insn 59 58 60 7 (set (reg:QI 81)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) Test6.f08:6 -1
     (nil))

(insn 60 59 61 7 (parallel [
            (set (reg:SI 70 [ D.1651 ])
                (zero_extend:SI (reg:QI 81)))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:6 -1
     (nil))

(insn 61 60 62 7 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:6 -1
     (nil))

(insn 62 61 63 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ D.1651 ])
            (const_int 0 [0]))) Test6.f08:6 -1
     (nil))

(jump_insn 63 62 64 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) Test6.f08:6 -1
     (nil)
 -> 68)
;; End of basic block 7 -> ( 9 8)

;; Succ edge  9
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 64 63 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 66 64 67 8 (set (pc)
        (label_ref 65)) Test6.f08:6 -1
     (nil)
 -> 65)
;; End of basic block 8 -> ( 4)

;; Succ edge  4

(barrier 67 66 68)

;; Start of basic block ( 3 7) -> 9
;; Pred edge  3
;; Pred edge  7
(code_label 68 67 69 9 40 "" [2 uses])

(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 9 (set (mem/s/f/j/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [0 dt_parm.6.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fc95dc27c80 *.LC13>)) Test6.f08:17 -1
     (nil))

(insn 71 70 72 9 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -672 [0xfffffffffffffd60])) [0 dt_parm.6.common.line+0 S4 A64])
        (const_int 17 [0x11])) Test6.f08:17 -1
     (nil))

(insn 72 71 73 9 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [0 dt_parm.6.common.flags+0 S4 A64])
        (const_int 128 [0x80])) Test6.f08:17 -1
     (nil))

(insn 73 72 74 9 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -684 [0xfffffffffffffd54])) [0 dt_parm.6.common.unit+0 S4 A32])
        (const_int 6 [0x6])) Test6.f08:17 -1
     (nil))

(insn 74 73 75 9 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 75 74 76 9 (set (reg:DI 5 di)
        (reg:DI 82)) Test6.f08:17 -1
     (nil))

(call_insn 76 75 77 9 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7fc95ddf9900 _gfortran_st_write>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 77 76 78 9 (set (reg:SF 59 [ val.7 ])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0 S4 A32])) Test6.f08:17 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 78 77 87 9 (set (reg:DI 60 [ S.8 ])
        (const_int 1 [0x1])) Test6.f08:17 -1
     (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 9 11) -> 10
;; Pred edge  9 (fallthru)
;; Pred edge  11
(code_label 87 78 79 10 45 "" [1 uses])

(note 79 87 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 60 [ S.8 ])
            (const_int 15 [0xf]))) Test6.f08:17 -1
     (nil))

(jump_insn 81 80 82 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) Test6.f08:17 -1
     (nil)
 -> 90)
;; End of basic block 10 -> ( 12 11)

;; Succ edge  12
;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 11 (parallel [
            (set (reg:DI 71 [ D.1682 ])
                (plus:DI (reg:DI 60 [ S.8 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 84 83 85 11 (set (reg:SF 72 [ D.1683 ])
        (mem/s/j:SF (plus:DI (plus:DI (mult:DI (reg:DI 71 [ D.1682 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -80 [0xffffffffffffffb0])) [0 tresults S4 A32])) Test6.f08:17 -1
     (nil))

(insn 85 84 86 11 (set (reg:SF 59 [ val.7 ])
        (plus:SF (reg:SF 59 [ val.7 ])
            (reg:SF 72 [ D.1683 ]))) Test6.f08:17 -1
     (nil))

(insn 86 85 88 11 (parallel [
            (set (reg:DI 60 [ S.8 ])
                (plus:DI (reg:DI 60 [ S.8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(jump_insn 88 86 89 11 (set (pc)
        (label_ref 87)) Test6.f08:17 -1
     (nil)
 -> 87)
;; End of basic block 11 -> ( 10)

;; Succ edge  10

(barrier 89 88 90)

;; Start of basic block ( 10) -> 12
;; Pred edge  10
(code_label 90 89 91 12 44 "" [1 uses])

(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 12 (set (reg:SF 83)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0 S4 A32])) Test6.f08:17 -1
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))

(insn 93 92 94 12 (set (reg:SF 73 [ D.1684 ])
        (div:SF (reg:SF 59 [ val.7 ])
            (reg:SF 83))) Test6.f08:17 -1
     (nil))

(insn 94 93 95 12 (set (mem/c/i:SF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 D.1656+0 S4 A32])
        (reg:SF 73 [ D.1684 ])) Test6.f08:17 -1
     (nil))

(insn 95 94 96 12 (parallel [
            (set (reg:DI 84)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 96 95 97 12 (parallel [
            (set (reg:DI 85)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 97 96 98 12 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) Test6.f08:17 -1
     (nil))

(insn 98 97 99 12 (set (reg:DI 4 si)
        (reg:DI 84)) Test6.f08:17 -1
     (nil))

(insn 99 98 100 12 (set (reg:DI 5 di)
        (reg:DI 85)) Test6.f08:17 -1
     (nil))

(call_insn 100 99 101 12 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fc95ddeff00 _gfortran_transfer_real_write>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 101 100 102 12 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) Test6.f08:17 -1
     (nil))

(insn 102 101 103 12 (set (reg:DI 5 di)
        (reg:DI 86)) Test6.f08:17 -1
     (nil))

(call_insn 103 102 104 12 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7fc95ddfd400 _gfortran_st_write_done>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:17 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(code_label 104 103 105 13 39 "" [0 uses])

(note 105 104 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function main (main)

main (integer(kind=4) argc, character(kind=1) * * argv)
{
  static integer(kind=4) options.9[8] = {68, 511, 0, 0, 0, 1, 0, 1};
  integer(kind=4) D.1662;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  _gfortran_set_args (argc_1(D), argv_2(D));
  _gfortran_set_options (8, &options.9[0]);
  test6 ();
  D.1662_3 = 0;
  return D.1662_3;
  # SUCC: EXIT

}



Partition map 

Partition 1 (argc_1(D) - 1 )
Partition 2 (argv_2(D) - 2 )
Partition 3 (D.1662_3 - 3 )


Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )


Live on entry to BB2 : argc_1(D)  argv_2(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )
Partition 2 (D.1662_3 - 3 )

main (integer(kind=4) argc, character(kind=1) * * argv)
{
  static integer(kind=4) options.9[8] = {68, 511, 0, 0, 0, 1, 0, 1};
  integer(kind=4) D.1662;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  _gfortran_set_args (argc_1(D), argv_2(D));
  _gfortran_set_options (8, &options.9[0]);
  test6 ();
  D.1662_3 = 0;
  return D.1662_3;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; _gfortran_set_args (argc_1(D), argv_2(D));

(insn 7 6 8 (set (reg:DI 61)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 argv+0 S8 A64])) Test6.f08:18 -1
     (nil))

(insn 8 7 9 (set (reg:SI 62)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 argc+0 S4 A32])) Test6.f08:18 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (reg:DI 61)) Test6.f08:18 -1
     (nil))

(insn 10 9 11 (set (reg:SI 5 di)
        (reg:SI 62)) Test6.f08:18 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("_gfortran_set_args") [flags 0x41]  <function_decl 0x7fc95ddde700 _gfortran_set_args>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

;; _gfortran_set_options (8, &options.9[0]);

(insn 12 11 13 (set (reg:DI 4 si)
        (symbol_ref:DI ("options.9.1661") [flags 0x2]  <var_decl 0x7fc95dbfab40 options.9>)) Test6.f08:18 -1
     (nil))

(insn 13 12 14 (set (reg:SI 5 di)
        (const_int 8 [0x8])) Test6.f08:18 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("_gfortran_set_options") [flags 0x41]  <function_decl 0x7fc95ddde900 _gfortran_set_options>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

;; test6 ();

(call_insn 15 14 0 (call (mem:QI (symbol_ref:DI ("MAIN__") [flags 0x3]  <function_decl 0x7fc95dbeda00 test6>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (nil))

;; D.1662_3 = 0;

(insn 16 15 0 (set (reg:SI 59 [ D.1662 ])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil))

;; return D.1662_3;

(insn 17 16 18 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.1662 ])) Test6.f08:18 -1
     (nil))

(jump_insn 18 17 19 (set (pc)
        (label_ref 0)) Test6.f08:18 -1
     (nil))

(barrier 19 18 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) Test6.f08:18 -1
     (nil))

(insn 3 2 4 2 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) Test6.f08:18 -1
     (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 (set (reg:DI 61)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 argv+0 S8 A64])) Test6.f08:18 -1
     (nil))

(insn 8 7 9 3 (set (reg:SI 62)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 argc+0 S4 A32])) Test6.f08:18 -1
     (nil))

(insn 9 8 10 3 (set (reg:DI 4 si)
        (reg:DI 61)) Test6.f08:18 -1
     (nil))

(insn 10 9 11 3 (set (reg:SI 5 di)
        (reg:SI 62)) Test6.f08:18 -1
     (nil))

(call_insn 11 10 12 3 (call (mem:QI (symbol_ref:DI ("_gfortran_set_args") [flags 0x41]  <function_decl 0x7fc95ddde700 _gfortran_set_args>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 12 11 13 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("options.9.1661") [flags 0x2]  <var_decl 0x7fc95dbfab40 options.9>)) Test6.f08:18 -1
     (nil))

(insn 13 12 14 3 (set (reg:SI 5 di)
        (const_int 8 [0x8])) Test6.f08:18 -1
     (nil))

(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("_gfortran_set_options") [flags 0x41]  <function_decl 0x7fc95ddde900 _gfortran_set_options>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(call_insn 15 14 16 3 (call (mem:QI (symbol_ref:DI ("MAIN__") [flags 0x3]  <function_decl 0x7fc95dbeda00 test6>) [0 S1 A8])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil)
    (nil))

(insn 16 15 17 3 (set (reg:SI 59 [ D.1662 ])
        (const_int 0 [0])) Test6.f08:18 -1
     (nil))

(insn 17 16 18 3 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.1662 ])) Test6.f08:18 -1
     (nil))

(jump_insn 18 17 19 3 (set (pc)
        (label_ref 20)) Test6.f08:18 -1
     (nil)
 -> 20)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 19 18 25)

;; Start of basic block () -> 4
(note 25 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 25 23 4 (clobber (reg/i:SI 0 ax)) Test6.f08:18 -1
     (nil))

(insn 23 22 20 4 (clobber (reg:SI 60 [ <retval> ])) Test6.f08:18 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 20 23 26 5 48 "" [1 uses])

(note 26 20 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 26 24 5 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) Test6.f08:18 -1
     (nil))

(insn 24 21 0 5 (use (reg/i:SI 0 ax)) Test6.f08:18 -1
     (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

